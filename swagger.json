{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "API 1.0",
    "description": ""
  },
  "host": "pub-api-project.company.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v{version}/access-types/{category}/value": {
      "get": {
        "tags": [
          "AccessManager"
        ],
        "summary": "Get allowed AccessType value for user by category",
        "description": "This API endpoint send value allowed access type by catregory.",
        "operationId": "AccessManager_GetValueAccessTypeByCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "This is information about category AccessType.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "This is information about description AccessType.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "startsWith",
            "in": "query",
            "description": "This is information about name AccessType.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/access-types/{category}/allowed": {
      "get": {
        "tags": [
          "AccessManager"
        ],
        "summary": "Get allowed AccessType for user by category",
        "description": "This API endpoint send allowed access type by catregory.",
        "operationId": "AccessManager_GetAllowedAccessTypeByCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "This is information about category AccessType.",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "This is information about description AccessType.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "startsWith",
            "in": "query",
            "description": "This is information about name AccessType.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/ams/settings": {
      "get": {
        "tags": [
          "AccountManagementSettings"
        ],
        "summary": "Get AMS providers",
        "description": "Get AMS providers",
        "operationId": "AccountManagementSettings_GetSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets AMS enabled providers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountOpeningProviderResource"
              }
            }
          },
          "409": {
            "description": "An error occurred in attempt to get AMS providers"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/ams/configuration": {
      "get": {
        "tags": [
          "AccountManagementSettings"
        ],
        "summary": "Get Account Opening configuration",
        "description": "Get AMS providers",
        "operationId": "AccountManagementSettings_GetConfiguration",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Account Opening configuration",
            "schema": {
              "$ref": "#/definitions/AccountOpeningConfigurationResource"
            }
          },
          "409": {
            "description": "An error occurred in attempt to get configuration"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/ams/settings/audit": {
      "get": {
        "tags": [
          "AccountManagementSettings"
        ],
        "summary": "Get AMS audit providers",
        "description": "Get AMS audit providers",
        "operationId": "AccountManagementSettings_GetSettingsAudit",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets AMS enabled providers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountOpeningProviderResource"
              }
            }
          },
          "409": {
            "description": "An error occurred in attempt to get AMS providers"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/ams/settings/forms/{formType}": {
      "get": {
        "tags": [
          "AccountManagementSettings"
        ],
        "summary": "Get AMS account opening form settings",
        "description": "Get AMS account opening form settings",
        "operationId": "AccountManagementSettings_GetFormSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "formType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "JotForm",
              "Direct",
              "FcStone"
            ]
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets account opening from settings",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "409": {
            "description": "An error occurred in attempt to get AMS account opening form settings"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/{requestId}": {
      "get": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Get specific account request",
        "description": "This endpoint enables you to retrieve a specific account request.",
        "operationId": "AccountRequests_GetAccountOpeningRequestById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the account request whose information must be returned",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the information about the request is returned",
            "schema": {
              "$ref": "#/definitions/AccountRequestResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/{requestId}/forms": {
      "get": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Get PDF files associated with account request",
        "description": "This endpoint enables you to retrieve all PDF files associated with an account opening request.",
        "operationId": "AccountRequests_GetAccountPDFFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the request whose PDF files must be retrieved",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the PDF files is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetAccountPDFFileDto"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/account-requests": {
      "get": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Get user's pending account requests",
        "description": "This endpoint enables you to retrieve a user's pending account requests.",
        "operationId": "AccountRequests_GetUserPendingAccountOpeningRequest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user whose pending requests must be retrieved",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeSystemStatuses",
            "in": "query",
            "description": "Indicates that the response would include not only user-related statuses (New, Rejected, RejectedByClearing), but also system-related statuses (Submitted, Approved, ProcessingByClearing)",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the user's pending account requests is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountRequestResource"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingAccount}/account-requests": {
      "get": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Get requests of an account",
        "description": "This endpoint enables you to retrieve all requests associated with a specific trading account by specified filter.",
        "operationId": "AccountRequests_GetAccountRequests",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingAccount",
            "in": "path",
            "description": "ID of the trading account at the clearing firm",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by account request type",
            "required": false,
            "type": "string",
            "enum": [
              "None",
              "Open",
              "Update",
              "Close",
              "ReOpen"
            ]
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Filter by account request statuses.\r\n            In case the list of statuses is empty, the method will return requests with the following statuses: New, Rejected, RejectedByClearing. For backward compatibility",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "None",
                "New",
                "Submitted",
                "Approved",
                "Rejected",
                "ProcessingByClearing",
                "RejectedByClearing",
                "ApprovedByClearing",
                "Canceled",
                "SubmittedByBroker"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the associated account requests is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountRequestResource"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/{requestId}/history": {
      "get": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Get account request's state history",
        "description": "This endpoint enables you to retrieve the history of a particular account request's state.",
        "operationId": "AccountRequests_GetAccountOpeningRequestsHistory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the request whose history must be retrieved",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Parameter by which the history must be sorted",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Indicates if the returned history must be sorted in descending (true) or ascending (false) order",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the history of the request's state is returned",
            "schema": {
              "$ref": "#/definitions/PagingResult[AccountRequestVersionResource]"
            }
          },
          "400": {
            "description": "Filter query is invalid or contains unsupported operations"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests": {
      "get": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Get all account requests",
        "description": "This endpoint enables you to retrieve all account requests created by traders in your brokerage firm.",
        "operationId": "AccountRequests_GetAccountRequestsPage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Parameter by which the returned requests must be sorted",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Indicates if the returned requests must be sorted in descending (true) or ascending (false) order",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of requests that must be returned",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "Open",
              "Update",
              "Close",
              "ReOpen"
            ]
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filters returned requests by status",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "None",
                "New",
                "Submitted",
                "Approved",
                "Rejected",
                "ProcessingByClearing",
                "RejectedByClearing",
                "ApprovedByClearing",
                "Canceled",
                "SubmittedByBroker"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter query used to retrieve only those orders that satisfy the conditions of the query.",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing all account requests is returned",
            "schema": {
              "$ref": "#/definitions/PagingResult[AccountRequestResource]"
            }
          },
          "400": {
            "description": "Filter query is invalid or contains unsupported operations"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/{requestId}/cancel": {
      "put": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Cancel account request",
        "description": "This endpoint enables you to cancel an account opening request.",
        "operationId": "AccountRequests_CancelAccountRequestAsync",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the request that needs to be cancelled",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON data containing information about the request cancellation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelRequestResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the account request was successfully cancelled"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/{requestId}/reject": {
      "put": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Reject account request",
        "description": "This endpoint enables you to reject an account opening request.",
        "operationId": "AccountRequests_RejectAccountRequestAsync",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the request that needs to be rejected",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON data containing information about the request rejection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectRequestResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the account request was successfully rejected"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/{requestId}/submit": {
      "put": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Submit account request",
        "description": "This endpoint enables you to submit an account request (step 2 of 3).",
        "operationId": "AccountRequests_SubmitAccountRequest",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the request that needs to be submitted",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON data containing information about the submitted request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitRequestResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the account request was successfully submitted"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/{requestId}/verify": {
      "put": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Verify account request data",
        "description": "This endpoint enables you to verify account request data.",
        "operationId": "AccountRequests_VerifyAccountRequest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the request that needs to be verified",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/{requestId}/approve": {
      "put": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Approve account request",
        "description": "This endpoint enables you to approve an account opening request (step 3 of 3).",
        "operationId": "AccountRequests_ApproveAccountRequestAsync",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the request that needs to be approved",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON data containing information about the request approval",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApproveRequestResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the account request was successfully approved"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/close": {
      "post": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Create account closing request",
        "description": "This endpoint enables you to create an account closing request.",
        "operationId": "AccountRequests_CreateCloseAccountRequest",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "JSON data containing information about the account closing request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCloseAccountRequestResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing information about the request is returned",
            "schema": {
              "$ref": "#/definitions/AccountRequestResource"
            }
          },
          "409": {
            "description": "Unable to create an account closing request"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/update": {
      "post": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Create account modification request",
        "description": "This endpoint enables you to create an account modification request.",
        "operationId": "AccountRequests_CreateUpdateAccountRequest",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "JSON data containing updated information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateAccountRequestResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing updated information is returned",
            "schema": {
              "$ref": "#/definitions/AccountRequestResource"
            }
          },
          "409": {
            "description": "Unable to create an account modification request"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/user/{userId}/account-requests/open": {
      "post": {
        "tags": [
          "AccountRequests"
        ],
        "summary": "Create account opening request",
        "description": "This endpoint enables you to create an account opening request (step 1 of 3).",
        "operationId": "AccountRequests_CreateOpenAccountRequest",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user on whose behalf the account opening request is being created",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON data containing information about the new request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOpenAccountRequestResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the information about the new request is returned",
            "schema": {
              "$ref": "#/definitions/AccountRequestResource"
            }
          },
          "409": {
            "description": "Unable to create a new account opening request. Invalid parameters: ClearingProvider or FormType"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/account-transfer-requests": {
      "get": {
        "tags": [
          "AccountTransferRequests"
        ],
        "summary": "Get user's pending account transfer requests",
        "description": "This endpoint enables you to retrieve a user's pending account transfer requests.",
        "operationId": "AccountTransferRequests_GetUserPendingAccountOpeningRequest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user whose pending requests must be retrieved",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the user's pending account requests is returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountTransferResource"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-transfer-requests/{requestId}/submit": {
      "put": {
        "tags": [
          "AccountTransferRequests"
        ],
        "summary": "Submit account transfer request",
        "description": "This endpoint enables you to submit an account transfer request.",
        "operationId": "AccountTransferRequests_SubmitAccountTransferRequest",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the request that needs to be submitted",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON data containing information about the submitted request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitAccountTransferRequestResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the account transfer request was successfully submitted"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-transfer-requests/{accountId}": {
      "post": {
        "tags": [
          "AccountTransferRequests"
        ],
        "summary": "Create account transfer request",
        "description": "This endpoint enables you to create an account transfer request.",
        "operationId": "AccountTransferRequests_CreateAccountTransferRequest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account number of account which needs to be transferred",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the account transfer request was successfully created"
          },
          "409": {
            "description": "Unsuccessful request, the account transfer request was not created"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-transfer-requests/{requestId}/cancel": {
      "post": {
        "tags": [
          "AccountTransferRequests"
        ],
        "summary": "Cancel account transfer request",
        "description": "This endpoint enables you to cancel an account transfer request.",
        "operationId": "AccountTransferRequests_CancelAccountTransferRequest",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the request that needs to be cancelled",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON data containing information about the cancelled request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyAccountTransferRequestResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the account transfer request was successfully cancelled"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/ach-relationships/{id}": {
      "get": {
        "tags": [
          "AchRelationships"
        ],
        "summary": "Get a specific ACH relationship",
        "description": "This endpoint enables you to retrieve information about a specific ACH relationship of some trading account.",
        "operationId": "AchRelationships_GetAchRelationship",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose ACH relationship must be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the ACH relationship whose information must be retrieved.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON object containing information about the ACH relationship is returned.",
            "schema": {
              "$ref": "#/definitions/AchRelationshipResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "put": {
        "tags": [
          "AchRelationships"
        ],
        "summary": "Update an ACH relationship",
        "description": "This endpoint enables you to update an existing ACH relationship of a specific trading account.",
        "operationId": "AchRelationships_ModifyAchRelationship",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose ACH relationship must be updated.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the ACH relatioship that must be updated.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON object containing the new name of the linked bank.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAchRelationshipResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, updated ACH relationship is returned.",
            "schema": {
              "$ref": "#/definitions/AchRelationshipResource"
            }
          },
          "409": {
            "description": "Failed to update the ACH relationship."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "AchRelationships"
        ],
        "summary": "Remove an ACH relationship",
        "description": "This endpoint enables you to unlink a banking account from a specific trading account.",
        "operationId": "AchRelationships_CloseBankAchRelationship",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose ACH relationship must be removed.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the ACH relationship that must be removed.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Reason for removing the ACH relationship.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the ACH relationship has been removed.",
            "schema": {
              "$ref": "#/definitions/AchRelationshipResource"
            }
          },
          "409": {
            "description": "Failed to remove the ACH relationship."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/ach-relationships/default": {
      "get": {
        "tags": [
          "AchRelationships"
        ],
        "summary": "Get the default (selected) ACH relationship",
        "description": "This endpoint enables you to get the default (selected) ACH relationship bound to an existing trading account.",
        "operationId": "AchRelationships_GetDefaultAchRelationship",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose default ACH relationship is to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the default ACH relationship is returned.",
            "schema": {
              "$ref": "#/definitions/AchRelationshipResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/ach-relationships": {
      "get": {
        "tags": [
          "AchRelationships"
        ],
        "summary": "Get an account's ACH relationships",
        "description": "This endpoint enables you to retrieve a list of all ACH relationships bound to a specific trading account.",
        "operationId": "AchRelationships_GetAchRelationshipsPage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose ACH relationships must be listed.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (all ACH relationships are split in pages).",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Parameter by which the returned ACH relationships must be sorted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Determines if returned ACH relationships must be sorted in descending or ascending order.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filters ACH relationships by status.",
            "required": false,
            "type": "string",
            "enum": [
              "Pending",
              "Approved",
              "Canceled",
              "Error",
              "PendingCancel",
              "PendingApproval"
            ]
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, a collection of ACH relationships is returned.",
            "schema": {
              "$ref": "#/definitions/PagingResult[AchRelationshipResource]"
            }
          },
          "400": {
            "description": "Filter query is invalid or contains unsupported operations."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "AchRelationships"
        ],
        "summary": "Create a new ACH relationship",
        "description": "This endpoint enables you to create a new ACH relationship.",
        "operationId": "AchRelationships_ModifyAchRelationship",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account to which the new ACH relationship will be bound.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON object containing all parameters required for a new ACH relationship.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAchRelationshipResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, a new ACH relationship has been created.",
            "schema": {
              "$ref": "#/definitions/AchRelationshipResource"
            }
          },
          "409": {
            "description": "Failed to create a new ACH relationship."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/ach-relationships/plaid": {
      "post": {
        "tags": [
          "AchRelationships"
        ],
        "summary": "Create ACH relationships from a PLAID link",
        "description": "This endpoint enables you to create multiple accounts from a single PLAID link.",
        "operationId": "AchRelationships_CreateAchRelationshipsWithPlaid",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account to which the new ACH relationships will be bound.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON object containing PLAID data to identify the bank and accounts.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAchRelationshipsPlaidResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, ACH relationships have been created.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AchRelationshipResource"
              }
            }
          },
          "409": {
            "description": "Failed to create ACH relationships."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/ach-relationships/{id}/approve": {
      "post": {
        "tags": [
          "AchRelationships"
        ],
        "summary": "Approve an ACH relationship",
        "description": "This endpoint enables you to approve a new ACH relationship.",
        "operationId": "AchRelationships_ApproveBankAchRelationship",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose ACH relationship is to be approved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the ACH relationship that is to be approved.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON object containing two charges from the banking statement.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApproveAchRelationshipResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the ACH relationship has been approved.",
            "schema": {
              "$ref": "#/definitions/AchRelationshipResource"
            }
          },
          "409": {
            "description": "Failed to approve the ACH relationship."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/ach-relationships/{id}/default": {
      "post": {
        "tags": [
          "AchRelationships"
        ],
        "summary": "Set the default (selected) ACH relationship",
        "description": "This endpoint enables you to s et the default (selected) ACH relationship for an existing trading account.",
        "operationId": "AchRelationships_SetDefaultAchRelationship",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose default ACH relationship must be set.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the ACH relationship that will from now on be the default one.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the default ACH relationship has been set."
          },
          "409": {
            "description": "Failed to set the default ACH relationship for the specified trading account."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/agreements": {
      "get": {
        "tags": [
          "Agreements"
        ],
        "summary": "Get list of unsigned agreements",
        "description": "Returns list of unsigned agreements for specific user.",
        "operationId": "Agreements_GetUnsignedAgreements",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal ID of user.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of usigned agreements",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AgreementItemResource"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/agreements/{agreementId}/sign": {
      "post": {
        "tags": [
          "Agreements"
        ],
        "summary": "Signs the platform agreement",
        "description": "Signs the platform agreement.",
        "operationId": "Agreements_SignPlatformAgreement",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal ID of user.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "agreementId",
            "in": "path",
            "description": "Internal ID of platform agreement.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Platform agreements succesfully signed"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/applications/spa/settings": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get SPA Application Settings",
        "operationId": "Applications_GetSPAApplicationSettings_SwaggerAnonymous",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data is returned, containing settings of SPA application.",
            "schema": {
              "$ref": "#/definitions/SPAApplicationSettings"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/applications/mobile/settings": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get Mobile Application Settings",
        "operationId": "Applications_GetMobileApplicationSettings_SwaggerAnonymous",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data is returned, containing settings of mobile application.",
            "schema": {
              "$ref": "#/definitions/MobileApplicationSettings"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/assets/security-images": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve the security images",
        "description": "This endpoint enables you to retrieve the security images.",
        "operationId": "Assets_GetSecurityImagesList_SwaggerAnonymous",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "security images",
            "schema": {
              "$ref": "#/definitions/ResourceBasedResponse[IList[SecurityImages]]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/assets/secret-questions": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve the secret questions",
        "description": "This endpoint enables you to retrieve the secret questions.",
        "operationId": "Assets_GetSecurityQuestionsList_SwaggerAnonymous",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "secret questions",
            "schema": {
              "$ref": "#/definitions/ResourceBasedResponse[IEnumerable[ISecretQuestion]]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/password/secret-question": {
      "get": {
        "tags": [
          "ChangePassword"
        ],
        "summary": "Retrieve the user's secret question",
        "description": "This endpoint enables you to retrieve the user's secret question for which the answer must be provided in the first step of the password reset process.",
        "operationId": "ChangePassword_GetUserSecretQuestion_SwaggerAnonymous",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The login or the email of the user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON web token",
            "schema": {
              "$ref": "#/definitions/ResourceBasedResponse[String]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/pincode/change": {
      "put": {
        "tags": [
          "ChangePassword"
        ],
        "summary": "Set the new PIN Code",
        "description": "This endpoint enables you to specify the user's new PIN Code.",
        "operationId": "ChangePassword_ChangePin_SwaggerAnonymous",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resource",
            "in": "body",
            "description": "JSON object containing the token and the user's new PIN Code.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePinResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON web token",
            "schema": {
              "$ref": "#/definitions/ResourceBasedResponse"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/passwords/reset": {
      "put": {
        "tags": [
          "ChangePassword"
        ],
        "summary": "Set the new password",
        "description": "This endpoint enables you to specify the user's new password (step 3 out of 3).",
        "operationId": "ChangePassword_ChangePassword_SwaggerAnonymous",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resource",
            "in": "body",
            "description": "JSON object containing the token and the user's new password.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON web token",
            "schema": {
              "$ref": "#/definitions/ResourceBasedResponse"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/secret-question/reset": {
      "put": {
        "tags": [
          "ChangePassword"
        ],
        "summary": "Reset the user's secret question",
        "description": "This endpoint enables you to reset the user's secret question.",
        "operationId": "ChangePassword_ResetUserSecretQuestion_SwaggerAnonymous",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resource",
            "in": "body",
            "description": "JSON object containing the confirmation code received by email, question id and answer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestResetSecretQuestion"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON web token",
            "schema": {
              "$ref": "#/definitions/ResourceBasedResponse"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/password/reset": {
      "post": {
        "tags": [
          "ChangePassword"
        ],
        "summary": "Request password reset",
        "description": "This endpoint enables you to reset the password of an existing user account (step 1 out of 3).",
        "operationId": "ChangePassword_ForgotPassword_SwaggerAnonymous",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resource",
            "in": "body",
            "description": "JSON object containing the user's ID and the answer to a secret question.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestChangePasswordResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON web token",
            "schema": {
              "$ref": "#/definitions/ResourceBasedResponse"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/password/reset/code": {
      "post": {
        "tags": [
          "ChangePassword"
        ],
        "summary": "Generate a token using the confirmation code",
        "description": "This endpoint enables you to generate a token using the confirmation code received by email during the first step of the password reset process (step 2 out of 3).",
        "operationId": "ChangePassword_AcceptChangePasswordCode_SwaggerAnonymous",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resource",
            "in": "body",
            "description": "JSON object containing the confirmation code recevied by email.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptPasswordCodeResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON web token",
            "schema": {
              "$ref": "#/definitions/ResourceBasedResponse[String]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        },
        "deprecated": true
      }
    },
    "/v{version}/users/identifiers/reset/code": {
      "post": {
        "tags": [
          "ChangePassword"
        ],
        "summary": "Generate a token using the confirmation code",
        "description": "This endpoint enables you to generate a token using the confirmation code received by email during the first step of the identifier reset process.",
        "operationId": "ChangePassword_AcceptCode_SwaggerAnonymous",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resource",
            "in": "body",
            "description": "JSON object containing the confirmation code recevied by email and identifier type.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptCodeResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON web token",
            "schema": {
              "$ref": "#/definitions/ResourceBasedResponse[String]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/countries": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get countries list",
        "description": "Get system countries list",
        "operationId": "Country_GetCountries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Countries collection",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CountryMapModel"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingAccount}/documents/{id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get a specific document",
        "description": "This endpoint enables you to retrieve a specific document of a specific trading account.",
        "operationId": "Documents_GetAccountDocumentId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingAccount",
            "in": "path",
            "description": "ID of the trading account at the clearing firm.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the target document.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the target document is returned.",
            "schema": {
              "$ref": "#/definitions/DocumentResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete a document",
        "description": "This endpoint enables you to delete a specific document of a specific trading account.",
        "operationId": "Documents_DeleteAccountDocument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingAccount",
            "in": "path",
            "description": "ID of the trading account whose document must be removed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document that must be removed.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the document was successfully deleted."
          },
          "409": {
            "description": "The document was not found or it does not belong to the specified trading account."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/{requestId}/documents/{id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get a specific document",
        "description": "This endpoint enables you to retrieve a specific document of a specific trading account.",
        "operationId": "Documents_GetRequestDocumentId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the account request at the app.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the target document.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the target document is returned.",
            "schema": {
              "$ref": "#/definitions/DocumentResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete a document",
        "description": "This endpoint enables you to delete a specific document of a specific trading account.",
        "operationId": "Documents_DeleteRequestDocument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the account request whose document must be removed.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document that must be removed.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the document was successfully deleted."
          },
          "409": {
            "description": "The document was not found or it does not belong to the specified account request."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingAccount}/documents": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get electronic documents of an account",
        "description": "This endpoint enables you to retrieve all electronic documents generated by the clearing firm for a specific trading account.",
        "operationId": "Documents_GetAccountDocumentsPage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingAccount",
            "in": "path",
            "description": "ID of the trading account at the clearing firm.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Parameter by which the documents must be sorted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Indicates if documents must be sorted in descending (true) or ascending (false) order.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "types",
            "in": "query",
            "description": "Filters documents by type.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Other",
                "SignatureImage",
                "IdDocument",
                "AffiliatedApproval",
                "Document"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "isSent",
            "in": "query",
            "description": "If set to true, only sent documents will be returned.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing electronic documents is returned.",
            "schema": {
              "$ref": "#/definitions/PagingResult[DocumentResource]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Upload a new document",
        "description": "This endpoint enables you to upload a new document to app. The request must contain multi-part form data containing the document file.",
        "operationId": "Documents_CreateAccountDocument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingAccount",
            "in": "path",
            "description": "ID of the trading account at the clearing firm.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the uploaded document's information is returned.",
            "schema": {
              "$ref": "#/definitions/DocumentIdResource"
            }
          },
          "400": {
            "description": "Failed to upload the document."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/{requestId}/documents": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get electronic documents of an account request",
        "description": "This endpoint enables you to retrieve all electronic documents generated by the clearing firm for a specific trading account.",
        "operationId": "Documents_GetRequestDocumentsPage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the account request at the app.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Parameter by which the documents must be sorted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Indicates if documents must be sorted in descending (true) or ascending (false) order.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "types",
            "in": "query",
            "description": "Filters documents by type.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Other",
                "SignatureImage",
                "IdDocument",
                "AffiliatedApproval",
                "Document"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "isSent",
            "in": "query",
            "description": "If set to true, only sent documents will be returned.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing electronic documents is returned.",
            "schema": {
              "$ref": "#/definitions/PagingResult[DocumentResource]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Upload a new document",
        "description": "This endpoint enables you to upload a new document to app. The request must contain multi-part form data containing the document file.",
        "operationId": "Documents_CreateAccountOpeningRequestDocument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the account request at the app.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the uploaded document's information is returned.",
            "schema": {
              "$ref": "#/definitions/DocumentIdResource"
            }
          },
          "400": {
            "description": "Failed to upload the document."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingAccount}/documents/{id}/send": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Send a document to the clearing firm",
        "description": "This endpoint enables you to send a previously uploaded document to the clearing firm.",
        "operationId": "Documents_SendAccountDocument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingAccount",
            "in": "path",
            "description": "ID of the trading account whose document must be sent to the clearing firm.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document that must be sent to the clearing firm.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the document was successfully sent to the clearing firm.",
            "schema": {
              "$ref": "#/definitions/DocumentSentResource"
            }
          },
          "409": {
            "description": "The document was not found or it does not belong to the specified trading account."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/account-requests/{requestId}/documents/{id}/send": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Send a document to the clearing firm",
        "description": "This endpoint enables you to send a previously uploaded document to the clearing firm.",
        "operationId": "Documents_SendRequestDocument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of the account request whose document must be sent to the clearing firm.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document that must be sent to the clearing firm.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the document was successfully sent to the clearing firm.",
            "schema": {
              "$ref": "#/definitions/DocumentSentResource"
            }
          },
          "409": {
            "description": "The document was not found or it does not belong to the specified account request."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/orders/recommendation/black-list": {
      "get": {
        "tags": [
          "DueDiligence"
        ],
        "summary": "Get recommend in black list",
        "description": "This endpoint enables you to get recommendation in black list.",
        "operationId": "DueDiligence_GetRecommendedBlackList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the order was successfully rejected."
          },
          "409": {
            "description": "Failed to reject the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/orders/recommendation/white-list": {
      "get": {
        "tags": [
          "DueDiligence"
        ],
        "summary": "Get recommend in white list",
        "description": "This endpoint enables you to get recommendation in white list.",
        "operationId": "DueDiligence_GetRecommendedWhiteList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the order was successfully rejected."
          },
          "409": {
            "description": "Failed to reject the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/orders/recommandation/{recommendationId}": {
      "put": {
        "tags": [
          "DueDiligence"
        ],
        "summary": "Set recommendation in white list",
        "description": "This endpoint enables you to apply recommendation to white list.",
        "operationId": "DueDiligence_AllowRecommendationToWhiteList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "recommendationId",
            "in": "path",
            "description": "Recommendation Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/review/orders/{orderId}/accept": {
      "put": {
        "tags": [
          "DueDiligence"
        ],
        "summary": "Accept order",
        "description": "This endpoint enables you to accept an order on review.",
        "operationId": "DueDiligence_AcceptInvestOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The ID of the trading account that is reviewing the order.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The ID of the reviewed order.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the order was successfully accepted."
          },
          "409": {
            "description": "Failed to accept the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/review/orders/{orderId}/reject": {
      "put": {
        "tags": [
          "DueDiligence"
        ],
        "summary": "Reject order",
        "description": "This endpoint enables you to reject an order on review.",
        "operationId": "DueDiligence_RejectInvestOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The ID of the trading account that is reviewing the order.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The ID of the reviewed order.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the order was successfully rejected."
          },
          "409": {
            "description": "Failed to reject the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/orders/recommandation/{recommendationId}/black-list": {
      "put": {
        "tags": [
          "DueDiligence"
        ],
        "summary": "Set recommendation in black list",
        "description": "This endpoint enables you to apply recommendation to black list.",
        "operationId": "DueDiligence_AddRecommendationToBlackList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "recommendationId",
            "in": "path",
            "description": "Recommendation Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/paperless": {
      "get": {
        "tags": [
          "ElectronicDocuments"
        ],
        "summary": "Get paperless settings by account id",
        "operationId": "ElectronicDocuments_GetSettingsByAccountId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, with delivery settings information.",
            "schema": {
              "$ref": "#/definitions/DeliveryInformationDto"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/edocs/{edocId}": {
      "get": {
        "tags": [
          "ElectronicDocuments"
        ],
        "summary": "Download electronic documents for a trading account",
        "description": "This endpoint enables you to retrieve a list of electronic documents from the clearing firm for a specific trading account.",
        "operationId": "ElectronicDocuments_DownloadEDocs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose documents must be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "edocId",
            "in": "path",
            "description": "ID of the documents for downloading.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfult request, a electronic documents returned.",
            "schema": {
              "type": "object"
            }
          },
          "409": {
            "description": "Failed to download a document."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/edocs": {
      "get": {
        "tags": [
          "ElectronicDocuments"
        ],
        "summary": "Get electronic documents for a trading account",
        "description": "This endpoint enables you to retrieve a list of electronic documents from the clearing firm for a specific trading account.",
        "operationId": "ElectronicDocuments_GetAccountBalanceInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose documents must be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeAccountStatements",
            "in": "query",
            "description": "Indicates if account statements should be included in the response.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "includeTaxForms",
            "in": "query",
            "description": "Indicates if tax forms should be included in the response.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "includeTradeConfirmations",
            "in": "query",
            "description": "Indicates if trade confirmations should be included in the response.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The starting date of the time period for which the documents must be retrieved.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date of the time period for which the documents must be retrieved.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Column name for sorting documents.",
            "required": false,
            "type": "string",
            "default": "Id"
          },
          {
            "name": "isAsc",
            "in": "query",
            "description": "Document sorting direction.",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfult request, a list of electronic documents with corresponding links is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ElectronicDocumentResource"
              }
            }
          },
          "409": {
            "description": "An error occurred in attempt to get the list of electronic documents."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/paperless": {
      "put": {
        "tags": [
          "ElectronicDocuments"
        ],
        "summary": "Update paperless settings by id",
        "operationId": "ElectronicDocuments_UpdateDeliverySettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deliveryInformationOnUpdate",
            "in": "body",
            "description": "Delivery settings for updating",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryInformationDto"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, with updated delivery settings information.",
            "schema": {
              "$ref": "#/definitions/DeliveryInformationDto"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "ElectronicDocuments"
        ],
        "summary": "Create paperless settings",
        "operationId": "ElectronicDocuments_CreateDeliverySettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deliveryInformationOnUpdate",
            "in": "body",
            "description": "Delivery settings for creating",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryInformationDto"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, with updated delivery settings information.",
            "schema": {
              "$ref": "#/definitions/DeliveryInformationDto"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/paperless/default": {
      "post": {
        "tags": [
          "ElectronicDocuments"
        ],
        "summary": "Create default paperless settings",
        "operationId": "ElectronicDocuments_CreateDefaultSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, with delivery settings information.",
            "schema": {
              "$ref": "#/definitions/DeliveryInformationDto"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/exchanges": {
      "get": {
        "tags": [
          "Exchanges"
        ],
        "summary": "Get the list of available exchanges",
        "operationId": "Exchanges_GetExchanges",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "This is the unique identifier of the user in app. If the information is requested about the user whose Authorization token is provided in the request, simply use the ‘@me’ directive instead of the user’s ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Formulas collection",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/feedbacks": {
      "post": {
        "tags": [
          "Feedbacks"
        ],
        "summary": "Submit feedback",
        "description": "This endpoint enables you to submit user feedback into app's support ticket management system.",
        "operationId": "Feedbacks_SubmitFeedback_SwaggerAnonymous",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "JSON dictionary that contains information about the new user feedback.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitFeedbackModel"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the new feedback is returned.",
            "schema": {
              "$ref": "#/definitions/PagingResult[SubmitFeedbackModel]"
            }
          },
          "409": {
            "description": "An error occurred while trying to submit the feedback."
          },
          "500": {
            "description": "Feedback wasn't submitted. Unknown server error"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/formulas": {
      "get": {
        "tags": [
          "Formulas"
        ],
        "summary": "Get company's formulas",
        "description": "This endpoint enables you to retrieve all formulas used for all formulas used for client-side calculations.",
        "operationId": "Formulas_GetFormulas",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing all formulas is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Formula"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/history/compare": {
      "put": {
        "tags": [
          "HistoricalTradeData"
        ],
        "summary": "Get Comparison Data",
        "description": "This endpoint enables you to retrieve and compare historical chart data for a set of securities. This data includes price ranges, candles, and various other non-market data.",
        "operationId": "HistoricalTradeData_GetChartCompareData",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "This is a JSON dictionary that contains information about the specified securities.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChartCompareRequestModel"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, a JSON dictionary is returned, containing chart data for the list of specified securities.",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/TimeSeriesValueCandleMapModel"
                }
              }
            }
          },
          "409": {
            "description": "Comparison data cannot be provided."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/history/symbols": {
      "put": {
        "tags": [
          "HistoricalTradeData"
        ],
        "summary": "Get Candles and Indicators",
        "description": "This endpoint enables you to retrieve candles and indicators for a particular security.",
        "operationId": "HistoricalTradeData_GetChartBasicData",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "This is a JSON dictionary that contains information about the enquired security.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChartHistoryRequestModel"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, a JSON dictionary is returned, containing candles and indicators for the specified security.",
            "schema": {
              "$ref": "#/definitions/ChartHistoryModel"
            }
          },
          "409": {
            "description": "Chart data cannot be provided."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/history/export": {
      "post": {
        "tags": [
          "HistoricalTradeData"
        ],
        "summary": "Get Chart Data in XLSX",
        "description": "This endpoint enables you to retrieve chart data in the Microsoft Excel (.xlsx) format.",
        "operationId": "HistoricalTradeData_ExportToExcel",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "settings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoricalTradeDataExportDataModel"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, an Excel file is returned, containing chart data for the specified securities.",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/hotkeys/{hotkeyId}": {
      "get": {
        "tags": [
          "ALPHA Hotkeys"
        ],
        "summary": "Get specified Hotkey",
        "description": "Provides specified Hotkey by ID",
        "operationId": "Hotkeys_GetHotkey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hotkeyId",
            "in": "path",
            "description": "Hotkey ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Hotkey",
            "schema": {
              "$ref": "#/definitions/HotkeyMapModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "put": {
        "tags": [
          "ALPHA Hotkeys"
        ],
        "summary": "Modify specified Hotkey",
        "description": "Provides specified Hotkey by ID",
        "operationId": "Hotkeys_EditHotkey",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hotkeyId",
            "in": "path",
            "description": "Hotkey ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Hotkey model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditableHotkeyModel"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Hotkey was successfully modified",
            "schema": {
              "$ref": "#/definitions/HotkeyMapModel"
            }
          },
          "409": {
            "description": "Hotkey with the specified shortcut already exists"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "ALPHA Hotkeys"
        ],
        "summary": "Delete specified Hotkey",
        "description": "Provides specified Hotkey by ID",
        "operationId": "Hotkeys_DeleteHotkey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hotkeyId",
            "in": "path",
            "description": "Hotkey ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Hotkey succesfully removed",
            "schema": {
              "$ref": "#/definitions/Void"
            }
          },
          "409": {
            "description": "There is an error occurred in attempt to delete Hotkey"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/hotkeys/webactions": {
      "get": {
        "tags": [
          "ALPHA Hotkeys"
        ],
        "summary": "Get web actions page",
        "description": "Provides web actions Paged result",
        "operationId": "Hotkeys_GetActionsPage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sorting field",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Sorting direction. Desc if true, otherwise is asc",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter query",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Actions paging result",
            "schema": {
              "$ref": "#/definitions/PagingResult[WebActionMapModel]"
            }
          },
          "400": {
            "description": "Filter query is invalid or contains unsupported operations"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/hotkeys": {
      "get": {
        "tags": [
          "ALPHA Hotkeys"
        ],
        "summary": "Get Hotkeys page",
        "description": "Provides Hotkeys paged result",
        "operationId": "Hotkeys_GetHotkeysPage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sorting field",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Sorting direction. Desc if true, otherwise is asc",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter query",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Hotkeys paging result",
            "schema": {
              "$ref": "#/definitions/PagingResult[HotkeyMapModel]"
            }
          },
          "400": {
            "description": "Filter query is invalid or contains unsupported operations"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "ALPHA Hotkeys"
        ],
        "summary": "Create new Hotkey",
        "description": "Creates new Hotkey",
        "operationId": "Hotkeys_AddHotkey",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "Hotkey model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditableHotkeyModel"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Hotkey was successfully created",
            "schema": {
              "$ref": "#/definitions/HotkeyMapModel"
            }
          },
          "409": {
            "description": "Hotkey with the specified shortcut already exists"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingAccount}/investigations": {
      "get": {
        "tags": [
          "Investigations"
        ],
        "summary": "Get an account's investigations",
        "description": "This endpoint enables you to provide all investigations for a specific trading account.",
        "operationId": "Investigations_GetInvestigations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingAccount",
            "in": "path",
            "description": "ID of the trading account whose investigations must be returned.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the specified account's investigations is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InvestigationHistoryResource"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingAccount}/investigations/{investigationId}/details": {
      "get": {
        "tags": [
          "Investigations"
        ],
        "summary": "Get a request's investigation details",
        "description": "This endpoint enables you to retrieve details of an account opening request's investigation.",
        "operationId": "Investigations_GetInvestigationDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingAccount",
            "in": "path",
            "description": "ID of the trading account whose investigations must be returned.",
            "required": true,
            "type": "string"
          },
          {
            "name": "investigationId",
            "in": "path",
            "description": "ID of the investigation whose details must be returned.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing details about the investigation is returned.",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingAccount}/investigations/{investigationId}/accept": {
      "post": {
        "tags": [
          "Investigations"
        ],
        "summary": "Accept a new appeal",
        "description": "This endpoint enables you to accept a new appeal.",
        "operationId": "Investigations_AcceptAccountRequestInvestigation",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingAccount",
            "in": "path",
            "description": "ID of the trading account whose appeal is being accepted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "investigationId",
            "in": "path",
            "description": "ID of the investigation whose appeal is being accepted.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Additional data required for the appeal acceptance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvestigationActionResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the acceptance request was successfully sent."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingAccount}/investigations/{investigationId}/appeal": {
      "post": {
        "tags": [
          "Investigations"
        ],
        "summary": "Appeal a rejection",
        "description": "This endpoint enables you to appeal a rejection from the clearing firm.",
        "operationId": "Investigations_AppealAccountRequestInvestigation",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingAccount",
            "in": "path",
            "description": "ID of the trading account on whose behalf the appeal is made.",
            "required": true,
            "type": "string"
          },
          {
            "name": "investigationId",
            "in": "path",
            "description": "ID of the investigation which is appealed.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Additional data required for the appeal.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvestigationActionResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the appeal request was successfully sent."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingAccount}/investigations/{investigationId}/reject": {
      "post": {
        "tags": [
          "Investigations"
        ],
        "summary": "Reject a new appeal",
        "description": "This endpoint enables you to reject a new appeal.",
        "operationId": "Investigations_RejectAccountRequestInvestigation",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingAccount",
            "in": "path",
            "description": "ID of the trading account whose appeal is being rejected.",
            "required": true,
            "type": "string"
          },
          {
            "name": "investigationId",
            "in": "path",
            "description": "ID of the investigation whose appeal is being rejected.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Additional data required for the appeal rejection.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvestigationActionResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the appeal was successfully rejected."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/jotforms/forms/{formId}/submissions": {
      "get": {
        "tags": [
          "JotForms"
        ],
        "summary": "Get JotForms submissions related to a specific form",
        "description": "Provides account requests collection",
        "operationId": "JotForms_GetApolloNewsToken",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "JotForms form ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "createdAt",
            "in": "query",
            "description": "'Created At' date filter. Will include only records with Created At &gt; the filter value",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "JotForm form submissions list",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/accounts/{clearingNumber}/jwt": {
      "get": {
        "tags": [
          "Jwt"
        ],
        "summary": "Generates JSON web token for a specific user using configured JWT provider",
        "operationId": "Jwt_GetToken",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "clearingNumber",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON web token",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/localizations/{cultures}/{localizationSetName}": {
      "get": {
        "tags": [
          "Localization"
        ],
        "summary": "Get localization resource",
        "description": "Provides localization resource set",
        "operationId": "Localization_GetResource",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "localizationSetName",
            "in": "path",
            "description": "name of set localization resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "cultures",
            "in": "path",
            "description": "cultures of localization set (\"en-US\", \"ja-JP\", \"ru-RU\", \"zh-TW\", \"zh-CN\")",
            "required": true,
            "type": "string",
            "default": "en-Us"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Localization resource set",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingNumber}/orders/mutual-funds/buy": {
      "post": {
        "tags": [
          "MutualFunds"
        ],
        "summary": "Buy a mutual fund",
        "description": "This endpoint enables you to place an order to purhcase a mutual fund.",
        "operationId": "MutualFunds_PlaceBuyMutualFund",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingNumber",
            "in": "path",
            "description": "ID of the trading account on whose behalf the order is placed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "JSON data containing the mutual fund's information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuyMutualFundResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the buy order was successfully placed.",
            "schema": {
              "$ref": "#/definitions/MutualFundResource"
            }
          },
          "400": {
            "description": "The provided JSON is invalid."
          },
          "409": {
            "description": "An error on the OMS side occured in attempt to place the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingNumber}/orders/mutual-funds/sell": {
      "post": {
        "tags": [
          "MutualFunds"
        ],
        "summary": "Sell a mutual fund",
        "description": "This endpoint enables you to place an order to sell a mutual fund.",
        "operationId": "MutualFunds_PlaceSellMutualFund",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingNumber",
            "in": "path",
            "description": "ID of the trading account on whose behalf the order is placed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "JSON data containing the mutual fund's information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SellMutualFundResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the sell order was successfully placed.",
            "schema": {
              "$ref": "#/definitions/MutualFundResource"
            }
          },
          "400": {
            "description": "The provided JSON is invalid."
          },
          "409": {
            "description": "An error on the OMS side occured in attempt to place the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingNumber}/orders/mutual-funds/exchange": {
      "post": {
        "tags": [
          "MutualFunds"
        ],
        "summary": "Exchange a mutual fund",
        "description": "This endpoint enables you to exchange a mutual fund.",
        "operationId": "MutualFunds_PlaceExchangeMutualFund",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingNumber",
            "in": "path",
            "description": "ID of the trading account on whose behalf the order is placed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "JSON data containing the exchanged mutual fund's information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExchangeMutualFundResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the order was successfully placed.",
            "schema": {
              "$ref": "#/definitions/MutualFundResource"
            }
          },
          "400": {
            "description": "The provided JSON is invalid."
          },
          "409": {
            "description": "An error on the OMS side occured in attempt to place the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingNumber}/orders/mutual-funds/liquidate": {
      "post": {
        "tags": [
          "MutualFunds"
        ],
        "summary": "Liquidate a mutual fund",
        "description": "This endpoint enables you to place an order to liquidate your shares of a mutual fund.",
        "operationId": "MutualFunds_PlaceLiquidationOfMutualFund",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingNumber",
            "in": "path",
            "description": "ID of the trading account on whose behalf the order is placed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "JSON data containing the mutual fund's information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LiquidateMutualFundResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the liquidation order was successfully placed.",
            "schema": {
              "$ref": "#/definitions/MutualFundResource"
            }
          },
          "400": {
            "description": "The provided JSON is invalid."
          },
          "409": {
            "description": "An error on the OMS side occured in attempt to place the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingNumber}/preview/orders/mutual-funds/buy": {
      "post": {
        "tags": [
          "MutualFunds"
        ],
        "summary": "Verify buying a mutual fund",
        "description": "This endpoint enables you to verify the contents of an order for purchasing a mutual fund.",
        "operationId": "MutualFunds_PreviewBuyMutualFund",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingNumber",
            "in": "path",
            "description": "ID of the trading account on whose behalf the order is to be placed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "JSON data containing the mutual fund's information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuyMutualFundResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing order verification details is returned.",
            "schema": {
              "$ref": "#/definitions/MutualFundPreviewResource"
            }
          },
          "400": {
            "description": "The provided JSON is invalid."
          },
          "409": {
            "description": "An error on the OMS side occured in attempt to verify the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingNumber}/preview/orders/mutual-funds/sell": {
      "post": {
        "tags": [
          "MutualFunds"
        ],
        "summary": "Verify selling a mutual fund",
        "description": "This endpoint enables you to verify the contents of an order for selling a mutual fund.",
        "operationId": "MutualFunds_PreviewSellMutualFund",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingNumber",
            "in": "path",
            "description": "ID of the trading account on whose behalf the order is to be placed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "JSON data containing the mutual fund's information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SellMutualFundResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing order verification details is returned.",
            "schema": {
              "$ref": "#/definitions/MutualFundPreviewResource"
            }
          },
          "400": {
            "description": "The provided JSON is invalid."
          },
          "409": {
            "description": "An error on the OMS side occured in attempt to verify the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingNumber}/preview/orders/mutual-funds/exchange": {
      "post": {
        "tags": [
          "MutualFunds"
        ],
        "summary": "Verify exchanging a mutual fund",
        "description": "This endpoint enables you to verify the contents of an order for exchanging a mutual fund.",
        "operationId": "MutualFunds_PreviewExchangeMutualFund",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingNumber",
            "in": "path",
            "description": "ID of the trading account on whose behalf the order is to be placed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "JSON data containing the mutual fund's information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExchangeMutualFundResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing order verification details is returned.",
            "schema": {
              "$ref": "#/definitions/MutualFundPreviewResource"
            }
          },
          "400": {
            "description": "The provided JSON is invalid."
          },
          "409": {
            "description": "An error on the OMS side occured in attempt to verify the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingNumber}/preview/orders/mutual-funds/liquidate": {
      "post": {
        "tags": [
          "MutualFunds"
        ],
        "summary": "Preview liquidation of a mutual fund",
        "description": "This endpoint enables you to verify the contents of an order for liquidating your shares of a mutual fund.",
        "operationId": "MutualFunds_PreviewLiquidationOfMutualFund",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingNumber",
            "in": "path",
            "description": "ID of the trading account on whose behalf the order is placed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "JSON data containing the mutual fund's information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LiquidateMutualFundResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing order verification details is returned.",
            "schema": {
              "$ref": "#/definitions/MutualFundPreviewResource"
            }
          },
          "400": {
            "description": "The provided JSON is invalid."
          },
          "409": {
            "description": "An error on the OMS side occured in attempt to verify the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{clearingNumber}/orders/mutual-funds/{orderId}": {
      "delete": {
        "tags": [
          "MutualFunds"
        ],
        "summary": "Cancel an order",
        "description": "This endpoint enables you to cancel an outstanding order for trading a mutual fund.",
        "operationId": "MutualFunds_CancelOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "clearingNumber",
            "in": "path",
            "description": "ID of the trading account on whose behalf the order is cancelled.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that must be cancelled.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the order was successfully cancelled."
          },
          "409": {
            "description": "A conflict has occurred in attempt to cancel the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/news": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get a list of news for a company",
        "description": "This endpoint enables you to retrieve a list of recent news for a specific company by providing its ticker symbol.",
        "operationId": "News_GetNews",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "The ticker symbol for which there news must be retrieved.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, a list of news for the specified company is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NewsResource"
              }
            }
          },
          "409": {
            "description": "Failed to fetch news for the company."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/news/corporate-actions": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get all corporate actions",
        "description": "This endpoint enables you to retrieve a list of recent corporate actions pertaining a specific company.",
        "operationId": "News_GetCorporateActions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "The ticker symbol for which corporate actions must be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, a list of corporate actions is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CorporateActionResource"
              }
            }
          },
          "409": {
            "description": "Failed to fetch corporate actions for the company."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/orders/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order",
        "description": "This endpoint enables you to retrieve information about a particular order.",
        "operationId": "Orders_GetOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account whose order’s information needs to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order whose information needs to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, a JSON with the order’s detailed information is returned.",
            "schema": {
              "$ref": "#/definitions/OrderResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Replace an order",
        "description": "This endpoint enables you to modify an existing order.",
        "operationId": "Orders_ReplaceOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "modifyParams",
            "in": "body",
            "description": "JSON data that contains updated information about the modified order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyOrderResource"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account on which a new order is to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with the updated order information is returned, indicating if the order was successfully modified.",
            "schema": {
              "$ref": "#/definitions/OrderResource"
            }
          },
          "409": {
            "description": "Failed to replace the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Cancel an order",
        "description": "This endpoint enables you to cancel an existing order.",
        "operationId": "Orders_CancelOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account whose order needs to be cancelled.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be cancelled.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the order was successfully cancelled."
          },
          "409": {
            "description": "A conflict has occurred while attempting to cancel the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/orders/{orderId}/details": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order details",
        "description": "This endpoint enables you to retrieve details about order.",
        "operationId": "Orders_GetOrderDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account whose order’s information needs to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order whose information needs to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, a JSON with the order’s detailed information is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderDetailsModel"
              }
            }
          },
          "400": {
            "description": "User don't have permission."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/verified/orders/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get verified order",
        "description": "This endpoint enables you to validate an existing order.",
        "operationId": "Orders_GetVerifiedOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The ID of the trading account from which the order was initially placed.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The ID of the order that is to be validated.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, a JSON with the order’s validation information is returned.",
            "schema": {
              "$ref": "#/definitions/OrderVerifiedResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get filtered orders",
        "description": "This endpoint enables you to retrieve a selection of orders filtered by a specific query.",
        "operationId": "Orders_GetOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account whose filtered orders need to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Number of the page (all orders are split into pages).",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Indicates the number of orders from a particular page that must be returned in the response.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter query used to retrieve only those orders that satisfy the conditions of the query.",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Field by which all orders should be sorted.",
            "required": false,
            "type": "string"
          },
          {
            "name": "desc",
            "in": "query",
            "description": "Boolean field that indicates if the returned orders should be sorted in descending (true) or ascending (false) order.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "isReport",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "isBlotter",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing filtered orders is returned.",
            "schema": {
              "$ref": "#/definitions/PagingResult[OrderResource]"
            }
          },
          "400": {
            "description": "The filter query is invalid or contains unsupported operations."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Place an order",
        "description": "This endpoint enables you to place a new order in app.",
        "operationId": "Orders_PlaceOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "placeParams",
            "in": "body",
            "description": "JSON data that contains information about the new order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrderResource"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account on which a new order is to be verified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of the user on whose behalf the order will be placed (administrative functionality).",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency in which the underlying security of the order is denominated.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exchange",
            "in": "query",
            "description": "Exchange on which the order should preferably be placed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with the order information is returned, indicating that the order has been successfully placed on the platform.",
            "schema": {
              "$ref": "#/definitions/OrderResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/preview/orders/{orderId}": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Verify replacing an order",
        "description": "This endpoint enables you to validate order modification.",
        "operationId": "Orders_PreviewModifyOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "modifyParams",
            "in": "body",
            "description": "JSON data that contains updated information about the order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyOrderResource"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account on which a new order is to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with the updated order information is returned, indicating if the order modification JSON is properly constructed (examine the isSuccessful parameter in the JSON data).",
            "schema": {
              "$ref": "#/definitions/OrderPreviewResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/preview/orders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Verify placing an order",
        "description": "This endpoint enables you to validate parameters of a new order before placing it on the platform.",
        "operationId": "Orders_PreviewCreateOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "placeParams",
            "in": "body",
            "description": "Parameters of the new order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrderResource"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account on which a new order is to be verified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency in which the underlying security of the order is denominated.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exchange",
            "in": "query",
            "description": "Exchange on which the verified order should preferably be placed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with the order information is returned, indicating if the order is properly constructed (examine the isSuccessful parameter in the JSON data).",
            "schema": {
              "$ref": "#/definitions/OrderPreviewResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/rebalancing/patterns/{nodeId}": {
      "get": {
        "tags": [
          "Patterns"
        ],
        "summary": "Get pattern node or leaf",
        "description": "Get rebalancing model pattern node or leaf",
        "operationId": "Patterns_GetPatternNode",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "description": "Node or leaf identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "withDescendants",
            "in": "query",
            "description": "Append descendants to result",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Target rebalance model pattern cash leaf",
            "schema": {
              "$ref": "#/definitions/CashContainerFrame"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "Patterns"
        ],
        "summary": "Remove pattern node or leaf",
        "description": "Remove rebalancing model pattern node or security leaf",
        "operationId": "Patterns_RemovePatternNode",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "description": "Node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pattern removed successfully"
          },
          "409": {
            "description": "Conflict occured and pattern was not removed"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/rebalancing/patterns": {
      "get": {
        "tags": [
          "Patterns"
        ],
        "summary": "Get patterns roots list page",
        "description": "Returns rebalancing models patterns page",
        "operationId": "Patterns_GetPatternsRoots",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sorting field",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Sorting direction. Desc if true, otherwise is asc",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter query",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Patterns collection",
            "schema": {
              "$ref": "#/definitions/PagingResult[RebalanceFrame]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "Patterns"
        ],
        "summary": "Add new pattern",
        "description": "Create new root pattern node",
        "operationId": "Patterns_AddPattern",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "New pattern name",
            "required": true,
            "type": "string"
          },
          {
            "name": "isPortfolioVisible",
            "in": "query",
            "description": "Will pattern be visible for ordinal user",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "accountBlock",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountBlock"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "New pattern description",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Created pattern root",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RebalanceFrame"
              }
            }
          },
          "409": {
            "description": "Conflict occured while creating new pattern root"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/rebalancing/patterns/leafs/{leafId}": {
      "put": {
        "tags": [
          "Patterns"
        ],
        "summary": "Update pattern leaf",
        "description": "Update rebalancing model pattern security leaf",
        "operationId": "Patterns_UpdatePatternLeaf",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "leafId",
            "in": "path",
            "description": "Leaf identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "query",
            "description": "Parent node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "leaf",
            "in": "body",
            "description": "Leaf params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputFrameParams"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated rebalance model pattern cash leaf",
            "schema": {
              "$ref": "#/definitions/CashContainerFrame"
            }
          },
          "409": {
            "description": "Conflict occured and pattern was not updated"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/rebalancing/patterns/nodes/{nodeId}": {
      "put": {
        "tags": [
          "Patterns"
        ],
        "summary": "Update pattern node",
        "description": "Update rebalancing model pattern node",
        "operationId": "Patterns_UpdatePatternNode",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "description": "Node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "query",
            "description": "Parent node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "node",
            "in": "body",
            "description": "Node params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrameParams"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated rebalance model pattern",
            "schema": {
              "$ref": "#/definitions/RebalanceFrame"
            }
          },
          "409": {
            "description": "Conflict occured and pattern was not updated"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/rebalancing/patterns/nodes/{nodeId}/references/{patternId}": {
      "put": {
        "tags": [
          "Patterns"
        ],
        "summary": "Update bound pattern",
        "description": "Update rebalancing model pattern target percents and tolerance",
        "operationId": "Patterns_UpdatePatternPercents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "description": "Node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "Rebalancing pattern identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tolerance",
            "in": "query",
            "description": "Tolerance to set for pattern",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "targetPercent",
            "in": "query",
            "description": "Percents to set for pattern",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Parent node",
            "schema": {
              "$ref": "#/definitions/RebalanceFrame"
            }
          },
          "409": {
            "description": "Conflict occured and pattern was not bound"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "Patterns"
        ],
        "summary": "Bind pattern to node",
        "description": "Bind rebalancing model pattern to specified pattern node",
        "operationId": "Patterns_BindPattern",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "description": "Node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "Rebalancing pattern identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tolerance",
            "in": "query",
            "description": "Tolerance to set for pattern",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "targetPercent",
            "in": "query",
            "description": "Percents to set for pattern",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Parent node",
            "schema": {
              "$ref": "#/definitions/RebalanceFrame"
            }
          },
          "409": {
            "description": "Conflict occured and pattern was not bound"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "Patterns"
        ],
        "summary": "Unbind pattern from node",
        "operationId": "Patterns_UnbindPattern",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "description": "Node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "Rebalancing pattern identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pattern was unbound successfully"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/rebalancing/patterns/{patternId}": {
      "put": {
        "tags": [
          "Patterns"
        ],
        "summary": "Update pattern",
        "description": "Update root pattern node",
        "operationId": "Patterns_Update",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "patternId",
            "in": "path",
            "description": "Pattern identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Pattern name",
            "required": true,
            "type": "string"
          },
          {
            "name": "isPortfolioVisible",
            "in": "query",
            "description": "Will pattern be visible for ordinal user",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "accountBlock",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountBlock"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Pattern description",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Created pattern root",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RebalanceFrame"
              }
            }
          },
          "409": {
            "description": "Conflict occured while creating new pattern root"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/rebalancing/patterns/{parentId}/leafs": {
      "post": {
        "tags": [
          "Patterns"
        ],
        "summary": "Add pattern leaf",
        "description": "Add rebalancing model pattern leaf to parent node",
        "operationId": "Patterns_AddPatternLeaf",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "Parent node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "leaf",
            "in": "body",
            "description": "New security leaf params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputFrameParams"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Added rebalance model pattern cash leaf",
            "schema": {
              "$ref": "#/definitions/CashContainerFrame"
            }
          },
          "409": {
            "description": "Conflict occured and leaf was not added"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/rebalancing/patterns/{parentId}/nodes": {
      "post": {
        "tags": [
          "Patterns"
        ],
        "summary": "Add pattern node",
        "description": "Add rebalancing model pattern node to parent node",
        "operationId": "Patterns_AddPatternNode",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "Parent node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "node",
            "in": "body",
            "description": "New node params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrameParams"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Added rebalance model pattern node",
            "schema": {
              "$ref": "#/definitions/RebalanceFrame"
            }
          },
          "409": {
            "description": "Conflict occured and pattern was not added"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/plaid/login-data": {
      "get": {
        "tags": [
          "Plaid"
        ],
        "summary": "Get PLAID API Link token",
        "description": "This endpoint enables you to create ACH relationships from a PLAID link.",
        "operationId": "Plaid_GetPlaidData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, PLAID link token is returned.",
            "schema": {
              "$ref": "#/definitions/PlaidDataResource"
            }
          },
          "409": {
            "description": "Failed to get PLAID link token."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/portfolio/calculated": {
      "get": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Get calculated rebalance model",
        "description": "Get account calculated rebalance model",
        "operationId": "Portfolios_GetRebalanceModel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Calculated account rebalance model",
            "schema": {
              "$ref": "#/definitions/RebalanceModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/portfolio/earninginfo": {
      "get": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Get account earning info",
        "description": "Get account earning value and percent",
        "operationId": "Portfolios_GetEarningInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Account earning information",
            "schema": {
              "$ref": "#/definitions/EarningInfo"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/portfolio": {
      "get": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Get portfolioы",
        "description": "Get account rebalancing portfolio",
        "operationId": "Portfolios_GetPortfolios",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "withDescendants",
            "in": "query",
            "description": "Append descendants to result",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Portfolios model",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/RebalanceFrame"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/portfolio": {
      "get": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Get portfolio",
        "description": "Get account rebalancing portfolio",
        "operationId": "Portfolios_GetPortfolio",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "withDescendants",
            "in": "query",
            "description": "Append descendants to result",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Target account portfolio model",
            "schema": {
              "$ref": "#/definitions/RebalanceFrame"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Add portfolio",
        "description": "Add account rebalancing portfolio",
        "operationId": "Portfolios_AddPortfolio",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Target account portfolio model",
            "schema": {
              "$ref": "#/definitions/RebalanceFrame"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/portfolio/{nodeId}": {
      "get": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Get portfolio node",
        "description": "Get account rebalancing portfolio node or security leaf",
        "operationId": "Portfolios_GetPortfolioNode",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "Node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "withDescendants",
            "in": "query",
            "description": "Append descendants to result",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Target rebalance model cash leaf",
            "schema": {
              "$ref": "#/definitions/CashContainerFrame"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Remove portfolio node or leaf",
        "description": "Remove account rebalancing portfolio node or security leaf",
        "operationId": "Portfolios_RemovePortfolioNode",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "Node or leaf identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Portfolio node removed successfully"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/portfolio/patterns": {
      "get": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Get patterns roots list page",
        "description": "Returns rebalancing models patterns page",
        "operationId": "Portfolios_GetPatternsRoots",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sorting field",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Sorting direction. Desc if true, otherwise is asc",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter query",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Patterns collection",
            "schema": {
              "$ref": "#/definitions/PagingResult[RebalanceFrame]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/multiply/binding/{modelId}": {
      "put": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Multiply binding",
        "description": "Multiply binding",
        "operationId": "Portfolios_MultiplyBinding",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "Model to apply",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accountIds",
            "in": "body",
            "description": "List of accounts",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/portfolio/nodes/{parentNodeId}/{nodeId}": {
      "put": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Update portfolio node",
        "description": "Update account rebalancing portfolio node",
        "operationId": "Portfolios_UpdatePortfolioNode",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "path",
            "description": "Parent node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "Node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "node",
            "in": "body",
            "description": "Node params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrameParams"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated rebalance model node",
            "schema": {
              "$ref": "#/definitions/RebalanceFrame"
            }
          },
          "409": {
            "description": "Conflict occured and portfolio was not updated"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/portfolio/leafs/{parentNodeId}/{securityLeafId}": {
      "put": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Update portfolio leaf",
        "description": "Update account rebalancing portfolio security leaf",
        "operationId": "Portfolios_UpdatePortfolioLeaf",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "path",
            "description": "Parent node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "securityLeafId",
            "in": "path",
            "description": "Security leaf identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "node",
            "in": "body",
            "description": "Leaf params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityFrameParams"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated rebalance model cash leaf",
            "schema": {
              "$ref": "#/definitions/CashContainerFrame"
            }
          },
          "409": {
            "description": "Conflict occured and portfolio was not updated"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/portfolio/{nodeId}/references/{patternId}": {
      "put": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Update bound pattern",
        "description": "Update rebalancing model pattern portfolio target percents and tolerance",
        "operationId": "Portfolios_UpdatePatternPercents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "Parent node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "Rebalancing pattern identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tolerance",
            "in": "query",
            "description": "Tolerance to set for pattern",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "targetPercent",
            "in": "query",
            "description": "Percents to set for pattern",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Parent portfolio node",
            "schema": {
              "$ref": "#/definitions/RebalanceFrame"
            }
          },
          "409": {
            "description": "Conflict occured and pattern was not bound"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Bind pattern to portfolio",
        "description": "Bind rebalancing model pattern to account portfolio",
        "operationId": "Portfolios_BindPattern",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "Node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "Rebalancing pattern identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tolerance",
            "in": "query",
            "description": "Tolerance to set for pattern",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "targetPercent",
            "in": "query",
            "description": "Percents to set for pattern",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Parent portfolio node",
            "schema": {
              "$ref": "#/definitions/RebalanceFrame"
            }
          },
          "409": {
            "description": "Conflict occured and pattern was not bound"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Unbind pattern from portfolio",
        "description": "Unbind rebalancing model pattern from account portfolio",
        "operationId": "Portfolios_UnbindPattern",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "Node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "Rebalancing pattern identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pattern was unbound successfully"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/portfolio/{parentNodeId}/leafs": {
      "post": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Add portfolio leaf",
        "description": "Add account rebalancing portfolio security leaf",
        "operationId": "Portfolios_AddPortfolioLeaf",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "path",
            "description": "Parent node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "node",
            "in": "body",
            "description": "Security leaf params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityFrameParams"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Added rebalance model cash leaf",
            "schema": {
              "$ref": "#/definitions/CashContainerFrame"
            }
          },
          "409": {
            "description": "Conflict occured and leaf was not added"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/portfolio/{parentNodeId}/nodes": {
      "post": {
        "tags": [
          "Portfolios"
        ],
        "summary": "Add portfolio node",
        "description": "Add account rebalancing portfolio node",
        "operationId": "Portfolios_AddPortfolioNode",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "parentNodeId",
            "in": "path",
            "description": "Parent node identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "node",
            "in": "body",
            "description": "Node params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrameParams"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Added rebalance model node",
            "schema": {
              "$ref": "#/definitions/RebalanceFrame"
            }
          },
          "409": {
            "description": "Conflict occured and portfolio was not added"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/positions/groups": {
      "get": {
        "tags": [
          "Positions"
        ],
        "summary": "Get market value of different security types",
        "description": "This endpoint enables you to retrieve a specific trading account's collective market value of different security types.",
        "operationId": "Positions_GetPositions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account whose collective market value of different security types needs to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing collective market value of different security types of the specified account is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupPositionsResource"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/positions/top": {
      "get": {
        "tags": [
          "Positions"
        ],
        "summary": "Get top positions list by market value",
        "description": "This endpoint enables you to retrieve a specific trading account's top positions list by market value.",
        "operationId": "Positions_GetTopPositions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of a trading account whose top positions need to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Count of positions that would be included in the top list.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing market values of top account's positions.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupPositionsResource"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/positions/{symbol}": {
      "get": {
        "tags": [
          "Positions"
        ],
        "summary": "Get an account's positions in a security",
        "description": "This endpoint enables you to retrieve a trading account’s outstanding positions in a specific security.",
        "operationId": "Positions_GetPositionBySymbol",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account whose outstanding positions in a security need to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "symbol",
            "in": "path",
            "description": "Ticker symbol of the underlying security under which it is listed on the exchange.",
            "required": true,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency in which the underlying security is denominated (use it if you have two securities with the same ticker but denominated in two different currencies).",
            "required": false,
            "type": "string"
          },
          {
            "name": "exchange",
            "in": "query",
            "description": "Exchange on which the underlying security is listed (use it if you have two securities with the same ticker but listed on two different exchanges).",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing outstanding positions in the specified security is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PositionResource"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/positions": {
      "get": {
        "tags": [
          "Positions"
        ],
        "summary": "Get all positions of an account",
        "description": "This endpoint enables you to retrieve all outstanding positions of a particular trading account.",
        "operationId": "Positions_GetPositions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of a trading account whose outstanding positions need to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (all positions are split in pages).",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Parameter by which positions must be sorted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "desc",
            "in": "query",
            "description": "Sort positions in descending order.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Query by which the positions must be filtered.",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "isReport",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing outstanding positions of the specified account is returned.",
            "schema": {
              "$ref": "#/definitions/PagingResult[PositionResource]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/pricealerts/{alertId}": {
      "get": {
        "tags": [
          "PriceAlerts"
        ],
        "summary": "Get a price alert",
        "description": "This endpoint enables you to retrieve detailed information about a specific price alert.",
        "operationId": "PriceAlerts_GetPriceAlert",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose price alert’s information must be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "alertId",
            "in": "path",
            "description": "Internal identifier of the price alert whose information must be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing detailed information about the price alert is returned.",
            "schema": {
              "$ref": "#/definitions/PriceAlertInfoModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "put": {
        "tags": [
          "PriceAlerts"
        ],
        "summary": "Modify a price alert",
        "description": "This endpoint enables you to modify an existing price alert.",
        "operationId": "PriceAlerts_ModifyPriceAlertTrigger",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose price alert will be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "alertId",
            "in": "path",
            "description": "Internal identifier of the price alert that needs to be modified",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON data that contains updated information about the price alert.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PriceAlertEditableModel"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the updated price alert is returned.",
            "schema": {
              "$ref": "#/definitions/PriceAlertInfoModel"
            }
          },
          "409": {
            "description": "The body of the request is lacking one of the required parameters."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "PriceAlerts"
        ],
        "summary": "Delete a price alert",
        "description": "This endpoint enables you to delete an existing price alert.",
        "operationId": "PriceAlerts_DeletePriceAlert",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose price alert must be deleted.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "alertId",
            "in": "path",
            "description": "Internal identifier of the price alert that must be deleted.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the price alert has been successfully deleted."
          },
          "409": {
            "description": "Failed to delete the price alert."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/pricealerts": {
      "get": {
        "tags": [
          "PriceAlerts"
        ],
        "summary": "Get a user's price alerts",
        "description": "This endpoint enables you to retrieve all price alerts of a specific user.",
        "operationId": "PriceAlerts_GetPriceAlerts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose price alerts must be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of price alerts that should be retrieved from the specified page.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (all price alerts are split into pages).",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Parameter by which price alerts must be sorted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Boolean value that indicates if the returned price alerts should be sorted in descending (true) or ascending (false) order.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the user’s price alerts is returned.",
            "schema": {
              "$ref": "#/definitions/PagingResult[PriceAlertInfoModel]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "PriceAlerts"
        ],
        "summary": "Create a price alert",
        "description": "This endpoint enables you to create a new price alert.",
        "operationId": "PriceAlerts_CreatePriceAlert",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user on whose behalf a new price alert will be created.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON data that contains information about the new price alert.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PriceAlertEditableModel"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the price alert has been successfully created.",
            "schema": {
              "$ref": "#/definitions/PriceAlertInfoModel"
            }
          },
          "409": {
            "description": "The body of the request is lacking one of the required parameters."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/batch/rebalance": {
      "get": {
        "tags": [
          "Rebalance"
        ],
        "summary": "Get orders for rebalancing several portfolio",
        "description": "Get orders for rebalancing several portfolio",
        "operationId": "Rebalance_GetBatchRebalancingOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "parameters.accountIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Calculated orders for rebalancing account",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/RebalanceOrderResource"
                }
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "put": {
        "tags": [
          "Rebalance"
        ],
        "summary": "Get orders for rebalancing several portfolio and place them",
        "description": "Get orders for rebalancing several portfolios and place them",
        "operationId": "Rebalance_GetBatchRebalancingOrders",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountIds",
            "in": "body",
            "description": "Account identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          {
            "name": "isBlockTrade",
            "in": "query",
            "description": "Parameters for through trade by block account",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Calculated orders for rebalancing account",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/RebalanceOrderResource"
                }
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/rebalance": {
      "get": {
        "tags": [
          "Rebalance"
        ],
        "summary": "Get orders for rebalancing portfolio",
        "description": "Get orders for rebalancing portfolios",
        "operationId": "Rebalance_GetRebalancingOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Calculated orders for rebalancing account",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RebalanceOrderResource"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "Rebalance"
        ],
        "summary": "Get orders for rebalancing portfolio and place them",
        "description": "Get orders for rebalancing portfolios and place them",
        "operationId": "Rebalance_PlaceRebalanceOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Calculated orders for rebalancing account ",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RebalanceOrderResource"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/registration/schema": {
      "get": {
        "tags": [
          "Registration"
        ],
        "summary": "Get parameters required for registration",
        "description": "This endpoint enables you to retrieve a list of parameters required for registration of users in your environment.",
        "operationId": "Registration_GetSchema_SwaggerAnonymous",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the list of parameters required for registration is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegistrationUnitSchema"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/registration/activation": {
      "post": {
        "tags": [
          "Registration"
        ],
        "summary": "Activate a user",
        "description": "This endpoint enables you to complete registration of a user through activation.",
        "operationId": "Registration_ActivateUser_SwaggerAnonymous",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "activationCode",
            "in": "body",
            "description": "Activation code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the user has been successfully activated."
          },
          "409": {
            "description": "Failed to activate the user."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/registration": {
      "post": {
        "tags": [
          "Registration"
        ],
        "summary": "Register a new user",
        "description": "This endpoint enables you to register a new user.",
        "operationId": "Registration_Register_SwaggerAnonymous",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registrationRequest",
            "in": "body",
            "description": "JSON data containing all required parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistrationRequest"
            }
          },
          {
            "name": "referralCode",
            "in": "query",
            "description": "Code for registration by referral link.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the user has been successfully registered.",
            "schema": {
              "$ref": "#/definitions/UserInfoModel"
            }
          },
          "409": {
            "description": "Failed to register the user.",
            "schema": {
              "$ref": "#/definitions/RegistrationFailed"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/roboadvisor/timezone": {
      "get": {
        "tags": [
          "RoboAdvisor"
        ],
        "summary": "Get time zones",
        "description": "Get time zones",
        "operationId": "RoboAdvisor_GetTimeZones_SwaggerAnonymous",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets roboadvisor app timezones",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeZoneInfoItem"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/roboadvisor/languages": {
      "get": {
        "tags": [
          "RoboAdvisor"
        ],
        "summary": "Get languages",
        "description": "Get languages",
        "operationId": "RoboAdvisor_GetLanguages_SwaggerAnonymous",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets roboadvisor app languages",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LanguageSettings"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/roboadvisor/whitelabel": {
      "get": {
        "tags": [
          "RoboAdvisor"
        ],
        "summary": "Get platform whitelabel info",
        "description": "Get logo",
        "operationId": "RoboAdvisor_GetWhitelabelInfo_SwaggerAnonymous",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets roboadvisor app logo",
            "schema": {
              "$ref": "#/definitions/RoboadvisorWhitelabelInfo"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/roboadvisor/header-settings": {
      "get": {
        "tags": [
          "RoboAdvisor"
        ],
        "summary": "Get header settings",
        "description": "Get header settings",
        "operationId": "RoboAdvisor_GetHeaderSettigns",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets company header settings",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/options/{id}": {
      "get": {
        "tags": [
          "Securities"
        ],
        "summary": "Get an option by its ID",
        "description": "This endpoint enables you to retrieve detailed information about a specific option by providing its internal identifier in app.",
        "operationId": "Securities_GetOptionById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Internal identifier of the enquired option in app.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing detailed information about the enquired option is returned.",
            "schema": {
              "$ref": "#/definitions/OptionResource"
            }
          },
          "404": {
            "description": "Enquired option is non-existent in app."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/equities/{id}": {
      "get": {
        "tags": [
          "Securities"
        ],
        "summary": "Get an equity by its ID",
        "description": "This endpoint enables you to retrieve detailed information about a specific equity by providing its internal identifier in app.",
        "operationId": "Securities_GetEquityById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Internal identifier of the enquired equity in app.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing detailed information about the enquired security is returned.",
            "schema": {
              "$ref": "#/definitions/EquityResource"
            }
          },
          "404": {
            "description": "Enquired security is non-existent in app."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/equities/lookup": {
      "get": {
        "tags": [
          "Securities"
        ],
        "summary": "Get equities using a pattern",
        "description": "This endpoint enables you to retrieve a list of securities with a certain pattern by specifying a keyword that will be queried in all equities' symbol, exchange, and description fields.",
        "operationId": "Securities_GetEquitiesByMask",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "mask",
            "in": "query",
            "description": "Target keyword that will be searched for in all equities' symbol, exchange, and description fields.",
            "required": true,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Maximum number of equities that should be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "This is a filter query used to retrieve only those equities that satisfy the conditions of the query",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing an array of securities that satisfy the given pattern is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EquityResource"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/options/{symbol}": {
      "get": {
        "tags": [
          "Securities"
        ],
        "summary": "Get an option by its symbol",
        "description": "This endpoint enables you to retrieve detailed information about a particular option by providing the ticker symbol under which it’s listed on the exchange.",
        "operationId": "Securities_GetOptionBySymbol",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "Ticker symbol of the option under which it’s listed on the exchange.",
            "required": true,
            "type": "string"
          },
          {
            "name": "exchange",
            "in": "query",
            "description": "Exchange on which the option is listed (use it if you have two options with the same ticker but listed on two different exchanges).",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency in which the option is denominated (use it if you have two options with the same ticker but denominated in two different currencies).",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing detailed information about the enquired option is returned.",
            "schema": {
              "$ref": "#/definitions/OptionResource"
            }
          },
          "404": {
            "description": "Enquired option is non-existent in app."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/equities/{symbol}": {
      "get": {
        "tags": [
          "Securities"
        ],
        "summary": "Get an equity by its symbol",
        "description": "This endpoint enables you to retrieve detailed information about a particular equity by providing its ticker symbol under which it’s listed on the exchange.",
        "operationId": "Securities_GetEquityBySymbol",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "Ticker symbol of the equity under which it’s listed on the exchange.",
            "required": true,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency in which the equity is denominated (use it if you have two equities with the same ticker but denominated in two different currencies).",
            "required": false,
            "type": "string"
          },
          {
            "name": "exchange",
            "in": "query",
            "description": "Exchange on which the equity is listed (use it if you have two equities with the same ticker but listed on two different exchanges).",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing detailed information about the enquired security is returned.",
            "schema": {
              "$ref": "#/definitions/EquityResource"
            }
          },
          "404": {
            "description": "Enquired security is non-existent in app."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/options/optionChain/{symbol}": {
      "get": {
        "tags": [
          "Securities"
        ],
        "summary": "Get an option chain",
        "description": "This endpoint enables you to retrieve an option chain for a specific security by providing its ticker symbol under which it’s listed on the exchange.",
        "operationId": "Securities_GetOptionChain",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "Ticker symbol of the equity under which it’s listed on the exchange.",
            "required": true,
            "type": "string"
          },
          {
            "name": "exchange",
            "in": "query",
            "description": "Exchange on which the underlying equity is listed (use it if you have two equities with the same ticker but listed on two different exchanges).",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency in which the underlying equity is denominated (use it if you have two equities with the same ticker but denominated in two different currencies).",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Query by which the returned option chain must be filtered.",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the option chain data for the specified underlying security is returned.",
            "schema": {
              "$ref": "#/definitions/OptionChainResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/options/expirations": {
      "get": {
        "tags": [
          "Securities"
        ],
        "summary": "Get options' expirations dates",
        "description": "This endpoint enables you to retrieve expiration dates of options with a specific underlying security.",
        "operationId": "Securities_GetOptionsExpirations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "underlying",
            "in": "query",
            "description": "Ticker symbol of the underlying security of the options whose expiration dates need to be retrieved.",
            "required": true,
            "type": "string"
          },
          {
            "name": "exchange",
            "in": "query",
            "description": "Currency in which the options are denominated (use it if you have multiple options with the same ticker but denominated in different currencies).",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Exchange on which the options are listed (use it if you have multiple options with the same ticker but listed on different exchanges).",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the expiration dates of options with the specified underlying security is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OptionExpirationResource"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/options": {
      "get": {
        "tags": [
          "Securities"
        ],
        "summary": "Get filtered options",
        "description": "This endpoint enables you to retrieve a collection of options filtered by a specific query.",
        "operationId": "Securities_GetOptions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (all options are split into pages).",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of options in any given page.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Field by which all retrieved options should be sorted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "desc",
            "in": "query",
            "description": "Boolean field that indicates if the returned options should be sorted in descending (true) or ascending (false) order.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter query used to retrieve only those options that satisfy the conditions of the query.",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the collection of filtered options is returned.",
            "schema": {
              "$ref": "#/definitions/PagingResult[OptionResource]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/equities": {
      "get": {
        "tags": [
          "Securities"
        ],
        "summary": "Get filtered equities",
        "description": "This endpoint enables you to retrieve a collection of equities filtered by a specific query.",
        "operationId": "Securities_GetEquities",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "This is the page number (all equities are split into pages).",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "This is the number of equities that should be retrieved from the specified page.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "This is the field by which all equities should be sorted. For example, if you specify Type, first you'll receive stocks, then ETFs, etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "desc",
            "in": "query",
            "description": "This is a boolean field that indicates if the returned equities should be sorted in descending (true) or ascending (false) order.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "This is a filter query used to retrieve only those equities that satisfy the conditions of the query.",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the collection of filtered equities is returned.",
            "schema": {
              "$ref": "#/definitions/PagingResult[EquityResource]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/streamers": {
      "get": {
        "tags": [
          "Streamer"
        ],
        "summary": "Get streamers data",
        "description": "This endpoint returns the streamers data",
        "operationId": "Streamer_GetStreamersData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data is returned, containing the streamers data.",
            "schema": {
              "$ref": "#/definitions/StreamerDataModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/streamers/session/recover": {
      "put": {
        "tags": [
          "Streamer"
        ],
        "summary": "Recover session",
        "description": "This API endpoint recoveres streamer session.",
        "operationId": "Streamer_RecoverSession",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "sessionType",
            "in": "query",
            "description": "Session type: 0 -- data session, 1 -- quote session.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, sessionId is returned.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/subscriptions/settings/phonenumber": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get a user's phone number",
        "description": "This endpoint enables you to retrieve the current phone number of a specific user.",
        "operationId": "Subscriptions_GetPhoneNumber",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user whose phone number is to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the phone number and the linking state are returned.",
            "schema": {
              "$ref": "#/definitions/PhoneNumberModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Bind a phone number to a user",
        "description": "This endpoint enables you to bind a phone number to a user. The number should be verified via a token identifier and a code received via SMS (step 1 out of 2).",
        "operationId": "Subscriptions_SetPhoneNumber",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to whom a phone number will be bound.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Phone number to be linked.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the phone number, the linking state, and a generated token identifier are returned.",
            "schema": {
              "$ref": "#/definitions/Tuple[PhoneNumberModel,Int32]"
            }
          },
          "409": {
            "description": "Failed to bind the phone number to the user."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Unbind the current phone number from a user.",
        "description": "This endpoint enables you to unbind the current phone number from a user.",
        "operationId": "Subscriptions_DeletePhoneNumber",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the phone number was successfully unbound."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get a user's subscription settings",
        "description": "This endpoint enables you to retrieve detailed information about a user's subscription.",
        "operationId": "Subscriptions_GetSubscriptions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user whose subscription settings must be fetched.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "channelType",
            "in": "query",
            "description": "Communication channel by which notifications are sent.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, a collection of the user's subscriptions is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubscriptionModel"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Modify settings of a subscription",
        "description": "This endpoint enables you to update information about a user's subscription.",
        "operationId": "Subscriptions_ModifySubscription",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the trader whose subscription must be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "JSON object containing updated information about the subscription.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionModel"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the settings of the subscription have been modified.",
            "schema": {
              "$ref": "#/definitions/SubscriptionModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/subscriptions/settings/pushuid": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Assign mobile UUID to a user",
        "description": "This endpoint enables you to assign a mobile UUID to a user.",
        "operationId": "Subscriptions_CertifyUserUid",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to whom a mobile UUID will be assigned.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "uid",
            "in": "query",
            "description": "Mobile UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the mobile UUID has been successfully assigned.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Remove a mobile UUID from a user",
        "description": "This endpoint enables you to remove a mobile UUID from a user.",
        "operationId": "Subscriptions_RemoveUserUid",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user from whom the mobile UUID will be removed.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "uid",
            "in": "query",
            "description": "Mobile UUID to be removed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the mobile UUID has been successfully removed."
          },
          "409": {
            "description": "Failed to remove UUID: it either doesn't exist or isn't assigned to that user."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/subscriptions/settings/phonenumber/token/{tokenId}": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Complete phone number binding",
        "description": "This endpoint enables you to bind a phone number by providing the token ID from the first request and the verification code from the SMS text (step 2 out of 2).",
        "operationId": "Subscriptions_VerifyPhoneNumber",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user whose phone binding process is being completed.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tokenId",
            "in": "path",
            "description": "Token received during the first step of the phone number binding.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tokenValue",
            "in": "query",
            "description": "Code recevied via SMS.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the phone number and the linking state are returned.",
            "schema": {
              "$ref": "#/definitions/PhoneNumberModel"
            }
          },
          "409": {
            "description": "Failed to complete phone number binding: some parameters are invalid and the phone number cannot be verified."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/syncorders/{orderId}": {
      "get": {
        "tags": [
          "SyncOrders"
        ],
        "summary": "Get order",
        "description": "This endpoint enables you to retrieve information about a particular order directly from the execution venue.",
        "operationId": "SyncOrders_GetOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account whose order’s information needs to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order whose information needs to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, a JSON with the order’s detailed information is returned.",
            "schema": {
              "$ref": "#/definitions/OrderResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "put": {
        "tags": [
          "SyncOrders"
        ],
        "summary": "Replace an order",
        "description": "This endpoint enables you to modify an existing order and ensure that it is accepted on the execution venue.",
        "operationId": "SyncOrders_ReplaceOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "modifyParams",
            "in": "body",
            "description": "JSON data that contains updated information about the modified order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyOrderResource"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account on which a new order is to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with the updated order information is returned, indicating if the order was successfully modified.",
            "schema": {
              "$ref": "#/definitions/OrderResource"
            }
          },
          "409": {
            "description": "Failed to replace the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "SyncOrders"
        ],
        "operationId": "SyncOrders_CancelOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the order was successfully cancelled"
          },
          "409": {
            "description": "A conflict has occurred while attempting to cancel the order."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/syncorders": {
      "get": {
        "tags": [
          "SyncOrders"
        ],
        "summary": "Get filtered orders",
        "description": "This endpoint enables you to retrieve a selection of orders filtered by a specific query directly from the execution venue.",
        "operationId": "SyncOrders_GetOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account whose filtered orders need to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Number of the page (all orders are split into pages).",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Indicates the number of orders from a particular page that must be returned in the response.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter query used to retrieve only those orders that satisfy the conditions of the query.",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Field by which all orders should be sorted.",
            "required": false,
            "type": "string"
          },
          {
            "name": "desc",
            "in": "query",
            "description": "Boolean field that indicates if the returned orders should be sorted in descending (true) or ascending (false) order.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing filtered orders is returned",
            "schema": {
              "$ref": "#/definitions/PagingResult[OrderResource]"
            }
          },
          "400": {
            "description": "The filter query is invalid or contains unsupported operations"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "SyncOrders"
        ],
        "summary": "Place an order",
        "description": "This endpoint enables you to place a new order and ensure that it is accepted by the execution venue.",
        "operationId": "SyncOrders_PlaceOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "placeParams",
            "in": "body",
            "description": "JSON data that contains information about the new order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrderResource"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account on which a new order is to be verified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of the user on whose behalf the order will be placed (administrative functionality).",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency in which the underlying security of the order is denominated.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exchange",
            "in": "query",
            "description": "Exchange on which the order should preferably be placed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with the order information is returned, indicating that the order has been successfully placed on the platform.",
            "schema": {
              "$ref": "#/definitions/OrderResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/preview/syncorders/{orderId}": {
      "put": {
        "tags": [
          "SyncOrders"
        ],
        "summary": "Verify replacing an order",
        "description": "This endpoint enables you to validate order modification directly on the execution venue.",
        "operationId": "SyncOrders_PreviewModifyOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "modifyParams",
            "in": "body",
            "description": "JSON data that contains updated information about the order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyOrderResource"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account on which a new order is to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with the updated order information is returned, indicating if the order modification JSON is properly constructed (examine the isSuccessful parameter in the JSON file).",
            "schema": {
              "$ref": "#/definitions/OrderPreviewResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/preview/syncorders": {
      "post": {
        "tags": [
          "SyncOrders"
        ],
        "summary": "Verify placing an order",
        "description": "This endpoint enables you to validate parameters of a new order directly on the execution venue.",
        "operationId": "SyncOrders_PreviewCreateOrder",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "placeParams",
            "in": "body",
            "description": "Parameters of the new order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrderResource"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account on which a new order is to be verified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency in which the underlying security of the order is denominated.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exchange",
            "in": "query",
            "description": "Exchange on which the verified order should preferably be placed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with the order information is returned, indicating if the order is properly constructed (examine the isSuccessful parameter in the JSON file).",
            "schema": {
              "$ref": "#/definitions/OrderPreviewResource"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get all transactions of a trader",
        "description": "This endpoint enables you to retrieve a list of transactions that have been made on a particular trading account.",
        "operationId": "Transactions_GetActionsPage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Internal identifier of the trading account whose transactions must be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of transactions that should be retrieved from the specified page.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (all transactions are split into pages).",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Indicates by which field the retrieved transactions should be sorted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Boolean field that indicates if the returned transactions should be sorted in  descending (true) or ascending (false) order.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter query used to retrieve only those transactions that satisfy the conditions of the query.",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the filtered transactions is returned.",
            "schema": {
              "$ref": "#/definitions/PagingResult[TransactionMapModel]"
            }
          },
          "400": {
            "description": "Filter query is invalid or contains unsupported operations"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/transfers/{id}/fees": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Get transfer fees",
        "description": "Get fees that will be levied to a transfer.",
        "operationId": "Transfers_GetTransferFees",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose transfer's fees must be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the transfer whose fees must be retrieved.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, a list of transfer fess is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeeResource"
              }
            }
          },
          "409": {
            "description": "Failed to get a list of transfer fess."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/transfers/ira_constraints/{mechanism}/{isDeposit}": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Get allowed IRA account constraints for a transfer",
        "description": "This endpoint enables you to retrieve allowed IRA account constraints for a transfer.",
        "operationId": "Transfers_GetAllowedIraConstraint",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose IRA transfer constraints must be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mechanism",
            "in": "path",
            "description": "Transfer mechanism type (ACH, Wire, Check).{Etna.Trader.AccountManagement.Contracts.TransferMechanismType}",
            "required": true,
            "type": "string",
            "enum": [
              "ACH",
              "Check",
              "Wire"
            ]
          },
          {
            "name": "isDeposit",
            "in": "path",
            "description": "Transfer type: true (deposit), false (withdrawal).",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, IRA transfer constraints are returned.",
            "schema": {
              "$ref": "#/definitions/AllowedIraConstraintsResource"
            }
          },
          "409": {
            "description": "Failed to retrieve IRA transfer constraints."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/transfers": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Get all past and pending transfers",
        "description": "This endpoint enables you to retrieve all past and pending deposits and withdrawals of a specific trading account.",
        "operationId": "Transfers_GetAchRelationshipsPage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose transfers must be returned.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Parameter by which all transfers must be sorted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Indicates if returned transfers must be sorted in descending order.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, an array of past and pending transfers is returned.",
            "schema": {
              "$ref": "#/definitions/PagingResult[TransferResource]"
            }
          },
          "400": {
            "description": "Filter query is invalid or contains unsupported operations"
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/transfers/ach": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Send an ACH transfer to the clearing firm",
        "description": "This endpoint enables you to send an ACH transfer to the clearing firm for final approval.",
        "operationId": "Transfers_SendAchTransfer",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AchTransferEditableResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the ACH transfer was successfully sent to the clearing firm.",
            "schema": {
              "$ref": "#/definitions/TransferResource"
            }
          },
          "409": {
            "description": "Failed to send the ACH transfer to the clearing firm."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/transfers/wire": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Send a wire transfer to the clearing firm",
        "description": "This endpoint enables you to send a wire transfer to the clearing firm for final approval.",
        "operationId": "Transfers_SendWireTransfer",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WireTransferEditableResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the wire transfer was successfully sent to the clearing firm.",
            "schema": {
              "$ref": "#/definitions/TransferResource"
            }
          },
          "409": {
            "description": "Failed to send the wire transfer to the clearing firm."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/transfers/check": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Send a check transfer to the clearing firm",
        "description": "This endpoint enables you to send a check transfer to the clearing firm for final approval.",
        "operationId": "Transfers_SendCheckTransfer",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckRequestEditableResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the check transfer was successfully sent to the clearing firm.",
            "schema": {
              "$ref": "#/definitions/TransferResource"
            }
          },
          "409": {
            "description": "Failed to send the check transfer to the clearing firm."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/transfers/{transferId}": {
      "delete": {
        "tags": [
          "Transfers"
        ],
        "summary": "Request a cancellation of a transfer",
        "description": "This endpoint enables you to send a request to cancel a withdrawal or a deposit.",
        "operationId": "Transfers_CancelTransfer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the trading account whose transfer must be cancelled.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transferId",
            "in": "path",
            "description": "ID of the transfer that must be cancelled.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "comment",
            "in": "query",
            "description": "Reason for transfer cancellation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the transfer cancellation request was successfully sent."
          },
          "409": {
            "description": "Failed to send the transfer cancellation request."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/accounts": {
      "get": {
        "tags": [
          "UserAccounts"
        ],
        "summary": "Get all accounts of a user",
        "description": "This endpoint enables you to retrieve the list of all trading accounts bound to a particular user.",
        "operationId": "UserAccounts_GetUserAccounts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user whose trading accounts must be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data is returned, containing all trading accounts bound to the user whose ID was specified in the request path.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAccountModel"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/info": {
      "get": {
        "tags": [
          "UserAccounts"
        ],
        "summary": "Get balance information for an account",
        "description": "This endpont enables you to retrieve balance information of a particular trading account.",
        "operationId": "UserAccounts_GetAccountBalanceInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account in app.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with balance information of the specified trading account is returned.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "format": "double",
                "type": "number"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/users": {
      "get": {
        "tags": [
          "UserAccounts"
        ],
        "summary": "Get account users",
        "description": "This API endpoint enables you to retrieve the list of users who have access to a specific trading account.",
        "operationId": "UserAccounts_GetAccountUsers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "This is the internal identifier of the trading account whose users need to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data is returned, containing the list of users.",
            "schema": {
              "$ref": "#/definitions/UserToAccountRelationModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/details": {
      "get": {
        "tags": [
          "UserAccounts"
        ],
        "summary": "Get account info",
        "description": "This API endpoint enables you to get account info.",
        "operationId": "UserAccounts_GetAccountInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "This is the internal identifier of the trading account.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data is returned.",
            "schema": {
              "$ref": "#/definitions/AMSAccountModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/history": {
      "get": {
        "tags": [
          "UserAccounts"
        ],
        "summary": "Get historical account value",
        "description": "This endpoint returns the historical values of a particular trading account over the specified period.",
        "operationId": "UserAccounts_GetAccountHistory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique identifier of the trading account in app.This is the unique identifier of the trading account in app.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start of the target period (in UTC ticks).",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end of the target period (in UTC ticks).",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "step",
            "in": "query",
            "description": "Obsolete parameter.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with historical values of the specified trading account is returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountValueItem"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/all": {
      "get": {
        "tags": [
          "UserAccounts"
        ],
        "summary": "Get all accounts",
        "description": "This endpoint depending on your permissions enables you to retrieve the list of all trading accounts that have been created by the users of your company or your own accounts bound to the user.",
        "operationId": "UserAccounts_GetAccounts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "This is the page number (all trading accounts are split into pages).",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "This is the number of trading accounts that should be retrieved from the specified page.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "propertyName",
            "in": "query",
            "description": "This is the field by which the retrieved trading accounts should be sorted. For example, if the value of this parameter is set to Cash, the retrieved trading accounts will be sorted by the accounts' cash balance.",
            "required": false,
            "type": "string"
          },
          {
            "name": "isAscending",
            "in": "query",
            "description": "This is a boolean field that indicates if the returned trading accounts should be sorted in ascending (true) or descending (false) order.",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "This is a filter query used to retrieve only those trading accounts that satisfy the conditions of the query.",
            "required": false,
            "type": "string",
            "format": "String"
          },
          {
            "name": "isReport",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "mask",
            "in": "query",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data is returned, containing the list of trading accounts.",
            "schema": {
              "$ref": "#/definitions/PagingResult[AccountModel]"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/alias/{alias}": {
      "put": {
        "tags": [
          "UserAccounts"
        ],
        "summary": "Update alias account for current user",
        "description": "This API endpoint enables you to update alias for existing trading account to current user.",
        "operationId": "UserAccounts_UpdateAccountAlias",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "This is the internal identifier of the trading account which is to be bound to an existing user.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "alias",
            "in": "path",
            "description": "This is the alias which the user should have to this trading account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data is returned, containing the information about the user and their trading accounts."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/users/{userId}": {
      "put": {
        "tags": [
          "UserAccounts"
        ],
        "summary": "Add account to user",
        "description": "This API endpoint enables you to bind a new or an existing trading account to an existing user.",
        "operationId": "UserAccounts_AddAccountToUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "This is the internal identifier of the user to whom an existing trading account must be bound.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "This is the internal identifier of the trading account which is to be bound to an existing user.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accessType",
            "in": "query",
            "description": "This is the access level the user should have to this trading account.",
            "required": true,
            "type": "string",
            "enum": [
              "Full",
              "ReadOnly",
              "ClosePositionsOnly",
              "Owner"
            ]
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data is returned, containing the information about the user and their trading accounts.",
            "schema": {
              "$ref": "#/definitions/UserToAccountRelationModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "UserAccounts"
        ],
        "summary": "Remove account from user",
        "description": "This API endpoint enables you to unbind a particular trading account from an existing user.",
        "operationId": "UserAccounts_RemoveAccountFromUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "This is the internal identifier of the user from whom an existing trading account must be unbound.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "This is the internal identifier of the trading account which is to be unbound from an existing user.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data is returned, containing updated information about the user and their trading accounts.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserToAccountRelationModel"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/accounts/{accountId}/username/{username}": {
      "put": {
        "tags": [
          "UserAccounts"
        ],
        "summary": "Add account to user by username",
        "description": "This API endpoint enables you to bind a new or an existing trading account to an existing user.",
        "operationId": "UserAccounts_AddAccountToUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "This is the username of the user to whom an existing trading account must be bound.",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "This is the internal identifier of the trading account which is to be bound to an existing user.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accessType",
            "in": "query",
            "description": "This is the access level the user should have to this trading account.",
            "required": true,
            "type": "string",
            "enum": [
              "Full",
              "ReadOnly",
              "ClosePositionsOnly",
              "Owner"
            ]
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data is returned, containing the information about the user and their trading accounts.",
            "schema": {
              "$ref": "#/definitions/UserToAccountRelationModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's info by ID",
        "description": "This endpoint enables you to retrieve information about a particular user by providing their internal identifier in app in the request path.",
        "operationId": "Users_GetUserInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user in app. If the information is requested about the user whose Authorization token is provided in the request, simply use the ‘@me’ directive instead of the user’s ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with the user’s information is returned.",
            "schema": {
              "$ref": "#/definitions/UserInfoModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/settings/trading": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's settings by ID",
        "description": "This endpoint enables you to retrieve the settings of a specific user.",
        "operationId": "Users_GetUserTradingSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user in app. If the information is requested about the user whose Authorization token is provided in the request, simply use the ‘@me’ directive instead of the user’s ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with the user’s trading settings is returned.",
            "schema": {
              "$ref": "#/definitions/UserTradingSettingsModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Set a user's settings by ID",
        "description": "This endpoint enables you to set the settings of a specific user.",
        "operationId": "Users_SettUserTradingSettings",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user in app. If the information is requested about the user whose Authorization token is provided in the request, simply use the ‘@me’ directive instead of the user’s ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tradingSettings",
            "in": "body",
            "description": "New trading settings that should be set for the specified user.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserTradingSettingsModel"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data with the new user’s trading settings is returned.",
            "schema": {
              "$ref": "#/definitions/UserTradingSettingsModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/password/change": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Change the user's password",
        "description": "This endpoint enables you to change the password of the user whose authorization token is used to perform the request.",
        "operationId": "Users_ChangeUserPassword",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user in app. For simplicity, you can set this parameter to ‘@me’.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userPassword",
            "in": "body",
            "description": "JSON data containing the old and the new password.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeUserPasswordResource"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the user's password was changed."
          },
          "400": {
            "description": "Failed to change the user's password."
          },
          "409": {
            "description": "An error occurred in attempt to change the user's password."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/pincode": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset Pin code",
        "description": "This endpoint enables you to reset Pin code.",
        "operationId": "Users_ResetPinCode",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose Pin code needs to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "409": {
            "description": "Failed to init reset Pin code.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/group": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add user into ProTrader group",
        "description": "This endpoint enables you to add specific user into ProTrader group.",
        "operationId": "Users_AddUserToGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user in app. For simplicity, you can set this parameter to ‘@me’.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "confirmationToken",
            "in": "query",
            "description": "Confirmation token to be able to add specific user into ProTrader group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, the user add in group."
          },
          "400": {
            "description": "Failed to add user into group."
          },
          "409": {
            "description": "An error occurred in attempt to add user into group."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/watchlists": {
      "get": {
        "tags": [
          "Watchlists"
        ],
        "summary": "Get all watchlists of a user",
        "description": "This endpoint enables you to retrieve all watchlists of a particular user. If parameter includeSecurities is set to true, the watchlists’ securities will also be included in the response.",
        "operationId": "Watchlists_GetUserWatchlists",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose watchlists need to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeSecurities",
            "in": "query",
            "description": "Boolean parameter that indicates if the list of securities in the watchlists should be returned in the request response.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the information about the user’s watchlists is returned (along with their corresponding securities if the resultIncludeSecurities parameter was set to true).",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WatchlistModel"
              }
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "post": {
        "tags": [
          "Watchlists"
        ],
        "summary": "Create a new watchlist",
        "description": "This endpoint enables you to create a new watchlist.",
        "operationId": "Watchlists_CreateWatchlist",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user for whom a new watchlist needs to be created.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "watchlist",
            "in": "body",
            "description": "JSON data that contains information about the new watchlist as well as the list of securities the watchlist should contain.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWatchlistModel"
            }
          },
          {
            "name": "resultIncludeSecurities",
            "in": "query",
            "description": "Boolean parameter that indicates if the list of securities in the watchlist should be returned in the request response.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the information about the new watchlist is returned (along with its securities if the resultIncludeSecurities parameter was set to true).",
            "schema": {
              "$ref": "#/definitions/WatchlistModel"
            }
          },
          "409": {
            "description": "Failed to create the watchlist: another watchlist with the same name already exists or the specified securities couldn’t be added.",
            "schema": {
              "$ref": "#/definitions/WatchlistModel"
            }
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/watchlists/{watchlistId}": {
      "get": {
        "tags": [
          "Watchlists"
        ],
        "summary": "Get a user's watchlist",
        "description": "This endpoint enables you to retrieve information about a user's specific watchlist. If parameter includeSecurities is set to true, the watchlist’s securities will also be included in the response.",
        "operationId": "Watchlists_GetWatchlist",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose watchlist’s information needs to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "watchlistId",
            "in": "path",
            "description": "Internal identifier of the watchlist whose information needs to be retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeSecurities",
            "in": "query",
            "description": "Boolean parameter that indicates if the list of securities in the watchlist should be returned in the request response.",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the information about the new watchlist is returned (along with its securities if the resultIncludeSecurities parameter was set to true).",
            "schema": {
              "$ref": "#/definitions/WatchlistModel"
            }
          },
          "409": {
            "description": "The watchlist does not exist."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "Watchlists"
        ],
        "summary": "Delete a watchlist.",
        "description": "This endpoint enables you to delete an existing watchlist.",
        "operationId": "Watchlists_DeleteWatchlist",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose watchlist needs to be deleted.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "watchlistId",
            "in": "path",
            "description": "Internal identifier of the watchlist that needs to be deleted.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "Successful request, the watchlist was successfully deleted."
          },
          "409": {
            "description": "Failed to delete the watchlist due to some conflict."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/watchlists/{watchlistId}/securities": {
      "put": {
        "tags": [
          "Watchlists"
        ],
        "summary": "Add a security to a watchlist by symbol",
        "description": "This endpoint enables you to add a security to a custom watchlist by providing the security’s ticker symbol in the request body.",
        "operationId": "Watchlists_AddSecurtiy",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose watchlist needs to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "watchlistId",
            "in": "path",
            "description": "Internal identifier of the watchlist that needs to be appended by a new security.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "symbolToExchange",
            "in": "body",
            "description": "JSON dictionary that contains three parameters of the added security: currency, exchange, and symbol.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecuritySignature"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the modified watchlist is returned.",
            "schema": {
              "$ref": "#/definitions/WatchlistModel"
            }
          },
          "409": {
            "description": "Failed to remove the security due to some conflict (perhaps the watchlist is read-only)."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "Watchlists"
        ],
        "summary": "Remove a security from a watchlist by symbol",
        "description": "This endpoint enables you to remove a security from an existing watchlist by providing the security’s ticker symbol, currency, and the exchange on which it’s listed.",
        "operationId": "Watchlists_RemoveSecurity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose watchlist needs to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "watchlistId",
            "in": "path",
            "description": "Internal identifier of the watchlist from which the security will be removed.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "symbolToExchange",
            "in": "body",
            "description": "JSON data that contains information about the security that must be removed (ticker symbol, exchange, and currency).",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecuritySignature"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the updated watchlist is returned.",
            "schema": {
              "$ref": "#/definitions/WatchlistModel"
            }
          },
          "409": {
            "description": "The security couldn’t be removed from the watchlist due to some conflict."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/watchlists/{watchlistId}/name": {
      "put": {
        "tags": [
          "Watchlists"
        ],
        "summary": "Rename a watchlist.",
        "description": "This endpoint enables you to rename an existing watchlist.",
        "operationId": "Watchlists_EditWatchlistName",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose watchlist must be renamed.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "watchlistId",
            "in": "path",
            "description": "Internal identifier of the watchlist that must be renamed.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "description": "New name of the modified watchlist.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the renamed watchlist’s ID and its new name is returned.",
            "schema": {
              "$ref": "#/definitions/Tuple[Int32,String]"
            }
          },
          "409": {
            "description": "Failed to rename the watchlist due to some conflict."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/v{version}/users/{userId}/watchlists/{watchlistId}/securities/{securityId}": {
      "put": {
        "tags": [
          "Watchlists"
        ],
        "summary": "Add a security to a watchlist by ID",
        "description": "This endpoint enables you add a security to a custom watchlist by providing the security’s internal identifier in the request header.",
        "operationId": "Watchlists_AddSecurityById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose watchlist needs to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "watchlistId",
            "in": "path",
            "description": "Internal identifier of the watchlist that needs to be appended by a new security.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "securityId",
            "in": "path",
            "description": "Internal identifier of the security that needs to be added to the specified watchlist.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the modified watchlist is returned.",
            "schema": {
              "$ref": "#/definitions/WatchlistModel"
            }
          },
          "409": {
            "description": "Failed to modify the watchlist, perhaps the watchlist is read-only."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      },
      "delete": {
        "tags": [
          "Watchlists"
        ],
        "summary": "Remove a security from watchlist by ID",
        "description": "This endpoint enables you to remove a security from an existing watchlist by providing the security’s internal identifier in app.",
        "operationId": "Watchlists_RemoveSecurityById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Internal identifier of the user whose watchlist needs to be modified.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "watchlistId",
            "in": "path",
            "description": "Internal identifier of the watchlist from which the security will be removed.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "securityId",
            "in": "path",
            "description": "Internal identifier of the security that is to be removed from the watchlist.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API. Unless you have multiple versions of app’s API deployed in your environment, leave it at 1.0.",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that you retrieved from the first endpoint (/token).",
            "required": true,
            "type": "string"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request, JSON data containing the updated information about the user’s watchlists is returned.",
            "schema": {
              "$ref": "#/definitions/WatchlistModel"
            }
          },
          "409": {
            "description": "Failed to remove the security from the watchlist due to some conflict."
          },
          "403": {
            "description": "The provided App-Key is incorrect."
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation."
          },
          "422": {
            "description": "A validation error occurred while processing the request."
          }
        }
      }
    },
    "/token": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Get token",
        "description": "This API endpoint returns the authentication token that is used in all other API requests.",
        "operationId": "Get_token",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Username",
            "in": "header",
            "description": "This is the name of the user on whose behalf the authentication is being performed.",
            "required": false,
            "type": "string",
            "default": "testusername"
          },
          {
            "name": "Password",
            "in": "header",
            "description": "The password of the user on whose behalf the authentication is being performed.",
            "required": false,
            "type": "string",
            "default": "testpassword"
          },
          {
            "name": "OAuthCode",
            "in": "header",
            "description": "The OAuthCode of the user on whose behalf the authentication is being performed.",
            "required": false,
            "type": "string",
            "default": "testoauthcode"
          },
          {
            "name": "RedirectUri",
            "in": "header",
            "description": "The RedirectUri of the user on whose behalf the authentication is being performed.",
            "required": false,
            "type": "string",
            "default": "testredirecturi"
          },
          {
            "name": "PinCode",
            "in": "header",
            "description": "This is the user’s pincode.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "VerificationCode",
            "in": "header",
            "description": "This is the verification code sent by email or SMS (the second step of 2-FA).",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "This is the authorization token that must be provided in the header of all requests except this one.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "This is your app’s unique key that can be retrieved from the BO Companies widget in app.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "The access level of the provided authorization token is not sufficient to perform this operation.",
            "schema": {
              "$ref": "#/definitions/Failed"
            },
            "examples": {
              "State": "Failed",
              "Step": "SecutityPin",
              "Reason": "Invalid pin",
              "ConfirmationToken": ""
            }
          },
          "202": {
            "description": "Several authentication steps have been taken, but the server is expecting additional parameters (like the verification code). Use the token from the response and provide the required additional parameters to complete the authentication procedure.",
            "schema": {
              "$ref": "#/definitions/Succeed"
            },
            "examples": {
              "Step": "SecutityPin",
              "Reason": "Invalid pin",
              "State": "Expecting",
              "Token": "VGhpcyBpcyBleGFtcGxlIHRva2Vu...."
            }
          },
          "200": {
            "description": "The authentication is complete and the provided token can be used in other API requests.",
            "schema": {
              "$ref": "#/definitions/Succeed"
            },
            "examples": {
              "State": "Succeeded",
              "Token": "VGhpcyBpcyBleGFtcGxlIHRva2Vu..."
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "SignOut",
        "description": "SignOut.",
        "operationId": "Logout",
        "consumes": [],
        "parameters": [],
        "responses": {}
      }
    }
  },
  "definitions": {
    "AccountOpeningProviderResource": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "AccountProvider": {
          "type": "string"
        },
        "FormType": {
          "type": "string"
        },
        "Editable": {
          "type": "boolean"
        },
        "ShowReminder": {
          "type": "boolean"
        },
        "ContinueLater": {
          "type": "boolean"
        },
        "EnableAccountTransfer": {
          "type": "boolean"
        }
      }
    },
    "AccountOpeningConfigurationResource": {
      "type": "object",
      "properties": {
        "AccessWithoutAccount": {
          "type": "boolean"
        },
        "AccountAddingIsAllowed": {
          "type": "boolean"
        },
        "Providers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountOpeningProviderResource"
          }
        }
      }
    },
    "AccountRequestResource": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "UserId": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "FormDataReference": {
          "type": "string"
        },
        "AccountNumber": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "FormType": {
          "type": "string"
        },
        "RequestType": {
          "type": "string"
        },
        "AccountProvider": {
          "type": "string"
        },
        "AccountCustomerType": {
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "ReferralCode": {
          "type": "string"
        }
      }
    },
    "GetAccountPDFFileDto": {
      "type": "object",
      "properties": {
        "formTitle": {
          "type": "string"
        },
        "downloadLink": {
          "type": "string"
        },
        "expiresAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PagingResult[AccountRequestVersionResource]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountRequestVersionResource"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "AccountRequestVersionResource": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "MadeBy": {
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PagingResult[AccountRequestResource]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountRequestResource"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "CancelRequestResource": {
      "type": "object",
      "properties": {
        "Reason": {
          "type": "string"
        },
        "SyncProcessing": {
          "type": "boolean"
        }
      }
    },
    "RejectRequestResource": {
      "type": "object",
      "properties": {
        "Reason": {
          "type": "string"
        },
        "SyncProcessing": {
          "type": "boolean"
        }
      }
    },
    "SubmitRequestResource": {
      "type": "object",
      "properties": {
        "FormDataReference": {
          "type": "string"
        },
        "SyncProcessing": {
          "type": "boolean"
        }
      }
    },
    "ApproveRequestResource": {
      "type": "object",
      "properties": {
        "Comment": {
          "type": "string"
        },
        "SyncProcessing": {
          "type": "boolean"
        }
      }
    },
    "CreateCloseAccountRequestResource": {
      "type": "object",
      "properties": {
        "AccountProvider": {
          "enum": [
            "None",
            "PaperTrading",
            "Apex",
            "FcStone",
            "Axos",
            "Velox",
            "Siebert",
            "InteliClear"
          ],
          "type": "string"
        },
        "ClearingAccountNumber": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        }
      }
    },
    "CreateUpdateAccountRequestResource": {
      "type": "object",
      "properties": {
        "AccountProvider": {
          "enum": [
            "None",
            "PaperTrading",
            "Apex",
            "FcStone",
            "Axos",
            "Velox",
            "Siebert",
            "InteliClear"
          ],
          "type": "string"
        },
        "ClearingAccountNumber": {
          "type": "string"
        }
      }
    },
    "CreateOpenAccountRequestResource": {
      "type": "object",
      "properties": {
        "AccountProvider": {
          "type": "string"
        },
        "FormType": {
          "type": "string"
        }
      }
    },
    "AccountTransferResource": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "AccountProvider": {
          "enum": [
            "None",
            "PaperTrading",
            "Apex",
            "FcStone",
            "Axos",
            "Velox",
            "Siebert"
          ],
          "type": "string"
        },
        "FromAccount": {
          "type": "string"
        },
        "ToAccount": {
          "type": "string"
        },
        "InitiatedBy": {
          "type": "string"
        },
        "AcceptedBy": {
          "type": "string"
        },
        "Type": {
          "enum": [
            "UNDEFINED",
            "FAIL_REVERSAL_BROKER_TO_BROKER_ONLY",
            "FULL_TRANSFER",
            "MUTUAL_FUND_CLEANUP",
            "PARTIAL_TRANSFER_DELIVERER",
            "PARTIAL_TRANSFER_RECEIVER",
            "POSITION_TRANSFER_FUND_FIRM_TO_MUTUAL_FUND_COMPANY_ONLY",
            "RECLAIM",
            "RESIDUAL_CREDIT"
          ],
          "type": "string"
        },
        "TifId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AcatsControlNumber": {
          "format": "int64",
          "type": "integer"
        },
        "FormDataReference": {
          "type": "string"
        },
        "Status": {
          "enum": [
            "NEW",
            "SUBMITTED",
            "ACCEPTED",
            "DECLINED",
            "PROCESSING_BY_CLEARING",
            "SENDING_TO_ACATS",
            "PROCESSING_BY_ACATS",
            "DELIVERING_FIRM_NOT_RESPONDED",
            "REJECTED_BY_DELIVERING_FIRM",
            "IN_REVIEW",
            "REVIEW_FAILED",
            "IN_ACCELERATE_REVIEW",
            "IN_PROGRESS",
            "ERROR",
            "REJECTED_BY_ACATS",
            "COMPLETED",
            "CANCELLED",
            "SYSTEM_PURGE"
          ],
          "type": "string"
        },
        "History": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountTransferHistoryItemResource"
          }
        },
        "ParticipantImageURL": {
          "type": "string"
        },
        "TransferInitiator": {
          "$ref": "#/definitions/TransferInitiatorResource"
        },
        "PartialTransferProperties": {
          "$ref": "#/definitions/PartialTransferPropertiesDto"
        }
      }
    },
    "AccountTransferHistoryItemResource": {
      "type": "object",
      "properties": {
        "RequestId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "enum": [
            "NEW",
            "SUBMITTED",
            "ACCEPTED",
            "DECLINED",
            "PROCESSING_BY_CLEARING",
            "SENDING_TO_ACATS",
            "PROCESSING_BY_ACATS",
            "DELIVERING_FIRM_NOT_RESPONDED",
            "REJECTED_BY_DELIVERING_FIRM",
            "IN_REVIEW",
            "REVIEW_FAILED",
            "IN_ACCELERATE_REVIEW",
            "IN_PROGRESS",
            "ERROR",
            "REJECTED_BY_ACATS",
            "COMPLETED",
            "CANCELLED",
            "SYSTEM_PURGE"
          ],
          "type": "string"
        },
        "ChangedBy": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        }
      }
    },
    "TransferInitiatorResource": {
      "type": "object",
      "properties": {
        "FirstName": {
          "type": "string"
        },
        "Middle": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Login": {
          "type": "string"
        }
      }
    },
    "PartialTransferPropertiesDto": {
      "type": "object",
      "properties": {
        "cash": {
          "$ref": "#/definitions/TransferInitiationCashDto"
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransferInitiationAssetDto"
          }
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransferInitiationOptionDto"
          }
        }
      }
    },
    "TransferInitiationCashDto": {
      "type": "object",
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "isoCurrencyCode": {
          "type": "string"
        },
        "type": {
          "enum": [
            "DEBIT",
            "CREDIT"
          ],
          "type": "string"
        }
      }
    },
    "TransferInitiationAssetDto": {
      "type": "object",
      "properties": {
        "assetType": {
          "enum": [
            "CUSIP",
            "SYMBOL",
            "ISIN",
            "CINS",
            "SEDOL",
            "CASH"
          ],
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "isoCurrencyCode": {
          "type": "string"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "isShort": {
          "type": "boolean"
        }
      }
    },
    "TransferInitiationOptionDto": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string"
        },
        "contractDate": {
          "format": "date-time",
          "type": "string"
        },
        "optionType": {
          "enum": [
            "PUT",
            "CALL"
          ],
          "type": "string"
        },
        "strikePrice": {
          "format": "double",
          "type": "number"
        },
        "isShort": {
          "type": "boolean"
        },
        "amount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "SubmitAccountTransferRequestResource": {
      "type": "object",
      "properties": {
        "FormDataReference": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        }
      }
    },
    "ModifyAccountTransferRequestResource": {
      "type": "object",
      "properties": {
        "Comment": {
          "type": "string"
        }
      }
    },
    "AchRelationshipResource": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AccountId": {
          "format": "int32",
          "type": "integer"
        },
        "ExternalId": {
          "type": "string"
        },
        "RoutingNumber": {
          "type": "string"
        },
        "AccountNumber": {
          "type": "string"
        },
        "AccountOwnerName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "CancelDate": {
          "format": "date-time",
          "type": "string"
        },
        "CancelReason": {
          "type": "string"
        },
        "ApprovalMethod": {
          "type": "string"
        },
        "Default": {
          "type": "boolean"
        },
        "BankAccountType": {
          "type": "string"
        }
      }
    },
    "UpdateAchRelationshipResource": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        }
      }
    },
    "PagingResult[AchRelationshipResource]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AchRelationshipResource"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "CreateAchRelationshipResource": {
      "type": "object",
      "properties": {
        "RoutingNumber": {
          "type": "string"
        },
        "AccountNumber": {
          "type": "string"
        },
        "AccountOwnerName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "ApprovalMethod": {
          "type": "string"
        },
        "BankAccountType": {
          "type": "string"
        }
      }
    },
    "CreateAchRelationshipsPlaidResource": {
      "type": "object",
      "properties": {
        "Accounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "BankName": {
          "type": "string"
        },
        "PublicToken": {
          "type": "string"
        },
        "AccountId": {
          "type": "string"
        }
      }
    },
    "ApproveAchRelationshipResource": {
      "type": "object",
      "properties": {
        "Amount1": {
          "format": "double",
          "type": "number"
        },
        "Amount2": {
          "format": "double",
          "type": "number"
        },
        "Amount3": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "AgreementItemResource": {
      "type": "object",
      "properties": {
        "Type": {
          "enum": [
            "Platform",
            "Quotemedia",
            "Quodd"
          ],
          "type": "string"
        },
        "CanSkip": {
          "type": "boolean"
        }
      }
    },
    "SPAApplicationSettings": {
      "type": "object",
      "properties": {
        "TradingIsEnabled": {
          "type": "boolean"
        }
      }
    },
    "MobileApplicationSettings": {
      "type": "object",
      "properties": {
        "Settings": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ResourceBasedResponse[IList[SecurityImages]]": {
      "type": "object",
      "properties": {
        "Model": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityImages"
          },
          "readOnly": true
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ModelState": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readOnly": true
        },
        "ErrorsCode": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusCode": {
          "enum": [
            "Continue",
            "SwitchingProtocols",
            "OK",
            "Created",
            "Accepted",
            "NonAuthoritativeInformation",
            "NoContent",
            "ResetContent",
            "PartialContent",
            "MultipleChoices",
            "Ambiguous",
            "MovedPermanently",
            "Moved",
            "Found",
            "Redirect",
            "SeeOther",
            "RedirectMethod",
            "NotModified",
            "UseProxy",
            "Unused",
            "TemporaryRedirect",
            "RedirectKeepVerb",
            "BadRequest",
            "Unauthorized",
            "PaymentRequired",
            "Forbidden",
            "NotFound",
            "MethodNotAllowed",
            "NotAcceptable",
            "ProxyAuthenticationRequired",
            "RequestTimeout",
            "Conflict",
            "Gone",
            "LengthRequired",
            "PreconditionFailed",
            "RequestEntityTooLarge",
            "RequestUriTooLong",
            "UnsupportedMediaType",
            "RequestedRangeNotSatisfiable",
            "ExpectationFailed",
            "UpgradeRequired",
            "InternalServerError",
            "NotImplemented",
            "BadGateway",
            "ServiceUnavailable",
            "GatewayTimeout",
            "HttpVersionNotSupported"
          ],
          "type": "string"
        },
        "IsSucceed": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "SecurityImages": {
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string"
        },
        "Content": {
          "type": "string"
        }
      }
    },
    "ResourceBasedResponse[IEnumerable[ISecretQuestion]]": {
      "type": "object",
      "properties": {
        "Model": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISecretQuestion"
          },
          "readOnly": true
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ModelState": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readOnly": true
        },
        "ErrorsCode": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusCode": {
          "enum": [
            "Continue",
            "SwitchingProtocols",
            "OK",
            "Created",
            "Accepted",
            "NonAuthoritativeInformation",
            "NoContent",
            "ResetContent",
            "PartialContent",
            "MultipleChoices",
            "Ambiguous",
            "MovedPermanently",
            "Moved",
            "Found",
            "Redirect",
            "SeeOther",
            "RedirectMethod",
            "NotModified",
            "UseProxy",
            "Unused",
            "TemporaryRedirect",
            "RedirectKeepVerb",
            "BadRequest",
            "Unauthorized",
            "PaymentRequired",
            "Forbidden",
            "NotFound",
            "MethodNotAllowed",
            "NotAcceptable",
            "ProxyAuthenticationRequired",
            "RequestTimeout",
            "Conflict",
            "Gone",
            "LengthRequired",
            "PreconditionFailed",
            "RequestEntityTooLarge",
            "RequestUriTooLong",
            "UnsupportedMediaType",
            "RequestedRangeNotSatisfiable",
            "ExpectationFailed",
            "UpgradeRequired",
            "InternalServerError",
            "NotImplemented",
            "BadGateway",
            "ServiceUnavailable",
            "GatewayTimeout",
            "HttpVersionNotSupported"
          ],
          "type": "string"
        },
        "IsSucceed": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ISecretQuestion": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ResourceBasedResponse[String]": {
      "type": "object",
      "properties": {
        "Model": {
          "type": "string",
          "readOnly": true
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ModelState": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readOnly": true
        },
        "ErrorsCode": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusCode": {
          "enum": [
            "Continue",
            "SwitchingProtocols",
            "OK",
            "Created",
            "Accepted",
            "NonAuthoritativeInformation",
            "NoContent",
            "ResetContent",
            "PartialContent",
            "MultipleChoices",
            "Ambiguous",
            "MovedPermanently",
            "Moved",
            "Found",
            "Redirect",
            "SeeOther",
            "RedirectMethod",
            "NotModified",
            "UseProxy",
            "Unused",
            "TemporaryRedirect",
            "RedirectKeepVerb",
            "BadRequest",
            "Unauthorized",
            "PaymentRequired",
            "Forbidden",
            "NotFound",
            "MethodNotAllowed",
            "NotAcceptable",
            "ProxyAuthenticationRequired",
            "RequestTimeout",
            "Conflict",
            "Gone",
            "LengthRequired",
            "PreconditionFailed",
            "RequestEntityTooLarge",
            "RequestUriTooLong",
            "UnsupportedMediaType",
            "RequestedRangeNotSatisfiable",
            "ExpectationFailed",
            "UpgradeRequired",
            "InternalServerError",
            "NotImplemented",
            "BadGateway",
            "ServiceUnavailable",
            "GatewayTimeout",
            "HttpVersionNotSupported"
          ],
          "type": "string"
        },
        "IsSucceed": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ChangePinResource": {
      "type": "object",
      "properties": {
        "Token": {
          "type": "string"
        },
        "Pin": {
          "type": "string"
        },
        "ImageName": {
          "type": "string"
        },
        "PersonalPhrase": {
          "type": "string"
        }
      }
    },
    "ResourceBasedResponse": {
      "type": "object",
      "properties": {
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ModelState": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readOnly": true
        },
        "ErrorsCode": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusCode": {
          "enum": [
            "Continue",
            "SwitchingProtocols",
            "OK",
            "Created",
            "Accepted",
            "NonAuthoritativeInformation",
            "NoContent",
            "ResetContent",
            "PartialContent",
            "MultipleChoices",
            "Ambiguous",
            "MovedPermanently",
            "Moved",
            "Found",
            "Redirect",
            "SeeOther",
            "RedirectMethod",
            "NotModified",
            "UseProxy",
            "Unused",
            "TemporaryRedirect",
            "RedirectKeepVerb",
            "BadRequest",
            "Unauthorized",
            "PaymentRequired",
            "Forbidden",
            "NotFound",
            "MethodNotAllowed",
            "NotAcceptable",
            "ProxyAuthenticationRequired",
            "RequestTimeout",
            "Conflict",
            "Gone",
            "LengthRequired",
            "PreconditionFailed",
            "RequestEntityTooLarge",
            "RequestUriTooLong",
            "UnsupportedMediaType",
            "RequestedRangeNotSatisfiable",
            "ExpectationFailed",
            "UpgradeRequired",
            "InternalServerError",
            "NotImplemented",
            "BadGateway",
            "ServiceUnavailable",
            "GatewayTimeout",
            "HttpVersionNotSupported"
          ],
          "type": "string"
        },
        "IsSucceed": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ChangePasswordResource": {
      "type": "object",
      "properties": {
        "Token": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "PasswordConfirmation": {
          "type": "string"
        }
      }
    },
    "RequestResetSecretQuestion": {
      "type": "object",
      "properties": {
        "QuestionId": {
          "format": "int32",
          "type": "integer"
        },
        "Answer": {
          "type": "string"
        },
        "Token": {
          "type": "string"
        }
      }
    },
    "RequestChangePasswordResource": {
      "type": "object",
      "properties": {
        "User": {
          "type": "string"
        },
        "SecretQuestionAnswer": {
          "type": "string"
        }
      }
    },
    "AcceptPasswordCodeResource": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        }
      }
    },
    "AcceptCodeResource": {
      "type": "object",
      "properties": {
        "Identifier": {
          "enum": [
            "UserActivation",
            "ResetPassword",
            "ResetPinCode",
            "InvitationEmail",
            "ResetSecretQuestion",
            "AddUserToProGroup"
          ],
          "type": "string"
        },
        "Code": {
          "type": "string"
        }
      }
    },
    "CountryMapModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "SelfDefinedCode": {
          "type": "boolean"
        }
      }
    },
    "DocumentResource": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AccountNumber": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "CreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "SentDate": {
          "format": "date-time",
          "type": "string"
        },
        "ExternalId": {
          "type": "string"
        },
        "Data": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "PagingResult[DocumentResource]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentResource"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "DocumentIdResource": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "DocumentSentResource": {
      "type": "object",
      "properties": {
        "SentAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DeliveryInformationDto": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Email": {
          "type": "string"
        },
        "AccountNo": {
          "type": "string"
        },
        "SupplementEmail": {
          "type": "string"
        },
        "Options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryOptionsDto"
          }
        }
      }
    },
    "DeliveryOptionsDto": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "IsPaperless": {
          "type": "boolean"
        },
        "CategoryId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ElectronicDocumentResource": {
      "type": "object",
      "properties": {
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "Url": {
          "type": "string"
        },
        "Inserts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SubmitFeedbackModel": {
      "type": "object",
      "properties": {
        "BuildVersion": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "Contacts": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "ImagesToUpload": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Base64FileMapModel"
          }
        }
      }
    },
    "Base64FileMapModel": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Data": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      }
    },
    "PagingResult[SubmitFeedbackModel]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubmitFeedbackModel"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "Formula": {
      "description": "Formula model",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Expression": {
          "type": "string"
        }
      }
    },
    "ChartCompareRequestModel": {
      "type": "object",
      "properties": {
        "Securities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecuritySignature"
          }
        },
        "SecuritiesHistorySettings": {
          "$ref": "#/definitions/SecurityHistoryRequestSettings"
        }
      }
    },
    "SecuritySignature": {
      "type": "object",
      "properties": {
        "Symbol": {
          "type": "string"
        },
        "Exchange": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        }
      }
    },
    "SecurityHistoryRequestSettings": {
      "type": "object",
      "properties": {
        "StartDate": {
          "format": "int32",
          "type": "integer"
        },
        "EndDate": {
          "format": "int32",
          "type": "integer"
        },
        "CandlesCount": {
          "format": "int32",
          "type": "integer"
        },
        "Period": {
          "type": "string"
        },
        "Interval": {
          "format": "int32",
          "type": "integer"
        },
        "IncludeNonMarketData": {
          "type": "boolean"
        }
      }
    },
    "TimeSeriesValueCandleMapModel": {
      "type": "object",
      "properties": {
        "ValuationLevels": {
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "IsMarket": {
          "type": "boolean"
        },
        "Volume": {
          "format": "double",
          "type": "number"
        },
        "OpenInterest": {
          "format": "int32",
          "type": "integer"
        },
        "Time": {
          "format": "int32",
          "type": "integer"
        },
        "DateTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "Open": {
          "format": "double",
          "type": "number"
        },
        "High": {
          "format": "double",
          "type": "number"
        },
        "Low": {
          "format": "double",
          "type": "number"
        },
        "Close": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ChartHistoryRequestModel": {
      "type": "object",
      "properties": {
        "Security": {
          "$ref": "#/definitions/SecuritySignature"
        },
        "SecurityHistorySettings": {
          "$ref": "#/definitions/SecurityHistoryRequestSettings"
        },
        "IndicatorsHistorySettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndicatorHistoryRequestSettings"
          }
        }
      }
    },
    "IndicatorHistoryRequestSettings": {
      "type": "object",
      "properties": {
        "Signature": {
          "type": "string"
        },
        "Interval": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "int32",
          "type": "integer"
        },
        "EndDate": {
          "format": "int32",
          "type": "integer"
        },
        "CandlesCount": {
          "format": "int32",
          "type": "integer"
        },
        "Offset": {
          "format": "int32",
          "type": "integer"
        },
        "Period": {
          "type": "string"
        },
        "IncludeNonMarketData": {
          "type": "boolean"
        }
      }
    },
    "ChartHistoryModel": {
      "type": "object",
      "properties": {
        "SecurityHistory": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TimeSeriesValueCandleMapModel"
            }
          }
        },
        "IndicatorsHistory": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/IndicatorHistoryMapModel"
            }
          }
        },
        "SupportResistanceHistory": {
          "$ref": "#/definitions/SupportResistanceMapModel"
        }
      }
    },
    "IndicatorHistoryMapModel": {
      "type": "object",
      "properties": {
        "Date": {
          "format": "int32",
          "type": "integer"
        },
        "Values": {
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      }
    },
    "SupportResistanceMapModel": {
      "type": "object",
      "properties": {
        "SupportPrice": {
          "format": "double",
          "type": "number"
        },
        "ResistancePrice": {
          "format": "double",
          "type": "number"
        },
        "Levels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LevelInfoMapModel"
          }
        }
      }
    },
    "LevelInfoMapModel": {
      "type": "object",
      "properties": {
        "TopPrice": {
          "format": "double",
          "type": "number"
        },
        "BottomPrice": {
          "format": "double",
          "type": "number"
        },
        "RedCandles": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "GreenCandles": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "HistoricalTradeDataExportDataModel": {
      "type": "object",
      "properties": {
        "Securities": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Indicators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricalTradeDataExportIndicatorModel"
          }
        },
        "TimeFrame": {
          "$ref": "#/definitions/TimeFrameModel"
        },
        "DefaultFileName": {
          "type": "string"
        }
      }
    },
    "HistoricalTradeDataExportIndicatorModel": {
      "type": "object",
      "properties": {
        "Text": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Args": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "TimeFrameModel": {
      "type": "object",
      "properties": {
        "StartDate": {
          "format": "int32",
          "type": "integer"
        },
        "EndDate": {
          "format": "int32",
          "type": "integer"
        },
        "CandlesCount": {
          "format": "int32",
          "type": "integer"
        },
        "Period": {
          "type": "string"
        },
        "IncludeNonMarketData": {
          "type": "boolean"
        }
      }
    },
    "HotkeyMapModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "ActionName": {
          "type": "string"
        },
        "ActionResource": {
          "$ref": "#/definitions/WebActionMapModel"
        },
        "KeyboardShortcut": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ActionId": {
          "format": "int32",
          "type": "integer"
        },
        "Parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HotkeyParameterMapModel"
          }
        }
      }
    },
    "WebActionMapModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Action": {
          "type": "string"
        },
        "Parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebActionParameterMapModel"
          }
        }
      }
    },
    "HotkeyParameterMapModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "HotkeyId": {
          "format": "int32",
          "type": "integer"
        },
        "ParameterId": {
          "format": "int32",
          "type": "integer"
        },
        "ParameterType": {
          "format": "int32",
          "type": "integer"
        },
        "ParameterName": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "WebActionParameterMapModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "ActionId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "EditableHotkeyModel": {
      "type": "object",
      "properties": {
        "KeyboardShortcut": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ActionId": {
          "format": "int32",
          "type": "integer"
        },
        "Parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HotkeyParameterMapModel"
          }
        }
      }
    },
    "Void": {
      "type": "object",
      "properties": {}
    },
    "PagingResult[WebActionMapModel]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebActionMapModel"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "PagingResult[HotkeyMapModel]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HotkeyMapModel"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "InvestigationHistoryResource": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "CreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "InvestigationActionResource": {
      "type": "object",
      "properties": {
        "Comment": {
          "type": "string"
        },
        "Vendors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Documentation": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SnapIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BuyMutualFundResource": {
      "type": "object",
      "properties": {
        "Symbol": {
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "QuantityQualifier": {
          "enum": [
            "Shares",
            "EvenDollar",
            "GrossDollar",
            "MinusRounding",
            "PlusRounding"
          ],
          "type": "string"
        },
        "ReinvestDividends": {
          "type": "boolean"
        },
        "ReinvestShortTermGains": {
          "type": "boolean"
        },
        "ReinvestLongTermGains": {
          "type": "boolean"
        }
      }
    },
    "MutualFundResource": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "enum": [
            "New",
            "PartiallyFilled",
            "Filled",
            "DoneForDay",
            "Canceled",
            "Replaced",
            "PendingCancel",
            "Stopped",
            "Rejected",
            "Suspended",
            "PendingNew",
            "Calculated",
            "Expired",
            "AcceptedForBidding",
            "PendingReplace",
            "Error",
            "Held"
          ],
          "type": "string"
        },
        "ExecutionStatus": {
          "enum": [
            "New",
            "PartiallyFilled",
            "Filled",
            "DoneForDay",
            "Canceled",
            "Replaced",
            "PendingCancel",
            "Stopped",
            "Rejected",
            "Suspended",
            "PendingNew",
            "Calculated",
            "Expired",
            "AcceptedForBidding",
            "PendingReplace",
            "Error",
            "Held"
          ],
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ExecutedQuantity": {
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "SellMutualFundResource": {
      "type": "object",
      "properties": {
        "Symbol": {
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "QuantityQualifier": {
          "enum": [
            "Shares",
            "EvenDollar",
            "GrossDollar",
            "MinusRounding",
            "PlusRounding"
          ],
          "type": "string"
        }
      }
    },
    "ExchangeMutualFundResource": {
      "type": "object",
      "properties": {
        "SourceSymbol": {
          "type": "string"
        },
        "TargetSymbol": {
          "type": "string"
        },
        "ReinvestDividends": {
          "type": "boolean"
        },
        "ReinvestShortTermGains": {
          "type": "boolean"
        },
        "ReinvestLongTermGains": {
          "type": "boolean"
        }
      }
    },
    "LiquidateMutualFundResource": {
      "type": "object",
      "properties": {
        "Symbol": {
          "type": "string"
        }
      }
    },
    "MutualFundPreviewResource": {
      "type": "object",
      "properties": {
        "IsSuccessful": {
          "type": "boolean"
        },
        "ErrorDescription": {
          "type": "string"
        },
        "ErrorDescriptionText": {
          "type": "string"
        },
        "ErrorDescriptionArgs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NewsResource": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Date": {
          "format": "int64",
          "type": "integer"
        },
        "Source": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Attachment": {
          "type": "string"
        },
        "Content": {
          "type": "string"
        },
        "NewsId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CorporateActionResource": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "CorporateActionEventId": {
          "format": "int32",
          "type": "integer"
        },
        "Completed": {
          "type": "boolean"
        },
        "CompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "UniqueId": {
          "type": "string"
        },
        "SecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "IsCancel": {
          "type": "boolean"
        },
        "Data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "OrderResource": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Unique order id. Assigned by OMS.",
          "type": "integer"
        },
        "SecurityId": {
          "format": "int32",
          "description": "Security internal id;",
          "type": "integer"
        },
        "Symbol": {
          "type": "string"
        },
        "SecurityType": {
          "description": "Security internal type;",
          "enum": [
            "BankersAcceptance",
            "CertificateOfDeposit",
            "CollateralizeMortgageObligation",
            "CorporateBond",
            "CommercialPaper",
            "CorporatePrivatePlacement",
            "CommonStock",
            "FederalHousingAuthority",
            "FederalHomeLoan",
            "FederalNationalMortgageAssociation",
            "ForeignExchangeContract",
            "Future",
            "GovernmentNationalMortgageAssociation",
            "TreasuriesPlusAgencyDebenture",
            "MutualFund",
            "MortgageInterestOnly",
            "MortgagePrincipleOnly",
            "MortgagePrivatePlacement",
            "MiscellaneousPassThru",
            "MunicipalBond",
            "NoIsitcSecurityType",
            "Option",
            "PreferredStock",
            "RepurchaseAgreement",
            "ReverseRepurchaseAgreement",
            "StudentLoanMarketingAssociation",
            "TimeDeposit",
            "UsTreasuryBill",
            "Warrant",
            "CatsTigersLions",
            "WildcardEntry",
            "ConvertibleBond",
            "MortgageIoette",
            "Index",
            "FakeStockForNonStandartOption",
            "Right",
            "Cryptocurrency",
            "ETF",
            "DepositoryReceipt",
            "CoveredWarrant",
            "Unit"
          ],
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "Quantity. Assigned by client.",
          "type": "number"
        },
        "Price": {
          "format": "double",
          "description": "Price (not used for some order types). Assigned by client.",
          "type": "number"
        },
        "StopPrice": {
          "format": "double",
          "description": "Stop price (used for stop orders). Assigned by client.",
          "type": "number"
        },
        "ClientId": {
          "description": "Client order id (ClOrdID). Assigned by OMS.",
          "type": "string"
        },
        "ParentClientId": {
          "description": "Client order id (ClOrdID) of parent order in a case of mleg order.",
          "type": "string"
        },
        "OrigClientId": {
          "description": "Client order id (ClOrdID). Assigned by OMS.",
          "type": "string"
        },
        "ExecutedQuantity": {
          "format": "double",
          "description": "Executed quantity. Assigned by executor.",
          "type": "number"
        },
        "LastPrice": {
          "format": "double",
          "description": "Last quote. Assigned by executor.",
          "type": "number"
        },
        "LastQuantity": {
          "format": "double",
          "description": "Last transaction executed quantity. Assigned by executor.",
          "type": "number"
        },
        "LeavesQuantity": {
          "format": "double",
          "description": "Unfilled quantity. Assigned by executor.",
          "type": "number"
        },
        "AveragePrice": {
          "format": "double",
          "description": "Average execution price. Assigned by executor.",
          "type": "number"
        },
        "Side": {
          "description": "Side. Assigned by client.",
          "enum": [
            "Buy",
            "Sell",
            "SellShort",
            "BuyToCover"
          ],
          "type": "string"
        },
        "Date": {
          "format": "date-time",
          "description": "Last modification date. Assigned by OMS.",
          "type": "string"
        },
        "TransactionDate": {
          "format": "date-time",
          "description": "Last transaction date. Assigned by OMS or executor.",
          "type": "string"
        },
        "SettDate": {
          "format": "date-time",
          "description": "date of settlement. Received from execution venue or calculated by OMS, assigned by OMS or executor.",
          "type": "string"
        },
        "Status": {
          "description": "Current order status. Assigned by OMS or executor.",
          "enum": [
            "New",
            "PartiallyFilled",
            "Filled",
            "DoneForDay",
            "Canceled",
            "Replaced",
            "PendingCancel",
            "Stopped",
            "Rejected",
            "Suspended",
            "PendingNew",
            "Calculated",
            "Expired",
            "AcceptedForBidding",
            "PendingReplace",
            "Error",
            "Held"
          ],
          "type": "string"
        },
        "ExecutionStatus": {
          "description": "Last modification status. Assigned by OMS or executor.",
          "enum": [
            "New",
            "PartiallyFilled",
            "Filled",
            "DoneForDay",
            "Canceled",
            "Replaced",
            "PendingCancel",
            "Stopped",
            "Rejected",
            "Suspended",
            "PendingNew",
            "Calculated",
            "Expired",
            "AcceptedForBidding",
            "PendingReplace",
            "Error",
            "Held"
          ],
          "type": "string"
        },
        "Type": {
          "description": "Type. Assigned by client.",
          "enum": [
            "Market",
            "Limit",
            "Stop",
            "StopLimit",
            "Pegged",
            "TrailingStop",
            "TrailingStopLimit",
            "OneCancelOther",
            "OneTriggerOther",
            "OneTriggerOneCancelOther",
            "External",
            "MutualFundsExchange",
            "StagingBlotter"
          ],
          "type": "string"
        },
        "RequestStatus": {
          "description": "Indicate order processing status within OMS. Assigned by OMS.",
          "enum": [
            "RequireValidation",
            "Validated",
            "Rejected",
            "Executing",
            "Complete",
            "Error"
          ],
          "type": "string"
        },
        "Target": {
          "description": "Execution target. Assigned by OMS.",
          "enum": [
            "Ignore",
            "New",
            "Modify",
            "Cancel",
            "Execution",
            "Status",
            "CancelReject",
            "Reject",
            "Error",
            "All"
          ],
          "type": "string"
        },
        "Description": {
          "description": "Used to indicate reject reason or broker comment. Assigned by executor.",
          "type": "string"
        },
        "ErrorDescriptionText": {
          "description": "Used to decrypt error",
          "type": "string"
        },
        "Comment": {
          "description": "Client side comments. Assigned by client.",
          "type": "string"
        },
        "TimeInForce": {
          "description": "Time in force. Assigned by client.",
          "enum": [
            "Day",
            "GoodTillCancel",
            "AtTheOpening",
            "ImmediateOrCancel",
            "FillOrKill",
            "GoodTillCrossing",
            "GoodTillDate",
            "GoodTillTime",
            "GoodTillCancelPlus",
            "GoodTillDatePlus"
          ],
          "type": "string"
        },
        "ExecInst": {
          "description": "Execution instruction. Assigned by client.",
          "enum": [
            "None",
            "CashAmountOrder",
            "FullLiquidation",
            "DoNotIncrease",
            "DoNotReduce",
            "AllOrNone"
          ],
          "type": "string"
        },
        "ExecInstNum": {
          "format": "int64",
          "description": "Number Execution instruction. Assigned by client.",
          "type": "integer"
        },
        "ExpireDate": {
          "format": "date-time",
          "description": "Expire date. Assigned by client.",
          "type": "string"
        },
        "CounterPartyOrderId": {
          "description": "Executor order id. Assigned by executor.",
          "type": "string"
        },
        "AccountId": {
          "format": "int32",
          "description": "Account id. Assigned by OMS.",
          "type": "integer"
        },
        "UserId": {
          "format": "int32",
          "description": "User id. Assigned by OMS.",
          "type": "integer"
        },
        "RequestId": {
          "format": "int32",
          "description": "Request id. Assigned by OMS.",
          "type": "integer"
        },
        "StateId": {
          "format": "int32",
          "description": "State id. Assigned by OMS.",
          "type": "integer"
        },
        "ParentId": {
          "format": "int32",
          "description": "Parent order id. Assigned by OMS.",
          "type": "integer"
        },
        "Legs": {
          "description": "Multileg order legs. Assigned by client.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderResource"
          }
        },
        "Exchange": {
          "description": "Desired exchange. Assigned by client.",
          "type": "string"
        },
        "ExecutionVenue": {
          "description": "Executor name, to which the order was routed. Assigned by OMS router.",
          "type": "string"
        },
        "TrailingStopAmountType": {
          "description": "Assigned by client.",
          "enum": [
            "Absolute",
            "Persentage"
          ],
          "type": "string"
        },
        "TrailingStopAmount": {
          "format": "double",
          "description": "Assigned by client.",
          "type": "number"
        },
        "TrailingLimitAmountType": {
          "description": "Assigned by client.",
          "enum": [
            "Absolute",
            "Persentage"
          ],
          "type": "string"
        },
        "TrailingLimitAmount": {
          "format": "double",
          "description": "Assigned by client.",
          "type": "number"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "Creation date. Assigned by OMS.",
          "type": "string"
        },
        "InitialType": {
          "description": "Initial type. Assigned by OMS.",
          "enum": [
            "Market",
            "Limit",
            "Stop",
            "StopLimit",
            "Pegged",
            "TrailingStop",
            "TrailingStopLimit",
            "OneCancelOther",
            "OneTriggerOther",
            "OneTriggerOneCancelOther",
            "External",
            "MutualFundsExchange",
            "StagingBlotter"
          ],
          "type": "string"
        },
        "ExtendedHours": {
          "description": "indicates the extended trading session for GTX order execution (pre-market session, post-market session)\r\nif empty - than there is no specific requirement for extended session",
          "type": "string"
        },
        "IsExternal": {
          "description": "This property indicates that order was accepted from external system and fields like ClientOrderId should be persisted.\r\nIt's a hack for orders from MessageAcceptor.\r\nAssigned be client.",
          "type": "boolean"
        },
        "ExecBrocker": {
          "description": "Order route name. Assigned by executor.",
          "type": "string"
        },
        "ExecutionInstructions": {
          "description": "Algo order execution instructions.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "TransType": {
          "description": "Execution transaction type.",
          "enum": [
            "New",
            "Cancel",
            "Correct",
            "Status"
          ],
          "type": "string"
        },
        "ExecId": {
          "description": "Execution id.",
          "type": "string"
        },
        "Token": {
          "description": "Additional identity key (usid in market scanner).",
          "type": "string"
        },
        "ValidationsToBypass": {
          "format": "int32",
          "description": "Flag property indicating validation rules to bypass",
          "type": "integer"
        },
        "ParentRequestId": {
          "format": "int32",
          "type": "integer"
        },
        "SettlementDate": {
          "format": "date-time",
          "description": "Date of settlement deal",
          "type": "string"
        },
        "LastMarket": {
          "description": "Exchange where order was filled. Assigned by executor.",
          "type": "string"
        },
        "QuantityQualifier": {
          "enum": [
            "Shares",
            "EvenDollar",
            "GrossDollar",
            "MinusRounding",
            "PlusRounding"
          ],
          "type": "string"
        },
        "ReinvestAction": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "UnderlyingSymbol": {
          "type": "string"
        },
        "UnderlyingId": {
          "format": "int32",
          "type": "integer"
        },
        "UnderlyingStrike": {
          "format": "double",
          "type": "number"
        },
        "UnderlyingOptionType": {
          "type": "string"
        },
        "UnderlyingExpirationDate": {
          "format": "int64",
          "type": "integer"
        },
        "UnderlyingExpirationType": {
          "enum": [
            "Regular",
            "Quarterly",
            "Weekly",
            "Flex",
            "Undefined",
            "Mini",
            "NonStandard"
          ],
          "type": "string"
        },
        "ContingentDirection": {
          "type": "string"
        },
        "ContingentPriceType": {
          "type": "string"
        },
        "ContingentThreshold": {
          "type": "string"
        },
        "ContingentSecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "ContingentSymbol": {
          "type": "string"
        },
        "BrokerServiceCommission": {
          "format": "double",
          "type": "number"
        },
        "LocateRefId": {
          "type": "string"
        },
        "ClearingAccount": {
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "AccountHolderName": {
          "type": "string"
        }
      }
    },
    "ModifyOrderResource": {
      "description": "Modify order parameters",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Internal order id.",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "ClientId": {
          "description": "Client order id.",
          "type": "string"
        },
        "Type": {
          "description": "Type. Assigned by client.",
          "enum": [
            "Market",
            "Limit",
            "Stop",
            "StopLimit",
            "Pegged",
            "TrailingStop",
            "TrailingStopLimit",
            "OneCancelOther",
            "OneTriggerOther",
            "OneTriggerOneCancelOther",
            "External",
            "MutualFundsExchange",
            "StagingBlotter"
          ],
          "type": "string"
        },
        "ExpireDate": {
          "format": "date-time",
          "description": "Expire date. Assigned by client.",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "Quantity. Assigned by client.",
          "minimum": 0,
          "type": "number"
        },
        "Price": {
          "format": "double",
          "description": "Price (not used for some order types).",
          "type": "number"
        },
        "StopPrice": {
          "format": "double",
          "description": "Stop price (used for stop orders).",
          "type": "number"
        },
        "TrailingStopAmountType": {
          "enum": [
            "Absolute",
            "Persentage"
          ],
          "type": "string"
        },
        "TrailingStopAmount": {
          "format": "double",
          "type": "number"
        },
        "TrailingLimitAmountType": {
          "enum": [
            "Absolute",
            "Persentage"
          ],
          "type": "string"
        },
        "TrailingLimitAmount": {
          "format": "double",
          "type": "number"
        },
        "ExecutionInstructions": {
          "description": "Algo order execution instructions.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ValidationsToBypass": {
          "format": "int32",
          "description": "Flag property indicating validation rules to bypass",
          "type": "integer"
        },
        "Comment": {
          "description": "Client side comments. Assigned by client.",
          "type": "string"
        },
        "TimeInForce": {
          "description": "Time in force. Assigned by client.",
          "enum": [
            "Day",
            "GoodTillCancel",
            "AtTheOpening",
            "ImmediateOrCancel",
            "FillOrKill",
            "GoodTillCrossing",
            "GoodTillDate",
            "GoodTillTime",
            "GoodTillCancelPlus",
            "GoodTillDatePlus"
          ],
          "type": "string"
        },
        "ExtendedHours": {
          "description": "indicates the extended trading session for GTX order execution (pre-market session, post-market session)\r\nif empty - than there is no specific requirement for extended session",
          "type": "string"
        },
        "Legs": {
          "description": "Order legs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModifyOrderResource"
          }
        }
      }
    },
    "OrderDetailsModel": {
      "type": "object",
      "properties": {
        "IsRequest": {
          "type": "boolean"
        },
        "ExecutionTarget": {
          "type": "string"
        },
        "UserId": {
          "format": "int32",
          "type": "integer"
        },
        "Login": {
          "type": "string"
        },
        "CounterPartyOrderId": {
          "type": "string"
        },
        "ClientId": {
          "type": "string"
        },
        "RequestStatus": {
          "type": "string"
        },
        "ExecutionStatus": {
          "type": "string"
        },
        "LastQuantity": {
          "format": "double",
          "type": "number"
        },
        "OrderStatusDescription": {
          "type": "string"
        },
        "ExecId": {
          "type": "string"
        },
        "TransType": {
          "type": "string"
        },
        "ParentRequestId": {
          "format": "int32",
          "type": "integer"
        },
        "IsCompleted": {
          "type": "boolean"
        },
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "ExecInst": {
          "format": "int64",
          "type": "integer"
        },
        "SecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "LastPrice": {
          "format": "double",
          "type": "number"
        },
        "Symbol": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "CreateDate": {
          "format": "int64",
          "type": "integer"
        },
        "Date": {
          "format": "int64",
          "type": "integer"
        },
        "TransactionDate": {
          "format": "int64",
          "type": "integer"
        },
        "ExpireDate": {
          "format": "int64",
          "type": "integer"
        },
        "ExtendedHours": {
          "type": "string"
        },
        "Exchange": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "TimeInForce": {
          "type": "string"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "StopPrice": {
          "format": "double",
          "type": "number"
        },
        "Type": {
          "type": "string"
        },
        "InitialType": {
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "TransactionDateText": {
          "type": "string"
        },
        "Side": {
          "type": "string"
        },
        "Legs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "ParentId": {
          "format": "int32",
          "type": "integer"
        },
        "SecurityType": {
          "enum": [
            "BankersAcceptance",
            "CertificateOfDeposit",
            "CollateralizeMortgageObligation",
            "CorporateBond",
            "CommercialPaper",
            "CorporatePrivatePlacement",
            "CommonStock",
            "FederalHousingAuthority",
            "FederalHomeLoan",
            "FederalNationalMortgageAssociation",
            "ForeignExchangeContract",
            "Future",
            "FutureSpread",
            "FutureOption",
            "GovernmentNationalMortgageAssociation",
            "TreasuriesPlusAgencyDebenture",
            "MutualFund",
            "MortgageInterestOnly",
            "MortgagePrincipleOnly",
            "MortgagePrivatePlacement",
            "MiscellaneousPassThru",
            "MunicipalBond",
            "NoIsitcSecurityType",
            "Option",
            "PreferredStock",
            "RepurchaseAgreement",
            "ReverseRepurchaseAgreement",
            "StudentLoanMarketingAssociation",
            "TimeDeposit",
            "UsTreasuryBill",
            "Warrant",
            "CatsTigersLions",
            "WildcardEntry",
            "ConvertibleBond",
            "MortgageIoette",
            "Index",
            "FakeStockForNonStandartOption",
            "Right",
            "Cryptocurrency",
            "ETF",
            "DepositoryReceipt",
            "CoveredWarrant",
            "Unit"
          ],
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "UnderlyingSymbol": {
          "type": "string"
        },
        "UnderlyingId": {
          "format": "int32",
          "type": "integer"
        },
        "UnderlyingStrike": {
          "format": "double",
          "type": "number"
        },
        "UnderlyingOptionType": {
          "type": "string"
        },
        "UnderlyingExpirationDate": {
          "format": "int64",
          "type": "integer"
        },
        "UnderlyingExpirationType": {
          "enum": [
            "Regular",
            "Quarterly",
            "Weekly",
            "Flex",
            "Undefined",
            "Mini",
            "NonStandard"
          ],
          "type": "string"
        },
        "AveragePrice": {
          "format": "double",
          "type": "number"
        },
        "ExecutedQuantity": {
          "format": "double",
          "type": "number"
        },
        "LeavesQuantity": {
          "format": "double",
          "type": "number"
        },
        "TrailingStopAmountType": {
          "type": "string"
        },
        "TrailingStopAmount": {
          "format": "double",
          "type": "number"
        },
        "TrailingLimitAmountType": {
          "type": "string"
        },
        "TrailingLimitAmount": {
          "format": "double",
          "type": "number"
        },
        "RejectReason": {
          "type": "string"
        },
        "ExecutionVenue": {
          "type": "string"
        },
        "VolumePrecision": {
          "format": "int32",
          "type": "integer"
        },
        "Comment": {
          "type": "string"
        },
        "SignalStrategyName": {
          "type": "string"
        },
        "ExecutionRuleName": {
          "type": "string"
        },
        "ContingentDirection": {
          "type": "string"
        },
        "ContingentPriceType": {
          "type": "string"
        },
        "ContingentThreshold": {
          "type": "string"
        },
        "ContingentSecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "ContingentSymbol": {
          "type": "string"
        },
        "StateId": {
          "format": "int32",
          "type": "integer"
        },
        "RequestId": {
          "format": "int32",
          "type": "integer"
        },
        "BrokerServiceCommission": {
          "format": "double",
          "type": "number"
        },
        "LocateRefId": {
          "type": "string"
        },
        "QuantityQualifier": {
          "type": "string"
        },
        "ReinvestAction": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OrderItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "ExecInst": {
          "format": "int64",
          "type": "integer"
        },
        "SecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "LastPrice": {
          "format": "double",
          "type": "number"
        },
        "Symbol": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "CreateDate": {
          "format": "int64",
          "type": "integer"
        },
        "Date": {
          "format": "int64",
          "type": "integer"
        },
        "TransactionDate": {
          "format": "int64",
          "type": "integer"
        },
        "ExpireDate": {
          "format": "int64",
          "type": "integer"
        },
        "ExtendedHours": {
          "type": "string"
        },
        "Exchange": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "TimeInForce": {
          "type": "string"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "StopPrice": {
          "format": "double",
          "type": "number"
        },
        "Type": {
          "type": "string"
        },
        "InitialType": {
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "TransactionDateText": {
          "type": "string"
        },
        "Side": {
          "type": "string"
        },
        "Legs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "ParentId": {
          "format": "int32",
          "type": "integer"
        },
        "SecurityType": {
          "enum": [
            "BankersAcceptance",
            "CertificateOfDeposit",
            "CollateralizeMortgageObligation",
            "CorporateBond",
            "CommercialPaper",
            "CorporatePrivatePlacement",
            "CommonStock",
            "FederalHousingAuthority",
            "FederalHomeLoan",
            "FederalNationalMortgageAssociation",
            "ForeignExchangeContract",
            "Future",
            "FutureSpread",
            "FutureOption",
            "GovernmentNationalMortgageAssociation",
            "TreasuriesPlusAgencyDebenture",
            "MutualFund",
            "MortgageInterestOnly",
            "MortgagePrincipleOnly",
            "MortgagePrivatePlacement",
            "MiscellaneousPassThru",
            "MunicipalBond",
            "NoIsitcSecurityType",
            "Option",
            "PreferredStock",
            "RepurchaseAgreement",
            "ReverseRepurchaseAgreement",
            "StudentLoanMarketingAssociation",
            "TimeDeposit",
            "UsTreasuryBill",
            "Warrant",
            "CatsTigersLions",
            "WildcardEntry",
            "ConvertibleBond",
            "MortgageIoette",
            "Index",
            "FakeStockForNonStandartOption",
            "Right",
            "Cryptocurrency",
            "ETF",
            "DepositoryReceipt",
            "CoveredWarrant",
            "Unit"
          ],
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "UnderlyingSymbol": {
          "type": "string"
        },
        "UnderlyingId": {
          "format": "int32",
          "type": "integer"
        },
        "UnderlyingStrike": {
          "format": "double",
          "type": "number"
        },
        "UnderlyingOptionType": {
          "type": "string"
        },
        "UnderlyingExpirationDate": {
          "format": "int64",
          "type": "integer"
        },
        "UnderlyingExpirationType": {
          "enum": [
            "Regular",
            "Quarterly",
            "Weekly",
            "Flex",
            "Undefined",
            "Mini",
            "NonStandard"
          ],
          "type": "string"
        },
        "AveragePrice": {
          "format": "double",
          "type": "number"
        },
        "ExecutedQuantity": {
          "format": "double",
          "type": "number"
        },
        "LeavesQuantity": {
          "format": "double",
          "type": "number"
        },
        "TrailingStopAmountType": {
          "type": "string"
        },
        "TrailingStopAmount": {
          "format": "double",
          "type": "number"
        },
        "TrailingLimitAmountType": {
          "type": "string"
        },
        "TrailingLimitAmount": {
          "format": "double",
          "type": "number"
        },
        "RejectReason": {
          "type": "string"
        },
        "ExecutionVenue": {
          "type": "string"
        },
        "VolumePrecision": {
          "format": "int32",
          "type": "integer"
        },
        "Comment": {
          "type": "string"
        },
        "SignalStrategyName": {
          "type": "string"
        },
        "ExecutionRuleName": {
          "type": "string"
        },
        "ContingentDirection": {
          "type": "string"
        },
        "ContingentPriceType": {
          "type": "string"
        },
        "ContingentThreshold": {
          "type": "string"
        },
        "ContingentSecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "ContingentSymbol": {
          "type": "string"
        },
        "StateId": {
          "format": "int32",
          "type": "integer"
        },
        "RequestId": {
          "format": "int32",
          "type": "integer"
        },
        "BrokerServiceCommission": {
          "format": "double",
          "type": "number"
        },
        "LocateRefId": {
          "type": "string"
        },
        "QuantityQualifier": {
          "type": "string"
        },
        "ReinvestAction": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OrderVerifiedResource": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "int32",
          "type": "integer"
        },
        "IsSuccessful": {
          "description": "Result.",
          "type": "boolean"
        },
        "ErrorDescription": {
          "description": "Error description.",
          "type": "string"
        },
        "ErrorDescriptionText": {
          "description": "Error description text.",
          "type": "string"
        },
        "ErrorDescriptionArgs": {
          "description": "Error description arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Commission": {
          "format": "double",
          "description": "The commission of the order.",
          "type": "number"
        },
        "Commissions": {
          "description": "The commission of the order.",
          "type": "object",
          "additionalProperties": {
            "format": "double",
            "type": "number"
          }
        },
        "Cost": {
          "format": "double",
          "description": "The cost of the order.",
          "type": "number"
        },
        "NetCost": {
          "format": "double",
          "description": "The net cost of the order.",
          "type": "number"
        },
        "TotalCost": {
          "format": "double",
          "description": "The total cost of the order.",
          "type": "number"
        },
        "Quotes": {
          "description": "Order validation quotes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuoteModel"
          }
        },
        "MarginChange": {
          "format": "double",
          "description": "Expected margin value changed.",
          "type": "number"
        }
      }
    },
    "QuoteModel": {
      "type": "object",
      "properties": {
        "Ask": {
          "format": "double",
          "type": "number"
        },
        "Bid": {
          "format": "double",
          "type": "number"
        },
        "Last": {
          "format": "double",
          "type": "number"
        },
        "Volume": {
          "format": "double",
          "type": "number"
        },
        "OpenInterest": {
          "format": "double",
          "type": "number"
        },
        "Symbol": {
          "type": "string"
        },
        "SecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "Timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "QuoteTypes": {
          "format": "int32",
          "type": "integer"
        },
        "Mark": {
          "format": "double",
          "type": "number"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "Key": {
          "format": "int32",
          "type": "integer"
        },
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "High": {
          "format": "double",
          "type": "number"
        },
        "Low": {
          "format": "double",
          "type": "number"
        },
        "Open": {
          "format": "double",
          "type": "number"
        },
        "Close": {
          "format": "double",
          "type": "number"
        },
        "Change": {
          "format": "double",
          "type": "number"
        },
        "ChangePc": {
          "format": "double",
          "type": "number"
        },
        "Week52Low": {
          "format": "double",
          "type": "number"
        },
        "Week52High": {
          "format": "double",
          "type": "number"
        },
        "TotalDailyVolume": {
          "format": "double",
          "type": "number"
        },
        "AskSize": {
          "format": "double",
          "type": "number"
        },
        "BidSize": {
          "format": "double",
          "type": "number"
        },
        "PreviousClose": {
          "format": "double",
          "type": "number"
        },
        "IsHalted": {
          "type": "boolean"
        },
        "BidExchange": {
          "type": "string"
        },
        "AskExchange": {
          "type": "string"
        },
        "LastExchange": {
          "type": "string"
        },
        "Channel": {
          "type": "string"
        }
      }
    },
    "PagingResult[OrderResource]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderResource"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "CreateOrderResource": {
      "type": "object",
      "properties": {
        "Symbol": {
          "description": "Security symbol.",
          "type": "string"
        },
        "ClientId": {
          "description": "Client order id.",
          "type": "string"
        },
        "ExpireDate": {
          "format": "date-time",
          "description": "Expire date. Assigned by client.",
          "type": "string"
        },
        "Type": {
          "description": "Type. Assigned by client.",
          "enum": [
            "Market",
            "Limit",
            "Stop",
            "StopLimit",
            "Pegged",
            "TrailingStop",
            "TrailingStopLimit",
            "OneCancelOther",
            "OneTriggerOther",
            "OneTriggerOneCancelOther",
            "External",
            "MutualFundsExchange",
            "StagingBlotter"
          ],
          "type": "string"
        },
        "Side": {
          "description": "Client side comments.",
          "enum": [
            "Buy",
            "Sell",
            "SellShort",
            "BuyToCover"
          ],
          "type": "string"
        },
        "Comment": {
          "description": "Client comment.",
          "type": "string"
        },
        "ExecInst": {
          "description": "Execution instruction.",
          "enum": [
            "None",
            "CashAmountOrder",
            "FullLiquidation",
            "DoNotIncrease",
            "DoNotReduce",
            "AllOrNone"
          ],
          "type": "string"
        },
        "TimeInforce": {
          "description": "Time in force.",
          "enum": [
            "Day",
            "GoodTillCancel",
            "AtTheOpening",
            "ImmediateOrCancel",
            "FillOrKill",
            "GoodTillCrossing",
            "GoodTillDate",
            "GoodTillTime",
            "GoodTillCancelPlus",
            "GoodTillDatePlus"
          ],
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "Quantity. Assigned by client.",
          "minimum": 0,
          "type": "number"
        },
        "Price": {
          "format": "double",
          "description": "Price (not used for some order types).",
          "type": "number"
        },
        "StopPrice": {
          "format": "double",
          "description": "Stop price (used for stop orders).",
          "type": "number"
        },
        "Exchange": {
          "description": "Desired exchange.",
          "type": "string"
        },
        "TrailingStopAmountType": {
          "enum": [
            "Absolute",
            "Persentage"
          ],
          "type": "string"
        },
        "TrailingStopAmount": {
          "format": "double",
          "type": "number"
        },
        "TrailingLimitAmountType": {
          "enum": [
            "Absolute",
            "Persentage"
          ],
          "type": "string"
        },
        "TrailingLimitAmount": {
          "format": "double",
          "type": "number"
        },
        "ExtendedHours": {
          "description": "indicates the extended trading session for GTX order execution (pre-market session, post-market session)\r\nif empty - than there is no specific requirement for extended session",
          "type": "string"
        },
        "Token": {
          "description": "Additional identity key (usid in market scanner).",
          "type": "string"
        },
        "ExecutionInstructions": {
          "description": "Algo order execution instructions.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ValidationsToBypass": {
          "format": "int32",
          "description": "Flag property indicating validation rules to bypass",
          "type": "integer"
        },
        "Legs": {
          "description": "Order legs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOrderResource"
          }
        },
        "ParentId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OrderPreviewResource": {
      "type": "object",
      "properties": {
        "IsSuccessful": {
          "description": "Result.",
          "type": "boolean"
        },
        "ErrorDescription": {
          "description": "Error description.",
          "type": "string"
        },
        "ErrorDescriptionText": {
          "description": "Error description text.",
          "type": "string"
        },
        "ErrorDescriptionArgs": {
          "description": "Error description arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Commission": {
          "format": "double",
          "description": "The commission of the order.",
          "type": "number"
        },
        "Commissions": {
          "description": "The commission of the order.",
          "type": "object",
          "additionalProperties": {
            "format": "double",
            "type": "number"
          }
        },
        "Cost": {
          "format": "double",
          "description": "The cost of the order.",
          "type": "number"
        },
        "NetCost": {
          "format": "double",
          "description": "The net cost of the order.",
          "type": "number"
        },
        "TotalCost": {
          "format": "double",
          "description": "The total cost of the order.",
          "type": "number"
        },
        "Quotes": {
          "description": "Order validation quotes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuoteModel"
          }
        },
        "MarginChange": {
          "format": "double",
          "description": "Expected margin value changed.",
          "type": "number"
        }
      }
    },
    "RebalanceFrame": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "UnitType": {
          "enum": [
            "Node",
            "SecurityLeaf",
            "Cash"
          ],
          "type": "string",
          "readOnly": true
        },
        "IsReferenced": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TargetPercent": {
          "format": "double",
          "type": "number"
        },
        "Tolerance": {
          "format": "double",
          "type": "number"
        },
        "AccountBlock": {
          "$ref": "#/definitions/AccountBlock"
        },
        "Descendants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RebalanceFrame"
          }
        }
      }
    },
    "AccountBlock": {
      "type": "object",
      "properties": {
        "TradingThrough": {
          "type": "boolean"
        },
        "ClearingAccountNumber": {
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        }
      }
    },
    "SecurityContainerFrame": {
      "type": "object",
      "properties": {
        "Descendants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RebalanceFrame"
          },
          "readOnly": true
        },
        "UnitType": {
          "enum": [
            "Node",
            "SecurityLeaf",
            "Cash"
          ],
          "type": "string",
          "readOnly": true
        },
        "SecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "Security": {
          "$ref": "#/definitions/ISecurity"
        },
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "IsReferenced": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TargetPercent": {
          "format": "double",
          "type": "number"
        },
        "Tolerance": {
          "format": "double",
          "type": "number"
        },
        "AccountBlock": {
          "$ref": "#/definitions/AccountBlock"
        }
      }
    },
    "ISecurity": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Symbol": {
          "type": "string",
          "readOnly": true
        },
        "Suffix": {
          "type": "string",
          "readOnly": true
        },
        "Description": {
          "type": "string",
          "readOnly": true
        },
        "Exchange": {
          "type": "string",
          "readOnly": true
        },
        "Currency": {
          "type": "string",
          "readOnly": true
        },
        "BaseCurrency": {
          "type": "string",
          "readOnly": true
        },
        "AddedDate": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "ModifyDate": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "Enabled": {
          "type": "boolean",
          "readOnly": true
        },
        "AllowTrade": {
          "type": "boolean",
          "readOnly": true
        },
        "AllowMargin": {
          "type": "boolean",
          "readOnly": true
        },
        "AllowShort": {
          "type": "boolean",
          "readOnly": true
        },
        "Type": {
          "enum": [
            "BankersAcceptance",
            "CertificateOfDeposit",
            "CollateralizeMortgageObligation",
            "CorporateBond",
            "CommercialPaper",
            "CorporatePrivatePlacement",
            "CommonStock",
            "FederalHousingAuthority",
            "FederalHomeLoan",
            "FederalNationalMortgageAssociation",
            "ForeignExchangeContract",
            "Future",
            "FutureSpread",
            "FutureOption",
            "GovernmentNationalMortgageAssociation",
            "TreasuriesPlusAgencyDebenture",
            "MutualFund",
            "MortgageInterestOnly",
            "MortgagePrincipleOnly",
            "MortgagePrivatePlacement",
            "MiscellaneousPassThru",
            "MunicipalBond",
            "NoIsitcSecurityType",
            "Option",
            "PreferredStock",
            "RepurchaseAgreement",
            "ReverseRepurchaseAgreement",
            "StudentLoanMarketingAssociation",
            "TimeDeposit",
            "UsTreasuryBill",
            "Warrant",
            "CatsTigersLions",
            "WildcardEntry",
            "ConvertibleBond",
            "MortgageIoette",
            "Index",
            "FakeStockForNonStandartOption",
            "Right",
            "Cryptocurrency",
            "ETF",
            "DepositoryReceipt",
            "CoveredWarrant",
            "Unit"
          ],
          "type": "string",
          "readOnly": true
        },
        "Source": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "SourceId": {
          "type": "string",
          "readOnly": true
        },
        "ParentId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "UnderlyingSecuritySymbol": {
          "type": "string",
          "readOnly": true
        },
        "Unit": {
          "type": "string",
          "readOnly": true
        },
        "MarginRate": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "OptionType": {
          "enum": [
            "Call",
            "Put",
            "Undefined"
          ],
          "type": "string",
          "readOnly": true
        },
        "ExpirationType": {
          "enum": [
            "Regular",
            "Quarterly",
            "Weekly",
            "Flex",
            "Undefined",
            "Mini",
            "NonStandard"
          ],
          "type": "string",
          "readOnly": true
        },
        "ExpirationDate": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "StrikePrice": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        },
        "ExpirationName": {
          "type": "string",
          "readOnly": true
        },
        "ContractSize": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "Sector": {
          "type": "string",
          "readOnly": true
        },
        "Industry": {
          "type": "string",
          "readOnly": true
        },
        "Precision": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "VolumePrecision": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Price": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "Isin": {
          "type": "string",
          "readOnly": true
        },
        "Sedol": {
          "type": "string",
          "readOnly": true
        },
        "Cusip": {
          "type": "string",
          "readOnly": true
        },
        "Leverage": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "TickSize": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "CqsSuffix": {
          "type": "string",
          "readOnly": true
        },
        "CmsSuffix": {
          "type": "string",
          "readOnly": true
        },
        "NasdaqSuffix": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CashContainerFrame": {
      "type": "object",
      "properties": {
        "Descendants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RebalanceFrame"
          },
          "readOnly": true
        },
        "UnitType": {
          "enum": [
            "Node",
            "SecurityLeaf",
            "Cash"
          ],
          "type": "string",
          "readOnly": true
        },
        "ReservedQuantity": {
          "format": "double",
          "type": "number"
        },
        "Reserved": {
          "type": "boolean"
        },
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "IsReferenced": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TargetPercent": {
          "format": "double",
          "type": "number"
        },
        "Tolerance": {
          "format": "double",
          "type": "number"
        },
        "AccountBlock": {
          "$ref": "#/definitions/AccountBlock"
        }
      }
    },
    "PagingResult[RebalanceFrame]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RebalanceFrame"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "InputFrameParams": {
      "type": "object",
      "properties": {
        "ReservedType": {
          "enum": [
            "Absolut",
            "Coefficient"
          ],
          "type": "string"
        },
        "Type": {
          "enum": [
            "Security",
            "Cash"
          ],
          "type": "string"
        },
        "SecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "Reserved": {
          "type": "boolean"
        },
        "ReservedQuantity": {
          "format": "double",
          "type": "number"
        },
        "ReserveType": {
          "enum": [
            "Percent",
            "Cash"
          ],
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TargetPercent": {
          "format": "double",
          "type": "number"
        },
        "Tolerance": {
          "format": "double",
          "type": "number"
        },
        "accountBlock": {
          "$ref": "#/definitions/AccountBlock"
        }
      }
    },
    "FrameParams": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TargetPercent": {
          "format": "double",
          "type": "number"
        },
        "Tolerance": {
          "format": "double",
          "type": "number"
        },
        "accountBlock": {
          "$ref": "#/definitions/AccountBlock"
        }
      }
    },
    "PlaidDataResource": {
      "type": "object",
      "properties": {
        "Environment": {
          "type": "string"
        },
        "Token": {
          "type": "string"
        },
        "PlaidAllowed": {
          "type": "boolean"
        }
      }
    },
    "RebalanceModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Value": {
          "format": "double",
          "type": "number"
        },
        "Gain": {
          "format": "double",
          "type": "number"
        },
        "GainPercent": {
          "format": "double",
          "type": "number"
        },
        "Descendants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RebalanceModel"
          }
        },
        "Tolerance": {
          "format": "double",
          "type": "number"
        },
        "AbsoluteTolerance": {
          "format": "double",
          "type": "number"
        },
        "ActualPercent": {
          "format": "double",
          "type": "number"
        },
        "AbsoluteActualPercent": {
          "format": "double",
          "type": "number"
        },
        "TargetPercent": {
          "format": "double",
          "type": "number"
        },
        "AbsoluteTargetPercent": {
          "format": "double",
          "type": "number"
        },
        "BindedDate": {
          "format": "date-time",
          "type": "string"
        },
        "AppliedDate": {
          "format": "date-time",
          "type": "string"
        },
        "UnitType": {
          "enum": [
            "Node",
            "SecurityLeaf",
            "Cash"
          ],
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EarningInfo": {
      "type": "object",
      "properties": {
        "Percent": {
          "format": "double",
          "type": "number"
        },
        "Value": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "SecurityFrameParams": {
      "type": "object",
      "properties": {
        "SecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TargetPercent": {
          "format": "double",
          "type": "number"
        },
        "Tolerance": {
          "format": "double",
          "type": "number"
        },
        "accountBlock": {
          "$ref": "#/definitions/AccountBlock"
        }
      }
    },
    "GroupPositionsResource": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "MarketValue": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "PositionResource": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "AccountId": {
          "format": "int32",
          "type": "integer"
        },
        "SecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "Symbol": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "SecurityCurrency": {
          "type": "string"
        },
        "SecurityType": {
          "type": "string"
        },
        "ContractSize": {
          "format": "double",
          "type": "number"
        },
        "CostBasis": {
          "format": "double",
          "type": "number"
        },
        "DailyCostBasis": {
          "format": "double",
          "type": "number"
        },
        "CreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "ModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "RealizedProfitLoss": {
          "format": "double",
          "type": "number"
        },
        "AverageOpenPrice": {
          "format": "double",
          "type": "number"
        },
        "AverageClosePrice": {
          "format": "double",
          "type": "number"
        },
        "StopLossPrice": {
          "format": "double",
          "type": "number"
        },
        "TakeProfitPrice": {
          "format": "double",
          "type": "number"
        },
        "DailyCloseProfitLoss": {
          "format": "double",
          "type": "number"
        },
        "ExcessChanges": {
          "format": "double",
          "type": "number"
        },
        "DayQuantity": {
          "format": "double",
          "type": "number"
        },
        "MarketValueEOD": {
          "format": "double",
          "type": "number"
        },
        "EODPrice": {
          "format": "double",
          "type": "number"
        },
        "OpenQuantity": {
          "format": "double",
          "type": "number"
        },
        "MarginType": {
          "enum": [
            "Empty",
            "Cash",
            "Margin",
            "Short"
          ],
          "type": "string"
        },
        "UnderlyingSymbol": {
          "type": "string"
        },
        "UnderlyingOptionType": {
          "type": "string"
        },
        "UnderlyingExpirationDate": {
          "format": "int64",
          "type": "integer"
        },
        "UnderlyingExpirationType": {
          "enum": [
            "Regular",
            "Quarterly",
            "Weekly",
            "Flex",
            "Undefined",
            "Mini",
            "NonStandard"
          ],
          "type": "string"
        },
        "UnderlyingId": {
          "format": "int32",
          "type": "integer"
        },
        "UnderlyingStrike": {
          "format": "double",
          "type": "number"
        },
        "TickSize": {
          "format": "double",
          "type": "number"
        },
        "VolumePrecision": {
          "format": "int32",
          "type": "integer"
        },
        "ClearingAccount": {
          "type": "string"
        },
        "AccountHolderName": {
          "type": "string"
        },
        "LoanedQuantity": {
          "format": "double",
          "type": "number"
        },
        "UnrealizedProfitLoss": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "PagingResult[PositionResource]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PositionResource"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "PriceAlertInfoModel": {
      "description": "Price alert info",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Internal price alert identifier",
          "type": "integer"
        },
        "State": {
          "description": "Target alert state",
          "enum": [
            "New",
            "Expired",
            "Completed",
            "Stopped"
          ],
          "type": "string"
        },
        "CreatedDate": {
          "format": "int64",
          "description": "Created Date",
          "type": "integer"
        },
        "Operator": {
          "description": "Alert trigger operator",
          "type": "string"
        },
        "SecurityId": {
          "format": "int32",
          "description": "Alert trigger security id",
          "type": "integer"
        },
        "Symbol": {
          "description": "Symbol",
          "type": "string"
        },
        "Field": {
          "description": "Alert type",
          "type": "string"
        },
        "Argument": {
          "format": "double",
          "description": "Trigger value",
          "type": "number"
        },
        "ExpirationDate": {
          "format": "int64",
          "description": "Expiration date",
          "type": "integer"
        }
      }
    },
    "PriceAlertEditableModel": {
      "description": "Editable price alert",
      "required": [
        "Operator",
        "Field",
        "ExpirationDate"
      ],
      "type": "object",
      "properties": {
        "Operator": {
          "description": "Alert trigger operator",
          "type": "string"
        },
        "State": {
          "description": "Target alert state",
          "enum": [
            "New",
            "Expired",
            "Completed",
            "Stopped"
          ],
          "type": "string"
        },
        "SecurityId": {
          "format": "int32",
          "description": "Alert trigger security id",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "Field": {
          "description": "Alert type",
          "type": "string"
        },
        "Argument": {
          "format": "double",
          "description": "Trigger value",
          "minimum": 0,
          "type": "number"
        },
        "ExpirationDate": {
          "format": "int64",
          "description": "Expiration date",
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "PagingResult[PriceAlertInfoModel]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceAlertInfoModel"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "BatchRebalanceParameters": {
      "type": "object",
      "properties": {
        "AccountIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "RebalanceOrderResource": {
      "type": "object",
      "properties": {
        "Symbol": {
          "type": "string"
        },
        "SecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "Side": {
          "enum": [
            "Buy",
            "Sell",
            "SellShort",
            "BuyToCover"
          ],
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "VerifyingInfo": {
          "$ref": "#/definitions/VerifyingInfo"
        },
        "OrderStatus": {
          "enum": [
            "New",
            "PartiallyFilled",
            "Filled",
            "DoneForDay",
            "Canceled",
            "Replaced",
            "PendingCancel",
            "Stopped",
            "Rejected",
            "Suspended",
            "PendingNew",
            "Calculated",
            "Expired",
            "AcceptedForBidding",
            "PendingReplace",
            "Error",
            "Held"
          ],
          "type": "string"
        }
      }
    },
    "VerifyingInfo": {
      "type": "object",
      "properties": {
        "Fees": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Fee"
            }
          }
        },
        "Quotes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/IBasicQuote"
          }
        },
        "Status": {
          "enum": [
            "Ok",
            "Warn",
            "Error"
          ],
          "type": "string"
        },
        "ErrorDescription": {
          "type": "string"
        }
      }
    },
    "Fee": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "CommissionId": {
          "type": "string"
        },
        "Value": {
          "format": "double",
          "type": "number"
        },
        "Seizure": {
          "enum": [
            "Placement",
            "Execution",
            "Fill",
            "Proportional",
            "Order"
          ],
          "type": "string"
        },
        "Leverage": {
          "format": "double",
          "type": "number"
        },
        "ValueType": {
          "enum": [
            "Absolute",
            "Coefficient"
          ],
          "type": "string"
        },
        "Group": {
          "type": "string"
        },
        "IsMandatory": {
          "type": "boolean"
        }
      }
    },
    "IBasicQuote": {
      "type": "object",
      "properties": {
        "Ask": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "Bid": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "Last": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "Volume": {
          "format": "double",
          "type": "number"
        },
        "OpenInterest": {
          "format": "double",
          "type": "number"
        },
        "Mark": {
          "format": "double",
          "type": "number"
        },
        "PreviousClose": {
          "format": "double",
          "type": "number"
        },
        "Close": {
          "format": "double",
          "type": "number"
        },
        "Key": {
          "format": "int32",
          "type": "integer"
        },
        "Date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "RegistrationUnitSchema": {
      "type": "object",
      "properties": {
        "UnitName": {
          "type": "string"
        },
        "Fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegistrationSchemaUnitField"
          }
        }
      }
    },
    "RegistrationSchemaUnitField": {
      "type": "object",
      "properties": {
        "FieldName": {
          "type": "string"
        },
        "Required": {
          "type": "boolean"
        },
        "Options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "OptionsWithId": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RegistrationRequest": {
      "type": "object",
      "properties": {
        "Credentials": {
          "$ref": "#/definitions/Credentials"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        },
        "City": {
          "$ref": "#/definitions/City"
        },
        "Location": {
          "$ref": "#/definitions/Location"
        },
        "Name": {
          "$ref": "#/definitions/Name"
        },
        "PostalCode": {
          "$ref": "#/definitions/PostalCode"
        },
        "PrimaryPhone": {
          "$ref": "#/definitions/PrimaryPhone"
        },
        "SecondaryPhone": {
          "$ref": "#/definitions/SecondaryPhone"
        },
        "SecretQuestion": {
          "$ref": "#/definitions/SecretQuestion"
        }
      }
    },
    "Credentials": {
      "type": "object",
      "properties": {
        "Login": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "AddressFirst": {
          "type": "string"
        },
        "AddressSecond": {
          "type": "string"
        }
      }
    },
    "City": {
      "type": "object",
      "properties": {
        "CityName": {
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "Country": {
          "type": "string"
        },
        "State": {
          "enum": [
            "Unknown",
            "AL",
            "AK",
            "AZ",
            "AR",
            "CA",
            "CO",
            "CT",
            "DE",
            "FL",
            "GA",
            "HI",
            "ID",
            "IL",
            "IN",
            "IA",
            "KS",
            "KY",
            "LA",
            "ME",
            "MD",
            "MA",
            "MI",
            "MN",
            "MS",
            "MO",
            "MT",
            "NE",
            "NV",
            "NH",
            "NJ",
            "NM",
            "NY",
            "NC",
            "ND",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VT",
            "VA",
            "WA",
            "WV",
            "WI",
            "WY",
            "DC",
            "PR"
          ],
          "type": "string"
        }
      }
    },
    "Name": {
      "type": "object",
      "properties": {
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "Suffix": {
          "enum": [
            "NoSuffix",
            "Jr",
            "Sr",
            "Second",
            "Third",
            "Fourth"
          ],
          "type": "string"
        }
      }
    },
    "PostalCode": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        }
      }
    },
    "PrimaryPhone": {
      "type": "object",
      "properties": {
        "PhoneNumber": {
          "type": "string"
        }
      }
    },
    "SecondaryPhone": {
      "type": "object",
      "properties": {
        "PhoneNumber": {
          "type": "string"
        }
      }
    },
    "SecretQuestion": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Answer": {
          "type": "string"
        }
      }
    },
    "UserInfoModel": {
      "type": "object",
      "properties": {
        "UserId": {
          "format": "int32",
          "type": "integer"
        },
        "FirstName": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Login": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Role": {
          "format": "int32",
          "type": "integer"
        },
        "AddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "Salutation": {
          "enum": [
            "NoSalutation",
            "Mr",
            "Mrs",
            "Ms",
            "Dr",
            "Sir",
            "Madam"
          ],
          "type": "string"
        },
        "Suffix": {
          "enum": [
            "NoSuffix",
            "Jr",
            "Sr",
            "Second",
            "Third",
            "Fourth"
          ],
          "type": "string"
        }
      }
    },
    "RegistrationFailed": {
      "type": "object",
      "properties": {
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Reason": {
          "enum": [
            "UserManagerRules",
            "PolicyFail",
            "SchemaValidationFail",
            "InternalFail"
          ],
          "type": "string"
        }
      }
    },
    "TimeZoneInfoItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "ianaId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "LanguageSettings": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        }
      }
    },
    "RoboadvisorWhitelabelInfo": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Footer": {
          "type": "string"
        },
        "HelpLink": {
          "type": "string"
        },
        "Icon": {
          "$ref": "#/definitions/IFileUpload"
        },
        "Logo": {
          "$ref": "#/definitions/IFileUpload"
        }
      }
    },
    "IFileUpload": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "FileKey": {
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Type": {
          "enum": [
            "Other",
            "ImageJpeg",
            "ImageGif",
            "ImagePng",
            "ImageBitmap",
            "ImageIco",
            "TextHtml",
            "TextPlain",
            "VideoMpeg",
            "VideoQuicktime"
          ],
          "type": "string"
        },
        "Timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "Data": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "OptionResource": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Symbol": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Exchange": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "AddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "ModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "Type": {
          "enum": [
            "BankersAcceptance",
            "CertificateOfDeposit",
            "CollateralizeMortgageObligation",
            "CorporateBond",
            "CommercialPaper",
            "CorporatePrivatePlacement",
            "CommonStock",
            "FederalHousingAuthority",
            "FederalHomeLoan",
            "FederalNationalMortgageAssociation",
            "ForeignExchangeContract",
            "Future",
            "GovernmentNationalMortgageAssociation",
            "TreasuriesPlusAgencyDebenture",
            "MutualFund",
            "MortgageInterestOnly",
            "MortgagePrincipleOnly",
            "MortgagePrivatePlacement",
            "MiscellaneousPassThru",
            "MunicipalBond",
            "NoIsitcSecurityType",
            "Option",
            "PreferredStock",
            "RepurchaseAgreement",
            "ReverseRepurchaseAgreement",
            "StudentLoanMarketingAssociation",
            "TimeDeposit",
            "UsTreasuryBill",
            "Warrant",
            "CatsTigersLions",
            "WildcardEntry",
            "ConvertibleBond",
            "MortgageIoette",
            "Index",
            "FakeStockForNonStandartOption",
            "Right",
            "Cryptocurrency",
            "ETF",
            "DepositoryReceipt",
            "CoveredWarrant",
            "Unit"
          ],
          "type": "string"
        },
        "Precision": {
          "format": "int32",
          "type": "integer"
        },
        "VolumePrecision": {
          "format": "int32",
          "type": "integer"
        },
        "TickSize": {
          "format": "double",
          "type": "number"
        },
        "Enabled": {
          "type": "boolean"
        },
        "AllowTrade": {
          "type": "boolean"
        },
        "AllowMargin": {
          "type": "boolean"
        },
        "AllowShort": {
          "type": "boolean"
        },
        "OptionType": {
          "enum": [
            "Call",
            "Put",
            "Undefined"
          ],
          "type": "string"
        },
        "ExpirationType": {
          "enum": [
            "Regular",
            "Quarterly",
            "Weekly",
            "Flex",
            "Undefined",
            "Mini",
            "NonStandard"
          ],
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "StrikePrice": {
          "format": "double",
          "type": "number"
        },
        "SeriesId": {
          "format": "int32",
          "type": "integer"
        },
        "UnderlyingAssetSymbol": {
          "type": "string"
        },
        "ContractSize": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "EquityResource": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Symbol": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Exchange": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "AddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "ModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "Type": {
          "enum": [
            "BankersAcceptance",
            "CertificateOfDeposit",
            "CollateralizeMortgageObligation",
            "CorporateBond",
            "CommercialPaper",
            "CorporatePrivatePlacement",
            "CommonStock",
            "FederalHousingAuthority",
            "FederalHomeLoan",
            "FederalNationalMortgageAssociation",
            "ForeignExchangeContract",
            "Future",
            "GovernmentNationalMortgageAssociation",
            "TreasuriesPlusAgencyDebenture",
            "MutualFund",
            "MortgageInterestOnly",
            "MortgagePrincipleOnly",
            "MortgagePrivatePlacement",
            "MiscellaneousPassThru",
            "MunicipalBond",
            "NoIsitcSecurityType",
            "Option",
            "PreferredStock",
            "RepurchaseAgreement",
            "ReverseRepurchaseAgreement",
            "StudentLoanMarketingAssociation",
            "TimeDeposit",
            "UsTreasuryBill",
            "Warrant",
            "CatsTigersLions",
            "WildcardEntry",
            "ConvertibleBond",
            "MortgageIoette",
            "Index",
            "FakeStockForNonStandartOption",
            "Right",
            "Cryptocurrency",
            "ETF",
            "DepositoryReceipt",
            "CoveredWarrant",
            "Unit"
          ],
          "type": "string"
        },
        "Precision": {
          "format": "int32",
          "type": "integer"
        },
        "VolumePrecision": {
          "format": "int32",
          "type": "integer"
        },
        "TickSize": {
          "format": "double",
          "type": "number"
        },
        "Enabled": {
          "type": "boolean"
        },
        "AllowTrade": {
          "type": "boolean"
        },
        "AllowMargin": {
          "type": "boolean"
        },
        "AllowShort": {
          "type": "boolean"
        },
        "ContractSize": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "OptionChainResource": {
      "type": "object",
      "properties": {
        "Expirations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionChainExpirationResource"
          }
        }
      }
    },
    "OptionChainExpirationResource": {
      "type": "object",
      "properties": {
        "Expiration": {
          "format": "date-time",
          "type": "string"
        },
        "CentralStrike": {
          "format": "double",
          "type": "number"
        },
        "Options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionResource"
          }
        }
      }
    },
    "OptionExpirationResource": {
      "type": "object",
      "properties": {
        "SeriesId": {
          "format": "int32",
          "type": "integer"
        },
        "SeriesType": {
          "enum": [
            "Regular",
            "Quarterly",
            "Weekly",
            "Flex",
            "Undefined",
            "Mini",
            "NonStandard"
          ],
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "ExpirationType": {
          "enum": [
            "Regular",
            "Quarterly",
            "Weekly",
            "Flex",
            "Undefined",
            "Mini",
            "NonStandard"
          ],
          "type": "string"
        }
      }
    },
    "PagingResult[OptionResource]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionResource"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "PagingResult[EquityResource]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquityResource"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "StreamerDataModel": {
      "type": "object",
      "properties": {
        "QuoteAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UrlDesc"
          }
        },
        "DataAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UrlDesc"
          }
        }
      }
    },
    "UrlDesc": {
      "type": "object",
      "properties": {
        "Url": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "SessionId": {
          "type": "string"
        }
      }
    },
    "PhoneNumberModel": {
      "type": "object",
      "properties": {
        "PhoneNumber": {
          "type": "string"
        },
        "PhoneNumberState": {
          "enum": [
            "NotLinked",
            "Active",
            "Suspended",
            "NotVerified"
          ],
          "type": "string"
        }
      }
    },
    "Tuple[PhoneNumberModel,Int32]": {
      "type": "object",
      "properties": {
        "m_Item1": {
          "$ref": "#/definitions/PhoneNumberModel"
        },
        "m_Item2": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SubscriptionModel": {
      "description": "Web API notification service subscription representation",
      "type": "object",
      "properties": {
        "Channel": {
          "description": "Channel for subscription messages delivery",
          "enum": [
            "Email",
            "MobileText",
            "MobilePush",
            "WebPopupAlert",
            "Hubspot",
            "Disabled"
          ],
          "type": "string"
        },
        "SubscriptionType": {
          "description": "Subscription notification type",
          "enum": [
            "Activation",
            "ApprovedAccountRequestByClearing",
            "DisposablePassword",
            "Feedback",
            "General",
            "InvitationEmail",
            "OrderExecution",
            "OrderCanceled",
            "OrderForReview",
            "OrderOnReview",
            "OrderPlacement",
            "OrderReplacement",
            "PasswordChanged",
            "PinCodeChanged",
            "PriceAlert",
            "RegistrationComplete",
            "RejectedAccountRequest",
            "ResetPassword",
            "ResetPasswordApi",
            "ResetPinCode",
            "SubmittedAccountRequest",
            "SubmittedAccountRequestApprovedByClearing",
            "SubmittedAccountRequestRejectedByClearing",
            "TestMessage",
            "WelcomeLetter"
          ],
          "type": "string"
        },
        "State": {
          "description": "Subscription state",
          "enum": [
            "NotLinked",
            "Active",
            "Suspended",
            "NotVerified"
          ],
          "type": "string"
        },
        "AccountId": {
          "format": "int32",
          "description": "AccountId or -1",
          "type": "integer"
        }
      }
    },
    "CancellationToken": {
      "type": "object",
      "properties": {
        "IsCancellationRequested": {
          "type": "boolean",
          "readOnly": true
        },
        "CanBeCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "WaitHandle": {
          "$ref": "#/definitions/WaitHandle",
          "readOnly": true
        }
      }
    },
    "WaitHandle": {
      "type": "object",
      "properties": {
        "Handle": {
          "type": "object"
        },
        "SafeWaitHandle": {
          "$ref": "#/definitions/SafeWaitHandle"
        }
      }
    },
    "SafeWaitHandle": {
      "type": "object",
      "properties": {
        "IsInvalid": {
          "type": "boolean",
          "readOnly": true
        },
        "IsClosed": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "PagingResult[TransactionMapModel]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionMapModel"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "TransactionMapModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "SecurityId": {
          "format": "int32",
          "type": "integer"
        },
        "OrderStateId": {
          "format": "int32",
          "type": "integer"
        },
        "AccountId": {
          "format": "int32",
          "type": "integer"
        },
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "Value": {
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "LeavesQuantity": {
          "format": "double",
          "type": "number"
        },
        "Fee": {
          "$ref": "#/definitions/FeeModel"
        },
        "Type": {
          "enum": [
            "Undefined",
            "Commission",
            "OrderExecution",
            "OptionExpiration",
            "Payment",
            "ManualManipulation",
            "Clearing",
            "Rpl"
          ],
          "type": "string"
        },
        "IsDayTrade": {
          "type": "boolean"
        },
        "Description": {
          "type": "string"
        },
        "Symbol": {
          "type": "string"
        }
      }
    },
    "FeeModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "CommissionId": {
          "type": "string"
        },
        "Value": {
          "format": "double",
          "type": "number"
        },
        "Seizure": {
          "enum": [
            "Placement",
            "Execution",
            "Fill",
            "Proportional",
            "Order"
          ],
          "type": "string"
        },
        "Leverage": {
          "format": "double",
          "type": "number"
        },
        "ValueType": {
          "enum": [
            "Absolute",
            "Coefficient"
          ],
          "type": "string"
        }
      }
    },
    "FeeResource": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "CustomerDebitAmount": {
          "format": "double",
          "type": "number"
        },
        "FirmCreditAmount": {
          "format": "double",
          "type": "number"
        },
        "CorrespondentNetAmount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "AllowedIraConstraintsResource": {
      "type": "object",
      "properties": {
        "IsRetirementAccount": {
          "type": "boolean"
        },
        "ContributionConstraints": {
          "$ref": "#/definitions/ContributionConstraintsResource"
        },
        "DistributionConstraints": {
          "$ref": "#/definitions/DistributionConstraintsResource"
        }
      }
    },
    "ContributionConstraintsResource": {
      "type": "object",
      "properties": {
        "OnlyAllowCurrentYearContribution": {
          "type": "boolean"
        },
        "ValidContributions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidContributionResource"
          }
        }
      }
    },
    "DistributionConstraintsResource": {
      "type": "object",
      "properties": {
        "TotalDistributionAllowed": {
          "type": "boolean"
        },
        "ClosingFee": {
          "$ref": "#/definitions/ClosingFeeResource"
        },
        "ValidDistributionReasons": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DistributionReasonParamsResource"
          }
        }
      }
    },
    "ValidContributionResource": {
      "type": "object",
      "properties": {
        "Reason": {
          "type": "string"
        },
        "PreviousYearContributionAllowed": {
          "type": "boolean"
        }
      }
    },
    "ClosingFeeResource": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "CustomerDebitAmount": {
          "format": "double",
          "type": "number"
        },
        "FirmCreditAmount": {
          "format": "double",
          "type": "number"
        },
        "CorrespondentNetAmount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "DistributionReasonParamsResource": {
      "type": "object",
      "properties": {
        "WithholdingEnabled": {
          "type": "boolean"
        },
        "StateWithholdingEnabled": {
          "type": "boolean"
        }
      }
    },
    "PagingResult[TransferResource]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransferResource"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "TransferResource": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AccountId": {
          "format": "int32",
          "type": "integer"
        },
        "ExternalId": {
          "type": "string"
        },
        "Mechanism": {
          "type": "string"
        },
        "IsDeposit": {
          "type": "boolean"
        },
        "Status": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "TotalAmount": {
          "format": "double",
          "type": "number"
        },
        "TransferDate": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "ClearingAccountNumber": {
          "type": "string"
        }
      }
    },
    "AchTransferEditableResource": {
      "type": "object",
      "properties": {
        "AchRelationshipId": {
          "type": "string"
        },
        "DaysToHoldFunds": {
          "format": "int32",
          "type": "integer"
        },
        "IsIncoming": {
          "type": "boolean"
        },
        "IraContribution": {
          "$ref": "#/definitions/IraContributionResource"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "CloseAccount": {
          "type": "boolean"
        },
        "IraDistribution": {
          "$ref": "#/definitions/IraDistributionResource"
        }
      }
    },
    "IraContributionResource": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "ContributionYear": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "IraDistributionResource": {
      "type": "object",
      "properties": {
        "Reason": {
          "type": "string"
        },
        "FederalTaxType": {
          "type": "string"
        },
        "StateTaxType": {
          "type": "string"
        },
        "FederalTaxAmount": {
          "format": "double",
          "type": "number"
        },
        "StateTaxAmount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "WireTransferEditableResource": {
      "type": "object",
      "properties": {
        "IsDomesticWire": {
          "type": "boolean"
        },
        "RoutingNumber": {
          "type": "string"
        },
        "AccountNumber": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "ZipCode": {
          "type": "string"
        },
        "BankStreetAddress1": {
          "type": "string"
        },
        "BankStreetAddress2": {
          "type": "string"
        },
        "BankName": {
          "type": "string"
        },
        "BankCity": {
          "type": "string"
        },
        "BankCountry": {
          "type": "string"
        },
        "BankState": {
          "type": "string"
        },
        "BankZipCode": {
          "type": "string"
        },
        "ForFurtherCredit": {
          "type": "boolean"
        },
        "IntermediaryName": {
          "type": "string"
        },
        "IntermediaryAccountNumber": {
          "type": "string"
        },
        "IntermediaryAddress1": {
          "type": "string"
        },
        "IntermediaryAddress2": {
          "type": "string"
        },
        "IntermediaryCountry": {
          "type": "string"
        },
        "IntermediaryCity": {
          "type": "string"
        },
        "IntermediaryPostalCode": {
          "type": "string"
        },
        "IntermediaryState": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "CloseAccount": {
          "type": "boolean"
        },
        "IraDistribution": {
          "$ref": "#/definitions/IraDistributionResource"
        }
      }
    },
    "CheckRequestEditableResource": {
      "type": "object",
      "properties": {
        "Memos": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DeliveryMethod": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "CloseAccount": {
          "type": "boolean"
        },
        "IraDistribution": {
          "$ref": "#/definitions/IraDistributionResource"
        }
      }
    },
    "UserAccountModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "ClearingAccount": {
          "type": "string"
        },
        "AccessType": {
          "enum": [
            "Full",
            "ReadOnly",
            "ClosePositionsOnly",
            "Owner"
          ],
          "type": "string"
        },
        "MarginType": {
          "enum": [
            "Empty",
            "Cash",
            "Margin",
            "DayTrader",
            "MarginIra"
          ],
          "type": "string"
        },
        "OwnerType": {
          "enum": [
            "IndividualCustomer",
            "InstitutionalCustomer",
            "Combined",
            "EmployeeAccount",
            "MarketMaking",
            "OtherProprietary",
            "Unknown",
            "ErrorAccount",
            "Joint",
            "ForeignIndividual",
            "IRA",
            "MoneyPurchaseOrProfitSharing",
            "CommunityPropertyAccount",
            "CustodialAccount",
            "CorporateAccount",
            "GuardianAccount",
            "InvestmentClubAccount",
            "JointTenantsRightsOfSurvivorship",
            "JointTenantsInCommon",
            "PartnershipAccount",
            "RetirementAccount",
            "SoleProprietor",
            "TrustAccount",
            "InvestmentClub",
            "JointTenantsByEntirety",
            "EstateAccount",
            "ResidentAlienAccount",
            "TransferOnDeathAccount",
            "NonProfitAccount",
            "DVPAccount"
          ],
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "Alias": {
          "type": "string"
        },
        "ClearingFirm": {
          "type": "string"
        },
        "IsAverageAccount": {
          "type": "boolean"
        },
        "Owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfoModel"
          }
        }
      }
    },
    "UserToAccountRelationModel": {
      "type": "object",
      "properties": {
        "UserModel": {
          "$ref": "#/definitions/UserInfoModel"
        },
        "AccountAccessType": {
          "enum": [
            "Full",
            "ReadOnly",
            "ClosePositionsOnly",
            "Owner"
          ],
          "type": "string"
        }
      }
    },
    "AMSAccountModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "AccountProvider": {
          "enum": [
            "None",
            "PaperTrading",
            "Apex",
            "FcStone",
            "Axos",
            "Velox",
            "Siebert"
          ],
          "type": "string"
        },
        "FormType": {
          "enum": [
            "None",
            "JotForm",
            "Direct",
            "FcStone"
          ],
          "type": "string"
        },
        "User": {
          "type": "string"
        },
        "ClearingAccountNumber": {
          "type": "string"
        },
        "IsOpened": {
          "type": "boolean"
        },
        "FormDataReference": {
          "type": "string"
        },
        "FormData": {
          "type": "string"
        },
        "CustomerType": {
          "enum": [
            "Unknown",
            "Individual",
            "Joint",
            "Ira",
            "Foreign"
          ],
          "type": "string"
        }
      }
    },
    "AccountValueItem": {
      "type": "object",
      "properties": {
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "Value": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "PagingResult[AccountModel]": {
      "type": "object",
      "properties": {
        "Result": {
          "description": "Result collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountModel"
          }
        },
        "NextPageLink": {
          "description": "Next page",
          "type": "string"
        },
        "PreviousPageLink": {
          "description": "Previous page",
          "type": "string"
        },
        "TotalCount": {
          "format": "int32",
          "description": "Items total count",
          "type": "integer"
        }
      }
    },
    "AccountModel": {
      "description": "",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "ClearingAccount": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Login": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "CreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "ModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "IsChanged": {
          "type": "boolean"
        },
        "Cash": {
          "format": "double",
          "type": "number"
        },
        "Currency": {
          "type": "string"
        },
        "Status": {
          "enum": [
            "UnSpecified",
            "New",
            "SentToClearing",
            "Approved",
            "Rejected"
          ],
          "type": "string"
        },
        "CommissionPlan": {
          "type": "string"
        },
        "RepCode": {
          "type": "string"
        },
        "MarginInterestRate": {
          "format": "double",
          "type": "number"
        },
        "CashInterestRate": {
          "format": "double",
          "type": "number"
        },
        "CloseEquity": {
          "format": "double",
          "type": "number"
        },
        "OpenExcess": {
          "format": "double",
          "type": "number"
        },
        "OptionLevel": {
          "format": "int32",
          "type": "integer"
        },
        "MarginType": {
          "enum": [
            "Empty",
            "Cash",
            "Margin",
            "DayTrader",
            "MarginIra"
          ],
          "type": "string"
        },
        "Permissions": {
          "enum": [
            "Empty",
            "LongStock",
            "ShortStock",
            "LongOption",
            "ShortOption",
            "AllowTrade",
            "AllowMargin",
            "AllowOpen"
          ],
          "type": "string"
        },
        "BaseCash": {
          "format": "double",
          "type": "number"
        },
        "OwnerType": {
          "enum": [
            "IndividualCustomer",
            "InstitutionalCustomer",
            "Combined",
            "EmployeeAccount",
            "MarketMaking",
            "OtherProprietary",
            "Unknown",
            "ErrorAccount",
            "Joint",
            "ForeignIndividual",
            "IRA",
            "MoneyPurchaseOrProfitSharing",
            "CommunityPropertyAccount",
            "CustodialAccount",
            "CorporateAccount",
            "GuardianAccount",
            "InvestmentClubAccount",
            "JointTenantsRightsOfSurvivorship",
            "JointTenantsInCommon",
            "PartnershipAccount",
            "RetirementAccount",
            "SoleProprietor",
            "TrustAccount",
            "InvestmentClub",
            "JointTenantsByEntirety",
            "EstateAccount",
            "ResidentAlienAccount",
            "TransferOnDeathAccount",
            "NonProfitAccount",
            "DVPAccount"
          ],
          "type": "string"
        },
        "DayTradingBuyingPower": {
          "format": "double",
          "type": "number"
        },
        "DayTrades": {
          "format": "int32",
          "type": "integer"
        },
        "SmaBalance": {
          "format": "double",
          "type": "number"
        },
        "HouseCall": {
          "format": "double",
          "type": "number"
        },
        "MaintenanceCall": {
          "format": "double",
          "type": "number"
        },
        "EquityCall": {
          "format": "double",
          "type": "number"
        },
        "InitialCall": {
          "format": "double",
          "type": "number"
        },
        "DayTradeCall": {
          "format": "double",
          "type": "number"
        },
        "CashCall": {
          "format": "double",
          "type": "number"
        },
        "NewHouseCall": {
          "format": "double",
          "type": "number"
        },
        "TradeDayBalance": {
          "format": "double",
          "type": "number"
        },
        "MoneyMarket": {
          "format": "double",
          "type": "number"
        },
        "Cip": {
          "format": "double",
          "type": "number"
        },
        "IsAverageAccount": {
          "type": "boolean"
        },
        "MarginEquity": {
          "format": "double",
          "type": "number"
        },
        "ClearingFirm": {
          "type": "string"
        },
        "ExcessEquity": {
          "format": "double",
          "type": "number"
        },
        "Fdid": {
          "type": "string"
        },
        "DayTraderRate": {
          "format": "double",
          "type": "number"
        },
        "AccountHolder": {
          "type": "string"
        },
        "EquityTotal": {
          "format": "double",
          "type": "number"
        },
        "FixedAccountType": {
          "type": "boolean"
        },
        "SkipClearing": {
          "type": "boolean"
        }
      }
    },
    "UserTradingSettingsModel": {
      "type": "object",
      "properties": {
        "Instruments": {
          "$ref": "#/definitions/InstrumentsSettings"
        },
        "QuantityStepIncrementMultiplier": {
          "format": "int32",
          "type": "integer"
        },
        "PriceStepIncrementMultiplier": {
          "format": "int32",
          "type": "integer"
        },
        "DoNotCloseTradePopupOnOrderPlacement": {
          "type": "boolean"
        },
        "SkipVerifyOrder": {
          "type": "string"
        },
        "SkipVerifyCancelOrder": {
          "type": "string"
        },
        "SkipVerifyClosingPosition": {
          "type": "string"
        },
        "SkipVerifyOrderReplace": {
          "type": "string"
        },
        "SkipPlaceOrderStatus": {
          "type": "string"
        },
        "SkipCancelOrderStatus": {
          "type": "string"
        },
        "SkipClosingPositionStatus": {
          "type": "string"
        },
        "SkipOrderReplaceStatus": {
          "type": "string"
        },
        "MaxStocksQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "MaxOptionsQuantity": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "InstrumentsSettings": {
      "type": "object",
      "properties": {
        "Stocks": {
          "$ref": "#/definitions/StocksInstrumentsSettings"
        },
        "Options": {
          "$ref": "#/definitions/OptionsInstrumentsSettings"
        },
        "Forex": {
          "$ref": "#/definitions/ForexInstrumentsSettings"
        }
      }
    },
    "StocksInstrumentsSettings": {
      "type": "object",
      "properties": {
        "OrderType": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "DurationType": {
          "type": "string"
        },
        "ExchangeType": {
          "type": "string"
        },
        "ExtendedHoursType": {
          "type": "string"
        },
        "AON": {
          "type": "boolean"
        }
      }
    },
    "OptionsInstrumentsSettings": {
      "type": "object",
      "properties": {
        "OrderType": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "DurationType": {
          "type": "string"
        },
        "ExchangeType": {
          "type": "string"
        },
        "ExtendedHoursType": {
          "type": "string"
        },
        "AON": {
          "type": "boolean"
        },
        "Spreads": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ForexInstrumentsSettings": {
      "type": "object",
      "properties": {
        "OrderType": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "DurationType": {
          "type": "string"
        },
        "ExchangeType": {
          "type": "string"
        },
        "ExtendedHoursType": {
          "type": "string"
        },
        "AON": {
          "type": "boolean"
        }
      }
    },
    "ChangeUserPasswordResource": {
      "type": "object",
      "properties": {
        "OldPassword": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "PasswordConfirm": {
          "type": "string"
        }
      }
    },
    "WatchlistModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Type": {
          "enum": [
            "UserList",
            "SystemList",
            "Snapshot"
          ],
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "ModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "Source": {
          "type": "string"
        },
        "ReadOnly": {
          "type": "boolean"
        },
        "SecurityList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityModel"
          }
        }
      }
    },
    "SecurityModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Symbol": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Exchange": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "BaseCurrency": {
          "type": "string"
        },
        "AddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "ModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "Type": {
          "enum": [
            "BankersAcceptance",
            "CertificateOfDeposit",
            "CollateralizeMortgageObligation",
            "CorporateBond",
            "CommercialPaper",
            "CorporatePrivatePlacement",
            "CommonStock",
            "FederalHousingAuthority",
            "FederalHomeLoan",
            "FederalNationalMortgageAssociation",
            "ForeignExchangeContract",
            "Future",
            "GovernmentNationalMortgageAssociation",
            "TreasuriesPlusAgencyDebenture",
            "MutualFund",
            "MortgageInterestOnly",
            "MortgagePrincipleOnly",
            "MortgagePrivatePlacement",
            "MiscellaneousPassThru",
            "MunicipalBond",
            "NoIsitcSecurityType",
            "Option",
            "PreferredStock",
            "RepurchaseAgreement",
            "ReverseRepurchaseAgreement",
            "StudentLoanMarketingAssociation",
            "TimeDeposit",
            "UsTreasuryBill",
            "Warrant",
            "CatsTigersLions",
            "WildcardEntry",
            "ConvertibleBond",
            "MortgageIoette",
            "Index",
            "FakeStockForNonStandartOption",
            "Right",
            "Cryptocurrency",
            "ETF",
            "DepositoryReceipt",
            "CoveredWarrant",
            "Unit"
          ],
          "type": "string"
        },
        "Source": {
          "format": "int32",
          "type": "integer"
        },
        "ParentId": {
          "format": "int32",
          "type": "integer"
        },
        "Unit": {
          "type": "string"
        },
        "OptionType": {
          "enum": [
            "Call",
            "Put",
            "Undefined"
          ],
          "type": "string"
        },
        "ExpirationType": {
          "enum": [
            "Regular",
            "Quarterly",
            "Weekly",
            "Flex",
            "Undefined",
            "Mini",
            "NonStandard"
          ],
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "StrikePrice": {
          "format": "double",
          "type": "number"
        },
        "SeriesId": {
          "format": "int32",
          "type": "integer"
        },
        "UnderlyingSecuritySymbol": {
          "type": "string"
        },
        "ContractSize": {
          "format": "double",
          "type": "number"
        },
        "Sector": {
          "type": "string"
        },
        "Industry": {
          "type": "string"
        },
        "Precision": {
          "format": "int32",
          "type": "integer"
        },
        "VolumePrecision": {
          "format": "int32",
          "type": "integer"
        },
        "Isin": {
          "type": "string"
        },
        "Sedol": {
          "type": "string"
        },
        "Cusip": {
          "type": "string"
        },
        "TickSize": {
          "format": "double",
          "type": "number"
        },
        "MarginRate": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "CreateWatchlistModel": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Securities": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "Tuple[Int32,String]": {
      "type": "object",
      "properties": {
        "m_Item1": {
          "format": "int32",
          "type": "integer"
        },
        "m_Item2": {
          "type": "string"
        }
      }
    },
    "Failed": {
      "type": "object",
      "properties": {
        "State": {
          "type": "string",
          "readOnly": true
        },
        "Step": {
          "type": "string"
        },
        "Reason": {
          "type": "string"
        },
        "ConfirmationToken": {
          "type": "string"
        }
      }
    },
    "Succeed": {
      "type": "object",
      "properties": {
        "Step": {
          "type": "string"
        },
        "Reason": {
          "type": "string"
        },
        "State": {
          "type": "string",
          "readOnly": true
        },
        "ConfirmationToken": {
          "type": "string"
        },
        "Token": {
          "type": "string"
        },
        "PersonalPhrase": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "AccessManager"
    },
    {
      "name": "AccountManagementSettings"
    },
    {
      "name": "AccountRequests"
    },
    {
      "name": "AccountTransferRequests"
    },
    {
      "name": "AchRelationships"
    },
    {
      "name": "Agreements"
    },
    {
      "name": "Applications"
    },
    {
      "name": "Assets"
    },
    {
      "name": "ChangePassword"
    },
    {
      "name": "Country"
    },
    {
      "name": "Documents"
    },
    {
      "name": "DueDiligence"
    },
    {
      "name": "ElectronicDocuments"
    },
    {
      "name": "Exchanges"
    },
    {
      "name": "Feedbacks"
    },
    {
      "name": "Formulas"
    },
    {
      "name": "HistoricalTradeData"
    },
    {
      "name": "ALPHA Hotkeys"
    },
    {
      "name": "Investigations"
    },
    {
      "name": "JotForms"
    },
    {
      "name": "Jwt"
    },
    {
      "name": "Localization"
    },
    {
      "name": "MutualFunds"
    },
    {
      "name": "News"
    },
    {
      "name": "Orders"
    },
    {
      "name": "Patterns"
    },
    {
      "name": "Plaid"
    },
    {
      "name": "Portfolios"
    },
    {
      "name": "Positions"
    },
    {
      "name": "PriceAlerts"
    },
    {
      "name": "Rebalance"
    },
    {
      "name": "Registration"
    },
    {
      "name": "RoboAdvisor"
    },
    {
      "name": "Securities"
    },
    {
      "name": "Streamer"
    },
    {
      "name": "Subscriptions"
    },
    {
      "name": "SyncOrders"
    },
    {
      "name": "Transactions"
    },
    {
      "name": "Transfers"
    },
    {
      "name": "UserAccounts"
    },
    {
      "name": "Users"
    },
    {
      "name": "Watchlists"
    },
    {
      "name": "Login"
    }
  ]
}